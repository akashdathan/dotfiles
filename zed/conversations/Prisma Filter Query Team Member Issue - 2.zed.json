{"id":"6d4703f4-b385-4389-aed2-5ea9af7cd30b","zed":"context","version":"0.4.0","text":"\n\n```ts atom-web/src/server/new-structure/application/use-cases/document-directory/list-documents/map.ts\nimport { Prisma } from \"@prisma/client\";\nimport { EntityPropsFilter, RequestDTOMap } from \"../../../../framework/application/get-many\";\n\nimport { Document } from \"@atom/types\";\nimport { DocumentProps } from \"../../../../domain/document/entities/document.entity\";\nimport { PrismaFilterTransformer } from \"../../../../framework/infrastructure/prisma-utils\";\n\ninterface DocumentQueryProps extends Omit<DocumentProps, \"creationTs\" | \"locationProgramIDs\"> {\n  creationTs: { min: string; max: string };\n  locationProgramIDs: number;\n  siteID: number;\n  buildingID: number;\n  areaID: number;\n  areaDetailID: number;\n  disciplineID: number;\n  typeID: number;\n  levelID: number;\n  subcontractor: string;\n  executingTeamIDs: number;\n}\n\nexport const documentEntityFilterToQueryMap = (filter: EntityPropsFilter<DocumentQueryProps>) =>\n  ({\n    title: PrismaFilterTransformer.fullTextSearch(filter.title),\n    document_number: PrismaFilterTransformer.fullTextSearch(filter.number),\n    searchable_subcontractor: PrismaFilterTransformer.fullTextSearchStartsWith(filter.subcontractor),\n    // created_by: PrismaFilterTransformer.is(filter.createdBy),\n    site: { area_id: PrismaFilterTransformer.is(filter.siteID ?? undefined) },\n    building: { area_id: PrismaFilterTransformer.is(filter.buildingID) },\n    area: { area_id: PrismaFilterTransformer.is(filter.areaID) },\n    area_detail: { area_id: PrismaFilterTransformer.is(filter.areaDetailID ?? undefined) },\n    discipline: { discipline_id: PrismaFilterTransformer.is(filter.disciplineID) },\n    document_type: { document_type_id: PrismaFilterTransformer.is(filter.typeID) },\n    location_level: { level_id: PrismaFilterTransformer.is(filter.levelID) },\n    document_program: {\n      some: {\n        location_program_id: PrismaFilterTransformer.is(filter.locationProgramIDs),\n      },\n    },\n    document_revision: {\n      some: {\n        revision: PrismaFilterTransformer.fullTextSearch(filter.revisions?.revision),\n        file: { extension: PrismaFilterTransformer.is(filter.revisions?.format) },\n      },\n    },\n    latest_revision: {\n      reference: filter.revisions?.reference ? PrismaFilterTransformer.fullTextSearch() : undefined,\n      location_document_purpose_id: filter.revisions?.locationDocumentPurposeID\n        ? PrismaFilterTransformer.is(filter.revisions?.locationDocumentPurposeID)\n        : undefined,\n\n      document_revision_status: {\n        some: {\n          // Only apply this filter if there's a reason to search over `document_revision_status`\n          is_last: filter.revisions?.statuses?.statusType?.type ? true : undefined,\n          document_revision_status_type: {\n            type: PrismaFilterTransformer.is(filter.revisions?.statuses?.statusType?.type),\n          },\n        },\n      },\n    },\n    creation_ts: PrismaFilterTransformer.dateRange({ min: filter.creationTs?.min, max: filter.creationTs?.max }),\n    created_by_company: PrismaFilterTransformer.is(filter.createdByCompany),\n    created_by_user: {\n      id: PrismaFilterTransformer.is(filter.createdBy),\n      team_member: {\n        some: {\n          team_id: PrismaFilterTransformer.is(filter.executingTeamIDs),\n        },\n      },\n    },\n  }) satisfies Prisma.documentWhereInput;\n\nexport const documentRequestToEntityFilterMap: Partial<\n  RequestDTOMap<Document.ReqListLocationDocuments, DocumentQueryProps>\n> = {\n  searchText: [\"title\", \"number\", { revisions: { metadata: \"reference\" } }],\n  title: \"title\",\n  reference: { revisions: { metadata: \"reference\" } },\n  site: \"siteID\",\n  building: \"buildingID\",\n  area: \"areaID\",\n  areaDetail: \"areaDetailID\",\n  discipline: \"disciplineID\",\n  type: \"typeID\",\n  level: \"levelID\",\n  program: \"locationProgramIDs\",\n  revision: { revisions: \"revision\" },\n  purpose: { revisions: { metadata: \"locationDocumentPurposeID\" } },\n  status: { revisions: { statuses: { statusType: \"type\" } } },\n  format: { revisions: \"format\" },\n  number: \"number\",\n  creationTs: \"creationTs\",\n  createdByUserIDs: \"createdBy\",\n  createdByCompanyIDs: \"createdByCompany\",\n  subcontractor: \"subcontractor\",\n  executingTeamIDs: \"executingTeamIDs\",\n};\n```\n\nfor the created_by_user, the team member query is if there existas or if the link if correct, id there is no link i want it to filter out, how to do that\n\n\nTo modify the query so that it filters out records where there is no link between the user and the specified executing team, you need to adjust the `created_by_user` condition. Here's how you can modify it:\n\n```typescript\ncreated_by_user: filter.executingTeamIDs\n  ? {\n      id: PrismaFilterTransformer.is(filter.createdBy),\n      team_member: {\n        some: {\n          team_id: PrismaFilterTransformer.is(filter.executingTeamIDs),\n        },\n      },\n    }\n  : {\n      id: PrismaFilterTransformer.is(filter.createdBy),\n    },\n```\n\nOr if you want to ensure that the user must be linked to the specified team when `executingTeamIDs` is provided, you can use this approach:\n\n```typescript\ncreated_by_user: {\n  id: PrismaFilterTransformer.is(filter.createdBy),\n  ...(filter.executingTeamIDs && {\n    team_member: {\n      some: {\n        team_id: PrismaFilterTransformer.is(filter.executingTeamIDs),\n      },\n    },\n  }),\n},\n```\n\nThis way:\n1. If `executingTeamIDs` is provided, it will only match documents where the user is linked to the specified team\n2. If `executingTeamIDs` is not provided, it will only check the user ID without considering team membership\n3. The query will filter out records where the user exists but is not linked to the specified team when `executingTeamIDs` is provided\n\nChoose the approach that better fits your requirements. The first option is more explicit, while the second one is more concise.\nshould it be some or every?\n\nIt depends on your business requirements:\n\n- Use `some` if you want to match documents where the user is a member of at least one of the specified teams (more permissive)\n- Use `every` if you want to match documents where the user must be a member of all the specified teams (more restrictive)\n\nGiven that `executingTeamIDs` appears to be a single number in your interface:\n```typescript\ninterface DocumentQueryProps {\n  executingTeamIDs: number;\n}\n```\n\n`some` is the correct choice here since you're only checking against a single team ID. If you were checking against multiple team IDs and wanted to ensure the user belongs to all of them, then you would use `every`.\n\nIf you need to check against multiple teams in the future, you would first need to change the type to an array:\n```typescript\nexecutingTeamIDs: number[];\n```\n\nAnd then decide based on your requirements:\n- `some`: User belongs to at least one of the teams\n- `every`: User belongs to all of the teams\n\nBut for the current case with a single team ID, `some` is the appropriate choice.\nit is showing all the documents, regardless of the team member, how to fix that\nIf it's showing all documents regardless of team membership, we need to make the query more strict. Here's how to fix it:\n\n```typescript\ncreated_by_user: filter.executingTeamIDs\n  ? {\n      AND: [\n        { id: PrismaFilterTransformer.is(filter.createdBy) },\n        {\n          team_member: {\n            some: {\n              team_id: PrismaFilterTransformer.is(filter.executingTeamIDs),\n            },\n          },\n        },\n      ],\n    }\n  : {\n      id: PrismaFilterTransformer.is(filter.createdBy),\n    },\n```\n\nOr a more direct approach:\n\n```typescript\nAND: [\n  // ... other conditions ...\n  filter.executingTeamIDs\n    ? {\n        created_by_user: {\n          team_member: {\n            some: {\n              team_id: PrismaFilterTransformer.is(filter.executingTeamIDs),\n            },\n          },\n        },\n      }\n    : {},\n],\n```\n\nThe second approach might be more effective because it puts the team membership condition at the root level of the query. This ensures that documents will only be returned if they match the team membership condition.\n\nPut this condition in the main query object or wrap the entire query in an `AND` array to ensure all conditions are properly enforced.\nthis is the full query which i logged\n\nBackend] DocumentRepo.getMany query {\n[Backend]   \"AND\": [\n[Backend]     {},\n[Backend]     {\n[Backend]       \"is_deleted\": 0\n[Backend]     },\n[Backend]     {\n[Backend]       \"AND\": [\n[Backend]         {\n[Backend]           \"created_by_user\": {\n[Backend]             \"team_member\": {\n[Backend]               \"some\": {\n[Backend]                 \"team_id\": {\n[Backend]                   \"in\": [\n[Backend]                     4\n[Backend]                   ]\n[Backend]                 }\n[Backend]               }\n[Backend]             }\n[Backend]           }\n[Backend]         }\n[Backend]       ]\n[Backend]     },\n[Backend]     {\n[Backend]       \"location_id\": 1\n[Backend]     },\n[Backend]     {},\n[Backend]     {\n[Backend]       \"OR\": [\n[Backend]         {},\n[Backend]         {},\n[Backend]         {},\n[Backend]       ]\n[Backend]     }\n[Backend]   ]\n[Backend] }\n\nThe issue might be with the empty objects in the query. Let's clean it up. Here's how the query should be structured:\n\n```typescript\n{\n  AND: [\n    // Remove empty objects\n    {\n      is_deleted: 0\n    },\n    {\n      created_by_user: {\n        team_member: {\n          some: {\n            team_id: PrismaFilterTransformer.is(filter.executingTeamIDs)\n          }\n        }\n      }\n    },\n    {\n      location_id: 1\n    }\n  ].filter(Boolean) // This removes any empty objects or undefined values\n}\n```\n\nYou should also verify these things:\n1. Make sure the `team_member` table has the correct relationships set up\n2. Verify that the data exists in the `team_member` table linking users to teams\n3. Double check that team_id 4 has associated members\n\nYou can verify the data with direct SQL queries:\n```sql\nSELECT * FROM team_member WHERE team_id = 4;\n```\n\nAlso, you might want to add logging to see the actual results:\n```sql\nSELECT d.* \nFROM document d\nJOIN created_by_user u ON d.created_by_user_id = u.id\nJOIN team_member tm ON tm.user_id = u.id\nWHERE tm.team_id = 4;\n```\n\nThis will help you understand if the issue is with the data or the query structure.\n\nIf you want to modify your existing code, you could do:\n\n```typescript\ndocumentEntityFilterToQueryMap = (filter: EntityPropsFilter<DocumentQueryProps>) => {\n  const baseQuery = {\n    // ... your existing conditions ...\n    created_by_user: filter.executingTeamIDs ? {\n      team\n              \n```prisma atom-web/prisma/schema.prisma\ngenerator client {\n  provider        = \"prisma-client-js\"\n  previewFeatures = [\"fullTextIndex\", \"fullTextSearch\", \"metrics\", \"views\", \"relationJoins\"]\n  binaryTargets   = [\"native\", \"debian-openssl-3.0.x\", \"linux-arm64-openssl-3.0.x\"]\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel area {\n  area_id                     Int                           @id @default(autoincrement()) @db.UnsignedInt\n  location_id                 Int                           @db.UnsignedInt\n  area_name                   String                        @db.VarChar(64)\n  area_category_id            Int                           @db.UnsignedInt\n  parent_area_id              Int?                          @db.UnsignedInt\n  abbreviation                String?                       @db.VarChar(16)\n  area_category               area_category                 @relation(fields: [area_category_id], references: [area_category_id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_area_category\")\n  location                    location                      @relation(fields: [location_id], references: [location_id], map: \"fk_area_location\")\n  area                        area?                         @relation(\"areaToarea\", fields: [parent_area_id], references: [area_id], onDelete: Restrict, map: \"fk_area_parent\")\n  other_area                  area[]                        @relation(\"areaToarea\")\n  cost_sub_project            cost_sub_project[]\n  document                    document[]\n  document_area_detail        document[]                    @relation(\"document_area_detail_idToarea\")\n  document_building           document[]                    @relation(\"document_building_idToarea\")\n  document_site               document[]                    @relation(\"document_site_idToarea\")\n  document_additional_area    document_additional_area[]\n  issue                       issue[]\n  project_area                project_area[]\n  project_planning_subproject project_planning_subproject[]\n  request_form_value          request_form_value[]\n  request_recipient           request_recipient[]\n  request_type_user           request_type_user[]\n  scope                       scope[]\n  team_member_area_discipline team_member_area_discipline[]\n\n  @@unique([parent_area_id, abbreviation], map: \"unique_abbreviation\")\n  @@unique([parent_area_id, area_name], map: \"unique_area_name\")\n  @@index([location_id], map: \"fk_area_location\")\n  @@index([parent_area_id], map: \"fk_area_parent\")\n  @@index([area_category_id], map: \"fk_area_category\")\n}\n\nmodel budget_code {\n  budget_code_id Int     @id @default(autoincrement()) @db.UnsignedInt\n  budget_code    String  @db.VarChar(45)\n  description    String? @db.VarChar(500)\n}\n\nmodel csi_group {\n  group_id  Int            @id @default(autoincrement()) @db.UnsignedInt\n  name      String         @db.VarChar(255)\n  subgroups csi_subgroup[]\n}\n\nmodel csi_subgroup {\n  subgroup_id Int            @id @default(autoincrement()) @db.UnsignedInt\n  group_id    Int            @db.UnsignedInt\n  name        String         @db.VarChar(255)\n  divisions   csi_division[]\n  group       csi_group      @relation(fields: [group_id], references: [group_id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_group\")\n\n  @@index([group_id], map: \"fk_group\")\n}\n\nmodel csi_division {\n  division_id           Int                      @id @default(autoincrement()) @db.UnsignedInt\n  subgroup_id           Int                      @db.UnsignedInt\n  number                String                   @db.VarChar(4)\n  title                 String                   @db.VarChar(255)\n  asset                 asset[]\n  cost_line_item        cost_line_item[]\n  cost_elements         csi_cost_element[]\n  cost_element_groups   csi_cost_element_group[]\n  subgroup              csi_subgroup             @relation(fields: [subgroup_id], references: [subgroup_id], map: \"fk_subgroup\")\n  document_csi_division document_csi_division[]\n\n  @@index([subgroup_id], map: \"fk_subgroup\")\n}\n\nmodel csi_cost_element_group {\n  cost_element_group_id Int                @id @default(autoincrement()) @db.UnsignedInt\n  division_id           Int?               @db.UnsignedInt\n  name                  String             @db.VarChar(255)\n  cost_elements         csi_cost_element[]\n  division              csi_division?      @relation(fields: [division_id], references: [division_id], onDelete: Restrict, map: \"fk_division\")\n\n  @@index([division_id], map: \"fk_division\")\n}\n\nmodel csi_cost_element {\n  cost_element_id       Int                    @id @default(autoincrement()) @db.UnsignedInt\n  division_id           Int                    @db.UnsignedInt\n  cost_element_group_id Int                    @db.UnsignedInt\n  number                String                 @db.VarChar(100)\n  title                 String                 @db.VarChar(255)\n  asset                 asset[]\n  cost_line_item        cost_line_item[]\n  cost_element_group    csi_cost_element_group @relation(fields: [cost_element_group_id], references: [cost_element_group_id], map: \"fk_cost_element_group_id\")\n  division              csi_division           @relation(fields: [division_id], references: [division_id], map: \"fk_division_id\")\n\n  @@index([cost_element_group_id], map: \"fk_cost_element_group_id\")\n  @@index([division_id], map: \"fk_division_id\")\n}\n\nmodel cost_design_stage {\n  cost_design_stage_id              Int             @id @default(autoincrement()) @db.UnsignedInt\n  design_stage                      String          @db.VarChar(45)\n  class                             Int             @db.UnsignedTinyInt\n  definition                        String          @db.VarChar(45)\n  accuracy                          String          @db.VarChar(45)\n  recomended_contingency_percentage Decimal         @db.Decimal(10, 6)\n  cost_estimate                     cost_estimate[]\n}\n\nmodel cost_estimate {\n  cost_estimate_id                                 Int                             @id @default(autoincrement()) @db.UnsignedInt\n  cost_sub_project_id                              Int                             @db.UnsignedInt\n  description                                      String?                         @db.MediumText\n  cost_design_stage_id                             Int                             @default(1) @db.UnsignedInt\n  default_design_contingency_percentage            Decimal?                        @db.Decimal(10, 6)\n  default_construction_contingency_percentage      Decimal?                        @db.Decimal(10, 6)\n  creation_ts                                      DateTime                        @default(now()) @db.Timestamp(0)\n  update_ts                                        DateTime                        @default(now()) @db.Timestamp(0)\n  qualifications_and_assumptions                   String?                         @db.MediumText\n  default_overhead_profit_cost_percentage          Decimal?                        @db.Decimal(10, 6)\n  default_shift_hours_id                           Int?                            @db.UnsignedInt\n  default_productivity_factor                      Decimal?                        @default(1.0000) @db.Decimal(10, 4)\n  revision                                         Int                             @default(0)\n  parent_cost_estimate_id                          Int?                            @db.UnsignedInt\n  is_public                                        Boolean                         @default(false)\n  created_by                                       Int                             @db.UnsignedInt\n  updated_by                                       Int?                            @db.UnsignedInt\n  asset_price                                      asset_price[]\n  cost_design_stage                                cost_design_stage               @relation(fields: [cost_design_stage_id], references: [cost_design_stage_id], map: \"fk__cost_design_stage\")\n  cost_sub_project                                 cost_sub_project                @relation(fields: [cost_sub_project_id], references: [cost_sub_project_id], onDelete: Cascade, map: \"fk__cost_estimate_subproject\")\n  created_by_user                                  new_user                        @relation(\"cost_estimate_created_byTouser\", fields: [created_by], references: [id], map: \"fk_cost_estimate_createdby\")\n  cost_estimate                                    cost_estimate?                  @relation(\"cost_estimateTocost_estimate\", fields: [parent_cost_estimate_id], references: [cost_estimate_id], map: \"fk_cost_estimate_parent\")\n  other_cost_estimate                              cost_estimate[]                 @relation(\"cost_estimateTocost_estimate\")\n  updated_by_user                                  new_user?                       @relation(\"cost_estimate_updated_byTouser\", fields: [updated_by], references: [id], onDelete: Restrict, map: \"fk_cost_estimate_updatedby\")\n  cost_estimate_funding_request                    cost_estimate_funding_request[]\n  cost_scope                                       cost_scope[]\n  cost_sub_project_with_this_primary_cost_estimate cost_sub_project?               @relation(\"cost_estimateTocost_sub_project_primary_cost_estimate_id\")\n  indirect_cost                                    indirect_cost[]\n  project                                          project[]\n  request_form_value                               request_form_value[]\n  cost_estimate_total                              cost_estimate_total?\n\n  @@index([cost_design_stage_id], map: \"fk__cost_design_stage\")\n  @@index([cost_sub_project_id], map: \"fk__cost_estimate_subproject\")\n  @@index([created_by], map: \"fk_cost_estimate_createdby\")\n  @@index([updated_by], map: \"fk_cost_estimate_updatedby\")\n  @@index([parent_cost_estimate_id], map: \"fk_cost_estimate_parent\")\n}\n\nmodel cost_line_item {\n  cost_line_item_id                   Int               @id @default(autoincrement()) @db.UnsignedInt\n  cost_scope_id                       Int               @db.UnsignedInt\n  /// 0-based index\n  position                            Int               @db.UnsignedInt\n  description                         String?           @db.MediumText\n  csi_division_id                     Int?              @db.UnsignedInt\n  csi_cost_element_id                 Int?              @db.UnsignedInt\n  shift_hours_id                      Int?              @db.UnsignedInt\n  discipline_id                       Int?              @db.UnsignedInt\n  quantity                            Decimal?          @db.Decimal(12, 4)\n  unit_of_measure_id                  Int?              @db.UnsignedInt\n  unit_man_hour                       Decimal?          @db.Decimal(12, 4)\n  productivity_factor                 Decimal?          @default(1.0000) @db.Decimal(12, 4)\n  labor_rate                          Decimal?          @db.Decimal(12, 4)\n  indirect_labor_cost_percentage      Decimal?          @db.Decimal(10, 6)\n  material_cost                       Decimal?          @db.Decimal(12, 4)\n  equipment_cost                      Decimal?          @db.Decimal(12, 4)\n  overhead_profit_cost_percentage     Decimal?          @db.Decimal(10, 6)\n  design_contingency_percentage       Decimal?          @db.Decimal(10, 6)\n  construction_contingency_percentage Decimal?          @db.Decimal(10, 6)\n  notes                               String?           @db.MediumText\n  creation_ts                         DateTime          @default(now()) @db.Timestamp(0)\n  update_ts                           DateTime          @default(now()) @db.Timestamp(0)\n  unit_man_hour_expression            String?           @db.VarChar(128)\n  material_cost_expression            String?           @db.VarChar(128)\n  equipment_cost_expression           String?           @db.VarChar(128)\n  quantity_expression                 String?           @db.VarChar(128)\n  wastage_percentage                  Decimal?          @db.Decimal(10, 6)\n  asset_id                            Int?              @db.UnsignedInt\n  created_by                          Int               @db.UnsignedInt\n  updated_by                          Int?              @db.UnsignedInt\n  asset                               asset?            @relation(fields: [asset_id], references: [asset_id], onDelete: Restrict, map: \"fk_cost_line_item_asset\")\n  created_by_user                     new_user          @relation(\"cost_line_item_created_byTouser\", fields: [created_by], references: [id], map: \"fk_cost_line_item_createdby\")\n  cost_scope                          cost_scope        @relation(fields: [cost_scope_id], references: [cost_scope_id], onDelete: Cascade, map: \"fk_cost_line_item_csi\")\n  csi_cost_element                    csi_cost_element? @relation(fields: [csi_cost_element_id], references: [cost_element_id], onDelete: Restrict, map: \"fk_cost_line_item_csi_cost_element\")\n  csi_division                        csi_division?     @relation(fields: [csi_division_id], references: [division_id], onDelete: Restrict, map: \"fk_cost_line_item_csi_division\")\n  discipline                          discipline?       @relation(fields: [discipline_id], references: [discipline_id], onDelete: Restrict, map: \"fk_cost_line_item_discipline\")\n  shift_hours                         shift_hours?      @relation(fields: [shift_hours_id], references: [shift_hours_id], onDelete: Restrict, map: \"fk_cost_line_item_shift_hours\")\n  updated_by_user                     new_user?         @relation(\"cost_line_item_updated_byTouser\", fields: [updated_by], references: [id], onDelete: Restrict, map: \"fk_cost_line_item_updatedby\")\n  unit_of_measure                     unit_of_measure?  @relation(fields: [unit_of_measure_id], references: [unit_of_measure_id], onDelete: Restrict, map: \"fk_unit_of_measure\")\n\n  @@index([cost_scope_id], map: \"fk_cost_line_item_cost_scope_idx\")\n  @@index([csi_division_id], map: \"fk_cost_line_item_csi\")\n  @@index([discipline_id], map: \"fk_cost_line_item_discipline_idx\")\n  @@index([shift_hours_id], map: \"fk_cost_line_item_shift_hours_idx\")\n  @@index([unit_of_measure_id], map: \"fk_unit_of_measure_idx\")\n  @@index([csi_cost_element_id], map: \"fk_cost_line_item_csi_cost_element\")\n  @@index([asset_id], map: \"fk_cost_line_item_asset\")\n  @@index([created_by], map: \"fk_cost_line_item_createdby\")\n  @@index([updated_by], map: \"fk_cost_line_item_updatedby\")\n}\n\nmodel cost_project {\n  cost_project_id          Int                        @id @default(autoincrement()) @db.UnsignedInt\n  location_id              Int                        @db.UnsignedInt\n  cost_project_type_id     Int                        @db.UnsignedInt\n  name                     String                     @db.VarChar(256)\n  code                     String?                    @db.VarChar(45)\n  currency_id              Int                        @db.UnsignedInt\n  creation_ts              DateTime                   @default(now()) @db.Timestamp(0)\n  update_ts                DateTime                   @default(now()) @db.Timestamp(0)\n  description              String?                    @db.MediumText\n  created_by               Int                        @db.UnsignedInt\n  updated_by               Int?                       @db.UnsignedInt\n  created_by_user          new_user                   @relation(\"cost_project_created_byTouser\", fields: [created_by], references: [id], map: \"fk_cost_project_createdby\")\n  currency                 l360_currency              @relation(fields: [currency_id], references: [currency_id], onDelete: NoAction, map: \"fk_cost_project_l360_currency\")\n  location                 location                   @relation(fields: [location_id], references: [location_id], map: \"fk_cost_project_location\")\n  updated_by_user          new_user?                  @relation(\"cost_project_updated_byTouser\", fields: [updated_by], references: [id], onDelete: Restrict, map: \"fk_cost_project_updatedby\")\n  cost_project_attachment  cost_project_attachment[]\n  cost_project_stakeholder cost_project_stakeholder[]\n  cost_sub_project         cost_sub_project[]\n  funding_request          funding_request[]\n\n  @@index([created_by], map: \"fk_cost_project_createdby\")\n  @@index([location_id], map: \"fk_cost_project_location\")\n  @@index([updated_by], map: \"fk_cost_project_updatedby\")\n  @@index([currency_id], map: \"fk_cost_project_l360_currency\")\n}\n\nmodel cost_project_type {\n  cost_project_type_id Int    @id @default(autoincrement()) @db.UnsignedInt\n  type                 String @db.VarChar(45)\n}\n\nmodel cost_scope {\n  cost_scope_id    Int              @id @default(autoincrement()) @db.UnsignedInt\n  cost_estimate_id Int              @db.UnsignedInt\n  /// 0-based index\n  position         Int              @db.UnsignedInt\n  description      String?          @db.MediumText\n  notes            String?          @db.MediumText\n  created_by       Int              @db.UnsignedInt\n  updated_by       Int?             @db.UnsignedInt\n  cost_line_item   cost_line_item[]\n  cost_estimate    cost_estimate    @relation(fields: [cost_estimate_id], references: [cost_estimate_id], onDelete: Cascade, map: \"fk__cost_scope_estimate\")\n  created_by_user  new_user         @relation(\"cost_scope_created_byTouser\", fields: [created_by], references: [id], map: \"fk_cost_scope_createdby\")\n  updated_by_user  new_user?        @relation(\"cost_scope_updated_byTouser\", fields: [updated_by], references: [id], onDelete: Restrict, map: \"fk_cost_scope_updatedby\")\n\n  @@index([cost_estimate_id], map: \"fk__cost_scope_estimate\")\n  @@index([created_by], map: \"fk_cost_scope_createdby\")\n  @@index([updated_by], map: \"fk_cost_scope_updatedby\")\n}\n\nmodel cost_sub_project {\n  cost_sub_project_id      Int                     @id @default(autoincrement()) @db.UnsignedInt\n  cost_project_id          Int                     @db.UnsignedInt\n  area_id                  Int?                    @db.UnsignedInt\n  name                     String                  @db.VarChar(256)\n  code                     String?                 @db.VarChar(45)\n  description              String?                 @db.MediumText\n  primary_cost_estimate_id Int?                    @unique(map: \"primary_cost_estimate_id\") @db.UnsignedInt\n  creation_ts              DateTime                @default(now()) @db.Timestamp(0)\n  update_ts                DateTime                @default(now()) @db.Timestamp(0)\n  created_by               Int                     @db.UnsignedInt\n  updated_by               Int?                    @db.UnsignedInt\n  cost_estimate            cost_estimate[]\n  cost_project             cost_project            @relation(fields: [cost_project_id], references: [cost_project_id], onDelete: Cascade, onUpdate: NoAction, map: \"fk__cost_sub_project_project\")\n  created_by_user          new_user                @relation(\"cost_sub_project_created_byTouser\", fields: [created_by], references: [id], map: \"fk_cost_sub_project_createdby\")\n  primary_cost_estimate    cost_estimate?          @relation(\"cost_estimateTocost_sub_project_primary_cost_estimate_id\", fields: [primary_cost_estimate_id], references: [cost_estimate_id], onUpdate: NoAction, map: \"fk_cost_sub_project_primary_cost_estimate\")\n  updated_by_user          new_user?               @relation(\"cost_sub_project_updated_byTouser\", fields: [updated_by], references: [id], onDelete: Restrict, map: \"fk_cost_sub_project_updatedby\")\n  area                     area?                   @relation(fields: [area_id], references: [area_id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_sub_project_area\")\n  cost_sub_project_total   cost_sub_project_total?\n\n  @@index([cost_project_id], map: \"fk__cost_sub_project_project\")\n  @@index([created_by], map: \"fk_cost_sub_project_createdby\")\n  @@index([updated_by], map: \"fk_cost_sub_project_updatedby\")\n  @@index([area_id], map: \"fk_sub_project_area\")\n}\n\nmodel discipline {\n  discipline_id           Int                   @id @default(autoincrement()) @db.UnsignedInt\n  discipline_name         String                @db.VarChar(255)\n  type                    String                @unique(map: \"uk_discipline_type\") @db.VarChar(255)\n  discipline_abbreviation String?               @unique(map: \"uk_discipline_abbreviation\") @db.VarChar(16)\n  asset                   asset[]\n  cost_line_item          cost_line_item[]\n  document                document[]\n  issue_discipline        issue_discipline[]\n  labor_rate              labor_rate[]\n  location_discipline     location_discipline[]\n  request_form_value      request_form_value[]\n  scope_discipline        scope_discipline[]\n  task                    task[]\n}\n\nmodel labor_rate {\n  shift_hours_id   Int           @db.UnsignedInt\n  discipline_id    Int           @db.UnsignedInt\n  labor_rate       Decimal?      @db.Decimal(10, 2)\n  location_id      Int           @db.UnsignedInt\n  creation_ts      DateTime      @default(now()) @db.Timestamp(0)\n  update_ts        DateTime      @default(now()) @db.Timestamp(0)\n  operation_log_id Int           @unique(map: \"operation_log_id\") @db.UnsignedInt\n  created_by       Int           @db.UnsignedInt\n  updated_by       Int?          @db.UnsignedInt\n  created_by_user  new_user      @relation(\"labor_rate_created_byTouser\", fields: [created_by], references: [id], map: \"fk_labor_rate_created_by_user\")\n  discipline       discipline    @relation(fields: [discipline_id], references: [discipline_id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_labor_rate_discipline\")\n  location         location      @relation(fields: [location_id], references: [location_id], map: \"fk_labor_rate_location\")\n  operation_log    operation_log @relation(fields: [operation_log_id], references: [operation_log_id], map: \"fk_labor_rate_operation_log\")\n  updated_by_user  new_user?     @relation(\"labor_rate_updated_byTouser\", fields: [updated_by], references: [id], onDelete: Restrict, map: \"fk_labor_rate_updated_by_user\")\n  shift_hours      shift_hours   @relation(fields: [shift_hours_id], references: [shift_hours_id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_shift_hours\")\n\n  @@id([location_id, discipline_id, shift_hours_id])\n  @@index([discipline_id], map: \"fk_labor_rate_discipline\")\n  @@index([shift_hours_id], map: \"fk_shift_hours\")\n  @@index([created_by], map: \"fk_labor_rate_created_by_user\")\n  @@index([updated_by], map: \"fk_labor_rate_updated_by_user\")\n}\n\nmodel location {\n  location_id                                  Int                                            @id @default(autoincrement()) @db.UnsignedInt\n  description                                  String                                         @db.VarChar(100)\n  creation_ts                                  DateTime                                       @default(now()) @db.Timestamp(0)\n  l360_location_id                             Int?                                           @unique(map: \"fk_location_l360_location_id_unique\") @db.UnsignedInt\n  update_ts                                    DateTime?                                      @db.Timestamp(0)\n  name                                         String?                                        @db.VarChar(100)\n  created_by                                   Int                                            @db.UnsignedInt\n  updated_by                                   Int?                                           @db.UnsignedInt\n  access_request                               access_request[]\n  area                                         area[]\n  asset                                        asset[]\n  cost_project                                 cost_project[]\n  document                                     document[]\n  document_package                             document_package[]\n  document_submittal_category                  document_submittal_category[]\n  document_submittal_detail                    document_submittal_detail[]\n  document_submittal_type                      document_submittal_type[]\n  issue                                        issue[]\n  labor_rate                                   labor_rate[]\n  lead                                         lead[]\n  created_by_user                              new_user                                       @relation(\"location_created_byTouser\", fields: [created_by], references: [id], map: \"fk_location_created_by\")\n  l360_location                                l360_location?                                 @relation(fields: [l360_location_id], references: [trt_id], onDelete: Restrict, map: \"fk_location_l360_location_id\")\n  updated_by_user                              new_user?                                      @relation(fields: [updated_by], references: [id], onDelete: Restrict, map: \"fk_location_updated_by\")\n  location_country                             location_country[]\n  location_country_lead_questionnaire_template location_country_lead_questionnaire_template[]\n  location_discipline                          location_discipline[]\n  location_document_field_type                 location_document_field_type[]\n  location_document_numbering_scheme           location_document_numbering_scheme?\n  location_document_purpose                    location_document_purpose[]\n  location_document_type                       location_document_type[]\n  location_issue_type                          location_issue_type[]\n  location_level                               location_level[]\n  location_program                             location_program[]\n  location_review_setting                      location_review_setting[]\n  location_scope_reviewer                      location_scope_reviewer[]\n  location_warp_entity                         location_warp_entity[]\n  location_warp_supplier                       location_warp_supplier[]\n  location_warp_supplier_user                  location_warp_supplier_user[]\n  notification                                 notification[]\n  project                                      project[]\n  request_type                                 request_type[]\n  review_template                              review_template[]\n  scope                                        scope[]\n  scope_review_template                        scope_review_template[]\n  task                                         task[]\n  team                                         team[]\n  user_role                                    user_role[]\n  user_settings                                user_settings[]\n\n  @@index([updated_by], map: \"fk_location_updated_by\")\n  @@index([created_by], map: \"fk_location_created_by\")\n}\n\nmodel permission {\n  permission_id Int    @id @default(autoincrement()) @db.UnsignedInt\n  role_id       Int    @db.UnsignedInt\n  action        String @db.VarChar(45)\n  subject       String @db.VarChar(45)\n  role          role   @relation(fields: [role_id], references: [role_id], map: \"permission\")\n\n  @@index([role_id], map: \"permission_idx\")\n}\n\nmodel role {\n  role_id    Int            @id @default(autoincrement()) @db.UnsignedInt\n  name       String         @db.VarChar(45)\n  level      role_level     @default(location)\n  user_type  role_user_type @default(internal)\n  permission permission[]\n  user_role  user_role[]\n}\n\nmodel scope {\n  scope_id                      Int                             @id @default(autoincrement()) @db.UnsignedInt\n  description                   String?                         @db.MediumText\n  creation_ts                   DateTime                        @default(now()) @db.Timestamp(0)\n  update_ts                     DateTime                        @default(now()) @db.Timestamp(0)\n  location_id                   Int                             @default(0) @db.UnsignedInt\n  project_id                    Int?                            @db.UnsignedInt\n  title                         String                          @db.VarChar(255)\n  area_id                       Int                             @db.UnsignedInt\n  rationale_id                  Int                             @db.UnsignedInt\n  compensation_id               Int?                            @db.UnsignedInt\n  spend_amount                  Decimal?                        @db.Decimal(28, 2)\n  review_flow_id                Int                             @db.UnsignedInt\n  operation_log_id              Int                             @unique(map: \"operation_log_id\") @db.UnsignedInt\n  review_template_id            Int                             @db.UnsignedInt\n  status_id                     Int                             @default(1) @db.UnsignedInt\n  spend_category_id             Int?                            @db.UnsignedInt\n  competitiveness_id            Int?                            @db.UnsignedInt\n  design_change_notice          String?                         @db.VarChar(128)\n  priority                      scope_priority?                 @default(undetermined)\n  request_id                    Int?                            @db.UnsignedInt\n  created_by                    Int                             @db.UnsignedInt\n  updated_by                    Int                             @db.UnsignedInt\n  executing_team_id             Int?                            @db.UnsignedInt\n  comments                      comment[]\n  issue                         issue[]\n  notification                  notification[]\n  request_form_value            request_form_value[]\n  saving                        saving[]\n  request                       request?                        @relation(fields: [request_id], references: [request_id], onDelete: NoAction, map: \"fk_request_id\")\n  area                          area                            @relation(fields: [area_id], references: [area_id], map: \"fk_scope_area\")\n  scope_compensation            scope_compensation?             @relation(fields: [compensation_id], references: [scope_compensation_id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_scope_compensation\")\n  scope_competitiveness         scope_competitiveness?          @relation(fields: [competitiveness_id], references: [scope_competitiveness_id], onDelete: Restrict, map: \"fk_scope_competitiveness\")\n  created_by_user               new_user                        @relation(\"scope_created_byTouser\", fields: [created_by], references: [id], map: \"fk_scope_created_by\")\n  location                      location                        @relation(fields: [location_id], references: [location_id], map: \"fk_scope_location\")\n  operation_log                 operation_log                   @relation(fields: [operation_log_id], references: [operation_log_id], map: \"fk_scope__operation_log\")\n  project                       project?                        @relation(fields: [project_id], references: [project_id], onDelete: Restrict, map: \"fk_scope_project\")\n  scope_rationale               scope_rationale                 @relation(fields: [rationale_id], references: [scope_rationale_id], map: \"fk_scope_rationale\")\n  review_flow                   scope_review_flow               @relation(fields: [review_flow_id], references: [review_flow_id], map: \"fk_scope_review_flow\")\n  scope_review_template         scope_review_template           @relation(fields: [review_template_id], references: [scope_review_template_id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_scope_scope_review_template\")\n  spend_category                spend_category?                 @relation(fields: [spend_category_id], references: [spend_category_id], onDelete: Restrict, map: \"fk_scope_spend_category\")\n  current_status                scope_status_type               @relation(fields: [status_id], references: [scope_status_type_id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_scope_status_type\")\n  executing_team                team?                           @relation(fields: [executing_team_id], references: [id], onDelete: Restrict, map: \"fk_scope_team\")\n  updated_by_user               new_user                        @relation(\"scope_updated_byTouser\", fields: [updated_by], references: [id], map: \"fk_scope_updated_by\")\n  scope_attachment              scope_attachment[]\n  scope_discipline              scope_discipline[]\n  scope_document_revision       scope_document_revision[]\n  scope_milestone               scope_milestone[]\n  scope_purchase_order          scope_purchase_order[]\n  scope_reviewer                scope_reviewer[]\n  scope_spend_type              scope_spend_type[]\n  scope_stakeholder             scope_stakeholder[]\n  scope_stakeholder_team_member scope_stakeholder_team_member[]\n  scope_status                  scope_status[]\n  scope_supplier                scope_supplier[]\n  task                          task[]\n  user_role                     user_role[]\n\n  @@index([scope_id], map: \"fk_scope_idx\")\n  @@index([location_id], map: \"fk_scope_location\")\n  @@index([created_by], map: \"fk_scope_created_by\")\n  @@index([updated_by], map: \"fk_scope_updated_by\")\n  @@index([area_id], map: \"fk_scope_area\")\n  @@index([rationale_id], map: \"fk_scope_rationale\")\n  @@index([compensation_id], map: \"fk_scope_compensation\")\n  @@index([review_template_id], map: \"fk_scope_scope_review_template\")\n  @@index([status_id], map: \"fk_scope_status_type\")\n  @@index([project_id], map: \"fk_scope_project\")\n  @@index([spend_category_id], map: \"fk_scope_spend_category\")\n  @@index([competitiveness_id], map: \"fk_scope_competitiveness\")\n  @@index([request_id], map: \"fk_request_id\")\n  @@index([review_flow_id], map: \"fk__scope_review_step_id\")\n  @@index([executing_team_id], map: \"fk_scope_team\")\n}\n\nmodel shift_hours {\n  shift_hours_id Int              @id @db.UnsignedInt\n  name           String           @db.VarChar(45)\n  value          Int\n  default        Int?             @default(0) @db.TinyInt\n  cost_line_item cost_line_item[]\n  labor_rate     labor_rate[]\n}\n\nmodel unit_of_measure {\n  unit_of_measure_id Int              @id @default(autoincrement()) @db.UnsignedInt\n  symbol             String           @db.VarChar(5)\n  name               String           @db.VarChar(45)\n  description        String?          @db.MediumText\n  asset              asset[]\n  attribute          attribute[]\n  cost_line_item     cost_line_item[]\n}\n\nmodel indirect_cost_type {\n  indirect_cost_type_id Int             @id @default(autoincrement()) @db.UnsignedInt\n  type                  String          @db.VarChar(45)\n  indirect_cost         indirect_cost[]\n}\n\nmodel indirect_cost {\n  indirect_cost_id                  Int                             @id @default(autoincrement()) @db.UnsignedInt\n  cost_estimate_id                  Int                             @db.UnsignedInt\n  indirect_cost_type_id             Int?                            @db.UnsignedInt\n  indirect_cost_calculation_type_id Int?                            @db.UnsignedInt\n  indirect_cost_percentage          Decimal?                        @db.Decimal(10, 6)\n  direct_labor_cost                 Decimal?                        @db.Decimal(13, 2)\n  material_cost                     Decimal?                        @db.Decimal(13, 2)\n  equipment_cost                    Decimal?                        @db.Decimal(13, 2)\n  overhead_profit_cost              Decimal?                        @db.Decimal(13, 2)\n  notes                             String?                         @db.MediumText\n  description                       String?                         @db.VarChar(256)\n  cost_estimate                     cost_estimate                   @relation(fields: [cost_estimate_id], references: [cost_estimate_id], onDelete: Cascade, map: \"fk_cost_estimate_id\")\n  indirect_cost_calculation_type    indirect_cost_calculation_type? @relation(fields: [indirect_cost_calculation_type_id], references: [indirect_cost_calculation_type_id], onDelete: Restrict, onUpdate: Restrict, map: \"fk_indirect_cost_calculation_type_id\")\n  indirect_cost_type                indirect_cost_type?             @relation(fields: [indirect_cost_type_id], references: [indirect_cost_type_id], onDelete: Restrict, map: \"fk_indirect_cost_type_id\")\n\n  @@index([cost_estimate_id], map: \"fk_cost_estimate_id\")\n  @@index([indirect_cost_type_id], map: \"fk_indirect_cost_type_id\")\n  @@index([indirect_cost_calculation_type_id], map: \"fk_indirect_cost_calculation_type_id\")\n}\n\nmodel indirect_cost_calculation_type {\n  indirect_cost_calculation_type_id Int             @id @default(autoincrement()) @db.UnsignedInt\n  type                              String          @db.VarChar(45)\n  indirect_cost                     indirect_cost[]\n}\n\nmodel cost_estimate_status {\n  cost_estimate_status_id       Int                             @id @default(autoincrement()) @db.UnsignedInt\n  name                          String                          @db.VarChar(45)\n  cost_estimate_funding_request cost_estimate_funding_request[]\n}\n\nmodel schema_version {\n  installed_rank Int      @id\n  version        String?  @db.VarChar(50)\n  description    String   @db.VarChar(200)\n  type           String   @db.VarChar(20)\n  script         String   @db.VarChar(1000)\n  checksum       Int?\n  installed_by   String   @db.VarChar(100)\n  installed_on   DateTime @default(now()) @db.Timestamp(0)\n  execution_time Int\n  success        Boolean\n\n  @@index([success], map: \"schema_version_s_idx\")\n}\n\nmodel attachment {\n  attachment_id                                      String                                               @id @db.VarChar(36)\n  filename                                           String                                               @db.VarChar(256)\n  extension                                          String                                               @db.VarChar(45)\n  size                                               BigInt                                               @db.UnsignedBigInt\n  creation_ts                                        DateTime                                             @default(now()) @db.Timestamp(0)\n  md5                                                String                                               @db.VarChar(32)\n  description                                        String?                                              @db.VarChar(255)\n  created_by                                         Int                                                  @db.UnsignedInt\n  asset_attachment                                   asset_attachment?\n  asset_part_attachment                              asset_part_attachment?\n  user                                               new_user                                             @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_attachment_user\")\n  comment_attachment                                 comment_attachment[]\n  cost_project_attachment                            cost_project_attachment?\n  issue_attachment                                   issue_attachment[]\n  lead_attachment                                    lead_attachment?\n  project_attachment                                 project_attachment?\n  project_planning_subproject_requirement_attachment project_planning_subproject_requirement_attachment[]\n  request_form_value                                 request_form_value[]\n  review_decision_attachment                         review_decision_attachment[]\n  saving_attachment                                  saving_attachment?\n  scope_attachment                                   scope_attachment?\n\n  @@index([created_by], map: \"fk_attachment_user\")\n}\n\nmodel cost_project_attachment {\n  cost_project_id Int          @db.UnsignedInt\n  attachment_id   String       @unique(map: \"attachment_id\") @db.VarChar(36)\n  update_ts       DateTime     @default(now()) @db.Timestamp(0)\n  is_deleted      Int?         @default(0) @db.TinyInt\n  cost_project    cost_project @relation(fields: [cost_project_id], references: [cost_project_id], onDelete: Cascade, onUpdate: NoAction, map: \"cost_project_attachment_ibfk_1\")\n  attachment      attachment   @relation(fields: [attachment_id], references: [attachment_id], onDelete: Cascade, onUpdate: NoAction, map: \"cost_project_attachment_ibfk_2\")\n\n  @@id([cost_project_id, attachment_id])\n}\n\nmodel funding_request {\n  funding_request_id            Int                             @id @default(autoincrement()) @db.UnsignedInt\n  creation_ts                   DateTime                        @default(now()) @db.Timestamp(0)\n  cost_project_id               Int                             @db.UnsignedInt\n  cost_estimate_funding_request cost_estimate_funding_request[]\n  cost_project                  cost_project                    @relation(fields: [cost_project_id], references: [cost_project_id], map: \"fk_funding_request_cost_project\")\n\n  @@index([cost_project_id], map: \"fk_cost_project_idx\")\n}\n\n/// Tables related with L360 (Location 360 tool).\nmodel l360_location {\n  trt_id                 Int                      @id @db.UnsignedInt\n  name                   String                   @db.VarChar(255)\n  system_name            String                   @db.VarChar(255)\n  description            String?                  @db.MediumText\n  place_id               String?                  @db.VarChar(255)\n  lat                    Decimal?                 @db.Decimal(11, 7)\n  lon                    Decimal?                 @db.Decimal(11, 7)\n  timezone               String?                  @db.VarChar(100)\n  status_name            String?                  @db.VarChar(100)\n  parent_location_id     Int?                     @db.UnsignedInt\n  address_1              String?                  @db.VarChar(255)\n  address_2              String?                  @db.VarChar(255)\n  state_province         String?                  @db.VarChar(255)\n  postal_code            String?                  @db.VarChar(100)\n  postal_code_suffix     String?                  @db.VarChar(100)\n  district               String?                  @db.VarChar(255)\n  city                   String?                  @db.VarChar(255)\n  country_2iso_code      String?                  @db.VarChar(100)\n  country_name           String?                  @db.VarChar(255)\n  address_validated      Boolean?\n  currency_id            Int?                     @db.UnsignedInt\n  region_id              Int?                     @db.UnsignedInt\n  entity_code            String?                  @db.VarChar(255)\n  l360_currency          l360_currency?           @relation(fields: [currency_id], references: [currency_id], map: \"fk_l360_currency\")\n  l360_region            l360_region?             @relation(fields: [region_id], references: [region_id], map: \"fk_l360_region\")\n  l360_location_function l360_location_function[]\n  location               location?\n  user                   user[]\n\n  @@index([currency_id], map: \"fk_l360_currency\")\n  @@index([region_id], map: \"fk_l360_region\")\n  @@fulltext([name, system_name], map: \"fulltext_name_system_name\")\n}\n\nmodel l360_region {\n  region_id     Int             @id @db.UnsignedInt\n  name          String          @db.VarChar(255)\n  geo           String?         @db.VarChar(255)\n  l360_location l360_location[]\n}\n\nmodel l360_currency {\n  currency_id   Int             @id @db.UnsignedInt\n  name          String          @db.VarChar(255)\n  symbol        String          @db.VarChar(100)\n  cost_project  cost_project[]\n  l360_location l360_location[]\n}\n\nmodel l360_function {\n  function_id            Int                      @id @default(autoincrement()) @db.UnsignedInt\n  name                   String                   @db.VarChar(255)\n  display_name           String                   @db.VarChar(100)\n  l360_function_group    String                   @db.VarChar(100)\n  l360_location_function l360_location_function[]\n\n  @@unique([display_name, l360_function_group])\n}\n\nmodel l360_location_function {\n  location_id Int           @db.UnsignedInt\n  function_id Int           @db.UnsignedInt\n  function    l360_function @relation(fields: [function_id], references: [function_id], map: \"fk_l360_function\")\n  location    l360_location @relation(fields: [location_id], references: [trt_id], map: \"fk_l360_location\")\n\n  @@id([location_id, function_id])\n  @@index([function_id], map: \"fk_l360_function\")\n}\n\nmodel cost_estimate_funding_request {\n  cost_estimate_funding_request_id Int                  @id @default(autoincrement()) @db.UnsignedInt\n  funding_request_id               Int                  @db.UnsignedInt\n  cost_subproject_id               Int                  @db.UnsignedInt\n  cost_estimate_id                 Int                  @db.UnsignedInt\n  status_id                        Int                  @db.UnsignedInt\n  notes                            String               @db.MediumText\n  creation_ts                      DateTime             @default(now()) @db.Timestamp(0)\n  created_by                       Int                  @db.UnsignedInt\n  cost_estimate                    cost_estimate        @relation(fields: [cost_estimate_id], references: [cost_estimate_id], map: \"fk_cost_estimate_funding_request_estimate\")\n  user                             new_user             @relation(fields: [created_by], references: [id], map: \"fk_cost_estimate_funding_request_estimate_created_by\")\n  funding_request                  funding_request      @relation(fields: [funding_request_id], references: [funding_request_id], map: \"fk_cost_estimate_funding_request_id\")\n  cost_estimate_status             cost_estimate_status @relation(fields: [status_id], references: [cost_estimate_status_id], map: \"fk_cost_estimate_funding_request_status\")\n\n  @@index([cost_estimate_id], map: \"fk_cost_estimate_funding_request_estimate\")\n  @@index([status_id], map: \"fk_cost_estimate_funding_request_status\")\n  @@index([created_by], map: \"fk_cost_estimate_funding_request_estimate_created_by\")\n  @@index([funding_request_id], map: \"fk_cost_estimate_funding_request_id\")\n}\n\nmodel warp_supplier {\n  supplier_id                       Int                           @id @db.UnsignedInt\n  supplier_code                     String?                       @db.VarChar(256)\n  supplier_name                     String?                       @db.VarChar(256)\n  local_name                        String?                       @db.VarChar(256)\n  short_name                        String?                       @db.VarChar(256)\n  supplier_group_id                 Int?\n  primary_supplier_id               Int?\n  effective_date                    DateTime?                     @db.Date\n  entity_id                         Int?\n  is_master                         Int?                          @db.SmallInt\n  active_flag                       Int?                          @db.SmallInt\n  comments                          String?                       @db.MediumText\n  on_hold                           Int?                          @db.SmallInt\n  managing_gsm                      String?                       @db.VarChar(256)\n  serialization_code                String?                       @db.VarChar(256)\n  is_edi_enabled                    Int?                          @db.SmallInt\n  de_activated_by_user_id           Int?\n  system_of_measurement_type_id     Int?\n  supplier_entity_tax_info_id       Int?\n  supplier_entity_master_address_id Int?\n  supplier_entity_master_contact_id Int?\n  supplier_entity_bank_account_id   Int?\n  entity_method_of_payment_id       Int?\n  risk_factor_id                    Int?\n  assessment_score                  Int?\n  assessed_user_id                  Int?\n  assed_by_user_id                  Int?\n  assessment_date                   DateTime?                     @db.Date\n  supplier_owner                    Int?\n  preferred_buyer_id                Int?\n  supplier_start_date               DateTime?                     @db.Date\n  support_owner                     Int?\n  create_date                       DateTime?                     @db.Timestamp(0)\n  create_by_user_id                 Int?\n  modify_date                       DateTime?                     @db.Timestamp(0)\n  last_modified_on                  DateTime?                     @db.Timestamp(0)\n  modify_by_user_id                 Int?\n  default_inco_term_id              Int?\n  terms_code                        String?                       @db.VarChar(256)\n  terms_net_days                    Int?\n  terms_disc_days                   Int?\n  terms_disc_percent                Int?\n  terms_description                 String?                       @db.VarChar(256)\n  currency_id                       String?                       @db.VarChar(256)\n  match_type                        String?                       @db.VarChar(256)\n  terms_net_type                    String?                       @db.VarChar(256)\n  terms_disc_type                   String?                       @db.VarChar(256)\n  gtc                               Int?                          @db.SmallInt\n  dba                               String?                       @db.VarChar(256)\n  dynamics_error                    String?                       @db.MediumText\n  dynamics_updated_flag             Int?                          @db.SmallInt\n  currency_code                     String?                       @db.VarChar(256)\n  entity_name                       String?                       @db.VarChar(256)\n  country_code                      String?                       @db.VarChar(256)\n  inco_term_code                    String?                       @db.VarChar(256)\n  account_group                     String?                       @db.VarChar(256)\n  measurement_system                String?                       @db.VarChar(256)\n  website                           String?                       @db.VarChar(256)\n  risk_factor                       String?                       @db.VarChar(256)\n  assessed_user_name                String?                       @db.VarChar(256)\n  preferred_buyer_name              String?                       @db.VarChar(256)\n  onboarding_status                 String?                       @db.VarChar(256)\n  onboarding_type                   String?                       @db.VarChar(256)\n  supplier_group_code               String?                       @db.VarChar(256)\n  method_of_payment_code            String?                       @db.VarChar(256)\n  ax_publish_event                  String?                       @db.VarChar(256)\n  account_master_id                 String?                       @db.VarChar(256)\n  region_abbreviation               String?                       @db.VarChar(256)\n  net_terms_change_reason           String?                       @db.VarChar(256)\n  net_terms_change_comment          String?                       @db.VarChar(256)\n  net_terms_change_entity           String?                       @db.VarChar(256)\n  net_terms_change_pos              String?                       @db.VarChar(256)\n  tier_level                        String?                       @db.VarChar(256)\n  asset                             asset[]\n  asset_part                        asset_part[]\n  issue_assigned                    issue_assigned[]\n  location_warp_supplier            location_warp_supplier[]\n  location_warp_supplier_user       location_warp_supplier_user[]\n  request_form_value                request_form_value[]\n  scope_supplier                    scope_supplier[]\n  warp_purchase_order               warp_purchase_order[]\n  warp_supplier_category            warp_supplier_category[]\n}\n\nmodel warp_supplier_category {\n  supplier_id       Int           @db.UnsignedInt\n  supplier_code     String        @db.VarChar(256)\n  supplier_category String        @db.VarChar(256)\n  warp_supplier     warp_supplier @relation(fields: [supplier_id], references: [supplier_id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_warp_supplier\")\n\n  @@id([supplier_id, supplier_code, supplier_category])\n}\n\nmodel warp_supplier_identity {\n  supplier_identity_id           Int                              @id @db.UnsignedInt\n  sso_id                         String?                          @db.VarChar(256)\n  first_name                     String?                          @db.VarChar(256)\n  last_name                      String?                          @db.VarChar(256)\n  language_code                  String?                          @db.VarChar(256)\n  email_id                       String?                          @db.VarChar(256)\n  job_title                      String?                          @db.VarChar(256)\n  phone                          String?                          @db.VarChar(256)\n  fax                            String?                          @db.VarChar(256)\n  mobile                         String?                          @db.VarChar(256)\n  comment                        String?                          @db.MediumText\n  is_mfa_enrolled                Int?                             @db.SmallInt\n  created_by                     String?                          @db.VarChar(256)\n  created_timestamp              DateTime?                        @db.Timestamp(0)\n  modified_by                    String?                          @db.VarChar(256)\n  modified_timestamp             DateTime?                        @db.Timestamp(0)\n  enabled                        Int?                             @db.SmallInt\n  carrier_category_id            Int?\n  operation_type                 String?                          @db.VarChar(512)\n  application_type               String?                          @db.VarChar(256)\n  display_name                   String?                          @db.VarChar(256)\n  warp_supplier_identity_mapping warp_supplier_identity_mapping[]\n}\n\nmodel warp_supplier_identity_mapping {\n  supplier_identity_mapping_id Int                     @id\n  supplier_identity_id         Int?                    @db.UnsignedInt\n  supplier_code                String?                 @db.VarChar(256)\n  is_finance_lead              Int?\n  is_primary_contact           Int?\n  warp_supplier_identity       warp_supplier_identity? @relation(fields: [supplier_identity_id], references: [supplier_identity_id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_warp_supplier_identity\")\n\n  @@index([supplier_identity_id], map: \"fk_warp_supplier_identity\")\n}\n\nmodel warp_purchase_order {\n  purchase_order_id              BigInt                    @id @db.UnsignedBigInt\n  supplier_id                    Int?                      @db.UnsignedInt\n  entity_id                      Int?                      @db.UnsignedInt\n  contact_first_name             String?                   @db.VarChar(256)\n  contact_last_name              String?                   @db.VarChar(256)\n  contact_initial                String?                   @db.VarChar(256)\n  contact_position               String?                   @db.VarChar(256)\n  contact_honorific              String?                   @db.VarChar(256)\n  contact_salutation             String?                   @db.VarChar(256)\n  contact_phone                  String?                   @db.VarChar(256)\n  contact_fax                    String?                   @db.VarChar(256)\n  contact_mobile                 String?                   @db.VarChar(256)\n  contact_email                  String?                   @db.VarChar(256)\n  supplier_master_address_id     Int?                      @db.UnsignedInt\n  ship_to_address_id             Int?\n  order_date                     DateTime?                 @db.DateTime(0)\n  desired_receive_date           DateTime?                 @db.DateTime(0)\n  buyer_user_id                  Int?                      @db.UnsignedInt\n  free_on_board                  String?                   @db.VarChar(256)\n  ship_via_id                    Int?                      @db.UnsignedInt\n  ship_via_other                 String?                   @db.VarChar(256)\n  status                         String?                   @db.VarChar(256)\n  last_received_date             DateTime?                 @db.DateTime(0)\n  total_amount_ordered           Decimal?                  @db.Decimal(28, 2)\n  total_amount_received          Decimal?                  @db.Decimal(28, 2)\n  promise_date                   DateTime?                 @db.DateTime(0)\n  terms_net_type                 String?                   @db.VarChar(256)\n  terms_net_days                 Int?\n  terms_disc_type                String?                   @db.VarChar(256)\n  terms_disc_days                Int?\n  terms_disc_percent             Int?\n  terms_description              String?                   @db.MediumText\n  warehouse_id                   Int?                      @db.UnsignedInt\n  revision_level                 Int?\n  requester_user_id              Int?                      @db.UnsignedInt\n  freight                        Int?\n  bypass_approval_flag           Int?                      @db.SmallInt\n  bypass_reason                  String?                   @db.VarChar(256)\n  drop_point                     String?                   @db.VarChar(256)\n  currency_id                    Int?                      @db.UnsignedInt\n  create_date                    DateTime?                 @db.DateTime(0)\n  create_by_user_id              Int?\n  modify_date                    DateTime?                 @db.DateTime(0)\n  modify_By_User_ID              Int?                      @db.UnsignedInt\n  buyer_note                     String?                   @db.MediumText\n  product_id                     Int?                      @db.UnsignedInt\n  purchase_order_type_id         Int?                      @db.UnsignedInt\n  incoterm_code                  String?                   @db.VarChar(256)\n  incoterm_text                  String?                   @db.MediumText\n  term_and_condition_id          Int?                      @db.UnsignedInt\n  cost_center_id                 Int?                      @db.UnsignedInt\n  sappo_number                   BigInt?                   @unique(map: \"unique_sappo_number\")\n  sa_validity_start_date         DateTime?                 @db.DateTime(0)\n  sa_validity_end_date           DateTime?                 @db.DateTime(0)\n  total_amount_increased         Decimal?                  @db.Decimal(28, 2)\n  last_approved_total_amount     Decimal?                  @db.Decimal(28, 2)\n  auto_EDI                       Int?                      @db.SmallInt\n  invoice_status_id              Int?\n  total_amount_invoiced_usd      Decimal?                  @db.Decimal(28, 2)\n  total_amount_invoiced_amt      Decimal?                  @db.Decimal(28, 2)\n  is_firm                        Int?                      @db.SmallInt\n  is_auto_post_to_portal         Int?                      @db.SmallInt\n  is_reviewed_flag               Int?                      @db.SmallInt\n  review_version                 Int?\n  supplier_ship_from_location_id Int?                      @db.UnsignedInt\n  planner_user_i                 Int?                      @db.UnsignedInt\n  has_drop_ship_parts            Int?                      @db.SmallInt\n  po_approval_chain_id           Int?                      @db.UnsignedInt\n  last_release_date              DateTime?                 @db.DateTime(0)\n  last_submit_for_approval_date  DateTime?                 @db.DateTime(0)\n  last_submit_for_review_date    DateTime?                 @db.DateTime(0)\n  first_release_date             DateTime?                 @db.DateTime(0)\n  is_blanket                     Int?                      @db.SmallInt\n  send_email_on_portal_post      Int?                      @db.SmallInt\n  po_created_by_screen_id        Int?                      @db.UnsignedInt\n  approval_chain_manager_id      Int?                      @db.UnsignedInt\n  send_edi                       Int?                      @db.SmallInt\n  cumulative_increased_amount    Decimal?                  @db.Decimal(28, 2)\n  ship_to_attn_text              String?                   @db.MediumText\n  supplier_notes                 String?                   @db.MediumText\n  is_integrated_to_iso           Int?                      @db.SmallInt\n  parent_purchase_order_id       BigInt?                   @db.UnsignedBigInt\n  is_parent                      Int?                      @db.SmallInt\n  hide_price_from_supplier       Int?                      @db.SmallInt\n  nullify_override_payment_term  Int?                      @db.SmallInt\n  update_supplier_payment_term   Int?                      @db.SmallInt\n  re_open_comment                String?                   @db.MediumText\n  po_prev_status                 String?                   @db.VarChar(256)\n  po_sub_type                    String?                   @db.VarChar(256)\n  retention                      Int?\n  module_id                      Int?\n  row_hash                       String?                   @db.VarChar(256)\n  header_notes                   String?                   @db.MediumText\n  customer_address_id            Int?                      @db.UnsignedInt\n  trt_id                         Int?\n  scope_purchase_order           scope_purchase_order[]\n  warp_po_line                   warp_po_line[]\n  buyer_user                     warp_user?                @relation(fields: [buyer_user_id], references: [warp_user_id], onDelete: Restrict, map: \"fk_warp_po_buyer_user\")\n  warp_currency                  warp_currency?            @relation(fields: [currency_id], references: [currency_id], onDelete: Restrict, map: \"fk_warp_purchase_order_currency\")\n  warp_entity                    warp_entity?              @relation(fields: [entity_id], references: [entity_id], onDelete: Restrict, map: \"fk_warp_purchase_order_entity\")\n  warp_purchase_order_type       warp_purchase_order_type? @relation(fields: [purchase_order_type_id], references: [purchase_order_type_id], onDelete: Restrict, map: \"fk_warp_purchase_order_warp_purchase_order_type_id\")\n  warp_supplier                  warp_supplier?            @relation(fields: [supplier_id], references: [supplier_id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_warp_purchase_order_warp_supplier_id\")\n  warp_cost_center               warp_cost_center?         @relation(fields: [cost_center_id], references: [cost_center_id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_warp_purchase_order_warp_cost_center_id\")\n\n  @@index([supplier_id], map: \"fk_warp_purchase_order_warp_supplier_id\")\n  @@index([currency_id], map: \"fk_warp_purchase_order_currency\")\n  @@index([entity_id], map: \"fk_warp_purchase_order_entity\")\n  @@index([buyer_user_id], map: \"fk_warp_po_buyer_user\")\n  @@index([purchase_order_type_id], map: \"fk_warp_purchase_order_warp_purchase_order_type_id\")\n  @@index([cost_center_id], map: \"fk_warp_purchase_order_warp_cost_center_id\")\n}\n\nmodel warp_currency {\n  currency_id         Int                   @id @db.UnsignedInt\n  currency_code       String                @db.VarChar(128)\n  currency_name       String?               @db.VarChar(256)\n  exchange_rate       Decimal?              @db.Decimal(28, 8)\n  is_enabled          Int?                  @db.SmallInt\n  warp_purchase_order warp_purchase_order[]\n}\n\nmodel warp_cost_center {\n  cost_center_id      Int                   @id @db.UnsignedInt\n  cost_center_code    String?               @db.VarChar(200)\n  entity_id           Int?                  @db.UnsignedInt\n  is_enabled          Boolean?\n  description         String?               @db.MediumText\n  create_date         String?               @db.VarChar(200)\n  create_by_user_id   Int?                  @db.UnsignedInt\n  modify_date         String?               @db.VarChar(200)\n  modify_by_user_id   Int?                  @db.UnsignedInt\n  warp_assets         warp_asset[]          @relation(\"CostCenterToAssets\")\n  warp_budget_code    warp_budget_code[]\n  warp_purchase_order warp_purchase_order[]\n}\n\nmodel warp_entity {\n  entity_id             Int                    @id @db.UnsignedInt\n  entity_code           String?                @db.VarChar(256)\n  entity_name           String?                @db.VarChar(256)\n  enabled               Int?                   @db.SmallInt\n  default_location_name String?                @db.VarChar(256)\n  default_tax_code_name String?                @db.VarChar(256)\n  country_id            Int?\n  default_currency_id   Int?\n  region                String?                @db.VarChar(256)\n  default_warehouse_id  Int?\n  entity_warehouse_id   Int?\n  bom_master_entity_id  Int?\n  location_warp_entity  location_warp_entity[]\n  warp_assets           warp_asset[]           @relation(\"EntityToAssets\")\n  warp_budget_code      warp_budget_code[]\n  warp_country          warp_country?          @relation(fields: [country_id], references: [country_id], onDelete: Restrict, map: \"fk__warp_entity_country\")\n  warp_purchase_order   warp_purchase_order[]\n\n  @@index([country_id], map: \"fk__warp_entity_country\")\n}\n\nmodel hros_employee {\n  employee_number            String    @id @db.VarChar(128)\n  employee_non_sensitive_key Int       @db.UnsignedInt\n  first_name                 String?   @db.VarChar(128)\n  last_name                  String?   @db.VarChar(128)\n  display_name               String?   @db.VarChar(128)\n  primary_work_email         String?   @db.VarChar(128)\n  status                     String?   @db.VarChar(128)\n  is_active                  Int?      @db.SmallInt\n  cost_center_code           String?   @db.VarChar(128)\n  manager_id                 String?   @db.VarChar(128)\n  location_id                String?   @db.VarChar(128)\n  department_name            String?   @db.VarChar(128)\n  etl_inserted_date          DateTime? @db.DateTime(0)\n  etl_updated_date           DateTime? @db.DateTime(0)\n}\n\nmodel warp_ship_to_address {\n  ship_to_address_id                 Int       @id\n  ship_to_address_name               String?   @db.VarChar(256)\n  internal_order_location_address_id Int?      @db.UnsignedInt\n  location_category_id               Int?      @db.UnsignedInt\n  location_category_name             String?   @db.VarChar(128)\n  enabled                            Int?      @db.SmallInt\n  expense_location                   String?   @db.VarChar(512)\n  expense_name                       String?   @db.VarChar(128)\n  expense_description                String?   @db.MediumText\n  country_name                       String?   @db.VarChar(128)\n  address1                           String?   @db.VarChar(256)\n  city                               String?   @db.VarChar(128)\n  state                              String?   @db.VarChar(128)\n  zip_code                           String?   @db.VarChar(128)\n  country                            String?   @db.VarChar(128)\n  create_date                        DateTime? @db.DateTime(0)\n  modify_date                        DateTime? @db.DateTime(0)\n}\n\nmodel user_role {\n  user_role_id Int       @id @default(autoincrement()) @db.UnsignedInt\n  new_user_id  Int       @db.UnsignedInt\n  role_id      Int       @db.UnsignedInt\n  location_id  Int?      @db.UnsignedInt\n  scope_id     Int?      @db.UnsignedInt\n  location     location? @relation(fields: [location_id], references: [location_id], onDelete: Cascade, map: \"fk_user_role_location_id\")\n  new_user     new_user  @relation(fields: [new_user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_user_role_new_user\")\n  role         role      @relation(fields: [role_id], references: [role_id], map: \"fk_user_role_role_id\")\n  scope        scope?    @relation(fields: [scope_id], references: [scope_id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_user_role_scope\")\n\n  @@index([location_id], map: \"fk_user_role_location_id\")\n  @@index([role_id], map: \"fk_user_role_role_id\")\n  @@index([new_user_id], map: \"fk_user_role_new_user\")\n  @@index([scope_id], map: \"fk_user_role_scope\")\n}\n\nmodel scope_compensation {\n  scope_compensation_id Int     @id @default(autoincrement()) @db.UnsignedInt\n  name                  String  @db.VarChar(45)\n  scope                 scope[]\n}\n\nmodel scope_rationale {\n  scope_rationale_id Int     @id @default(autoincrement()) @db.UnsignedInt\n  name               String  @db.VarChar(128)\n  type               String  @unique(map: \"uc_scope_rationale_type\") @db.VarChar(45)\n  group              String? @db.VarChar(128)\n  scope              scope[]\n}\n\nmodel scope_stakeholder {\n  scope_id         Int              @db.UnsignedInt\n  type_id          Int              @db.UnsignedInt\n  user_id          Int              @db.UnsignedInt\n  scope            scope            @relation(fields: [scope_id], references: [scope_id], onDelete: Cascade, map: \"fk_scope_stakeholder_scope\")\n  stakeholder_type stakeholder_type @relation(fields: [type_id], references: [stakeholder_type_id], map: \"fk_scope_stakeholder_type\")\n  user             new_user         @relation(fields: [user_id], references: [id], map: \"fk_scope_stakeholder_user\")\n\n  @@id([scope_id, user_id, type_id])\n  @@index([type_id], map: \"fk_scope_stakeholder_type\")\n  @@index([user_id], map: \"fk_scope_stakeholder_user\")\n}\n\nmodel scope_status {\n  scope_status_id      Int               @id @default(autoincrement()) @db.UnsignedInt\n  scope_id             Int               @db.UnsignedInt\n  scope_status_type_id Int               @db.UnsignedInt\n  creation_ts          DateTime          @default(now()) @db.Timestamp(0)\n  created_by           Int               @db.UnsignedInt\n  scope                scope             @relation(fields: [scope_id], references: [scope_id], onDelete: Cascade, map: \"fk_scope_status_scope\")\n  scope_status_type    scope_status_type @relation(fields: [scope_status_type_id], references: [scope_status_type_id], onDelete: Cascade, map: \"fk__scope_status_status_type\")\n  user                 new_user          @relation(fields: [created_by], references: [id], map: \"fk__scope_status_user\")\n\n  @@index([created_by], map: \"fk__scope_status_user\")\n  @@index([scope_id], map: \"fk__scope_status_scope\")\n  @@index([scope_status_type_id], map: \"fk__scope_status_status_type\")\n}\n\nmodel cost_project_stakeholder {\n  cost_project_id Int          @db.UnsignedInt\n  user_id         Int          @db.UnsignedInt\n  cost_project    cost_project @relation(fields: [cost_project_id], references: [cost_project_id], onDelete: Cascade, map: \"fk_stakeholder_cost_project_id\")\n  user            new_user     @relation(fields: [user_id], references: [id], onDelete: Cascade, map: \"fk_stakeholder_user_id\")\n\n  @@id([cost_project_id, user_id])\n  @@index([user_id], map: \"fk_stakeholder_user_id\")\n}\n\nmodel scope_discipline {\n  scope_id      Int        @db.UnsignedInt\n  discipline_id Int        @db.UnsignedInt\n  discipline    discipline @relation(fields: [discipline_id], references: [discipline_id], map: \"fk_scope_discipline_discipline\")\n  scope         scope      @relation(fields: [scope_id], references: [scope_id], onDelete: Cascade, map: \"fk_scope_discipline_scope\")\n\n  @@id([scope_id, discipline_id])\n  @@index([discipline_id], map: \"fk_scope_discipline_discipline\")\n}\n\nmodel warp_inco_term {\n  inco_term_id      Int     @id\n  inco_term_code    String? @db.VarChar(256)\n  description       String? @db.MediumText\n  enabled           Int?    @db.SmallInt\n  create_date       String? @db.VarChar(256)\n  create_by_user_id Int?    @db.UnsignedInt\n  modify_date       String? @db.VarChar(256)\n  modify_by_user_id Int?    @db.UnsignedInt\n}\n\nmodel warp_net_term {\n  term_id           Int      @id\n  name              String?  @unique(map: \"unique_name\") @db.VarChar(256)\n  description       String?  @db.MediumText\n  net_type          String?  @db.VarChar(256)\n  net_days          Int?     @db.UnsignedInt\n  disc_type         String?  @db.VarChar(256)\n  disc_days         Int?     @db.UnsignedInt\n  disc_percent      Decimal? @db.Decimal(28, 2)\n  freight_terms     String?  @db.VarChar(256)\n  end_of_month      String?  @db.VarChar(256)\n  vat_on_first_inst String?  @db.VarChar(256)\n  period_type       String?  @db.VarChar(256)\n  create_date       String?  @db.VarChar(256)\n  create_by_user_id Int?     @db.UnsignedInt\n  modify_date       String?  @db.VarChar(256)\n  modify_by_user_id Int?     @db.UnsignedInt\n  enabled           Int?     @db.SmallInt\n}\n\nmodel scope_purchase_order {\n  scope_purchase_order_id   Int                         @id @default(autoincrement()) @db.UnsignedInt\n  scope_id                  Int                         @db.UnsignedInt\n  purchase_order_id         BigInt                      @db.UnsignedBigInt\n  purchase_order            warp_purchase_order         @relation(fields: [purchase_order_id], references: [purchase_order_id], map: \"fk_purchase_order_id\")\n  scope                     scope                       @relation(fields: [scope_id], references: [scope_id], onDelete: Cascade, map: \"fk_scope_po_number_scope\")\n  scope_purchase_order_line scope_purchase_order_line[]\n\n  @@index([scope_id], map: \"fk_scope_po_number_scope\")\n  @@index([purchase_order_id], map: \"fk_purchase_order_id\")\n}\n\nmodel scope_milestone {\n  scope_id              Int                   @db.UnsignedInt\n  date                  DateTime              @db.Timestamp(0)\n  milestone_type_id     Int                   @db.UnsignedInt\n  scope                 scope                 @relation(fields: [scope_id], references: [scope_id], onDelete: Cascade, map: \"fk_scope_milestones_scope\")\n  scope_milestones_type scope_milestones_type @relation(fields: [milestone_type_id], references: [scope_milestones_type_id], map: \"fk_scope_milestones_scope_milestones_type\")\n\n  @@id([scope_id, milestone_type_id])\n  @@index([milestone_type_id], map: \"fk_scope_milestones_scope_milestones_type\")\n}\n\nmodel scope_milestones_type {\n  scope_milestones_type_id Int               @id @default(autoincrement()) @db.UnsignedInt\n  type                     String?           @db.VarChar(50)\n  scope_milestone          scope_milestone[]\n}\n\nmodel warp_user {\n  warp_user_id        Int                   @id @db.UnsignedInt\n  hros_id             String?               @db.VarChar(128)\n  ad_username         String?               @db.VarChar(256)\n  visual_username     String?               @db.VarChar(256)\n  enabled             Int?                  @db.SmallInt\n  first_name          String?               @db.VarChar(256)\n  last_name           String?               @db.VarChar(256)\n  display_name        String?               @db.VarChar(256)\n  department          String?               @db.VarChar(256)\n  title               String?               @db.VarChar(256)\n  manager             String?               @db.VarChar(256)\n  email               String?               @db.VarChar(256)\n  employee_role       Int?\n  create_date         String?               @db.VarChar(256)\n  division            String?               @db.VarChar(256)\n  manager_user_id     Int?\n  buyer               Int?                  @db.SmallInt\n  planner             Int?                  @db.SmallInt\n  create_by_user_id   Int?\n  modify_by_user_id   Int?\n  modify_date         String?               @db.VarChar(256)\n  legal_first_name    String?               @db.VarChar(256)\n  legal_last_name     String?               @db.VarChar(256)\n  e_procurement       Int?                  @db.SmallInt\n  business_title      String?               @db.VarChar(256)\n  sap_user_id         String?               @db.VarChar(256)\n  requester_user_id   Int?\n  approver_user_id    Int?\n  approve_date        String?               @db.VarChar(256)\n  department_id       Int?\n  warp_budget_code    warp_budget_code[]\n  warp_po_line        warp_po_line[]\n  warp_purchase_order warp_purchase_order[]\n}\n\nmodel scope_reviewer_type {\n  scope_reviewer_type_id         Int                              @id @default(autoincrement()) @db.UnsignedInt\n  type                           String                           @db.VarChar(45)\n  name                           String?                          @db.VarChar(100)\n  location_scope_reviewer        location_scope_reviewer[]\n  scope_review_template_reviewer scope_review_template_reviewer[]\n  scope_reviewer                 scope_reviewer[]\n}\n\nmodel review_flow_step {\n  review_flow_step_id       Int                         @id @default(autoincrement()) @db.UnsignedInt\n  review_flow_id            Int                         @db.UnsignedInt\n  step_number               Int                         @default(0)\n  description               String                      @db.VarChar(255)\n  due_date                  DateTime?                   @db.Timestamp(0)\n  is_notification_sent      Int                         @default(0) @db.SmallInt\n  review_flow               scope_review_flow           @relation(fields: [review_flow_id], references: [review_flow_id], onDelete: Cascade, map: \"fk_review_flow_step_review_flow\")\n  review_flow_step_decision review_flow_step_decision[]\n\n  @@index([review_flow_id], map: \"fk_review_flow_step_review_flow\")\n}\n\nmodel warp_po_line {\n  purchase_order_line_id             BigInt                      @db.UnsignedBigInt\n  purchase_order_id                  BigInt                      @db.UnsignedBigInt\n  line_number                        BigInt?                     @db.UnsignedBigInt\n  part_id                            BigInt?                     @db.UnsignedBigInt\n  user_order_quantity                Decimal?                    @db.Decimal(30, 8)\n  order_quantity                     Decimal?                    @db.Decimal(30, 8)\n  purchase_unit_id                   Int?\n  unit_price                         Decimal?                    @db.Decimal(28, 2)\n  desired_receive_date               DateTime?                   @db.DateTime(0)\n  line_status                        String?                     @db.VarChar(128)\n  total_user_received_quantity       Decimal?                    @db.Decimal(30, 8)\n  total_received_quantity            Decimal?                    @db.Decimal(30, 8)\n  total_amount_received              Decimal?                    @db.Decimal(28, 2)\n  total_amount_ordered               Decimal?                    @db.Decimal(28, 2)\n  warehouse_id                       Int?\n  mrp_run_id                         Int?\n  create_date                        DateTime?                   @db.DateTime(0)\n  create_by_user_id                  Int?                        @db.UnsignedInt\n  modify_date                        DateTime?                   @db.DateTime(0)\n  modify_by_user_id                  Int?\n  gr_flag                            Int?                        @db.SmallInt\n  tax_code_id                        Int?\n  non_tax_type_id                    Int?\n  location_id                        Int?\n  ship_to_address_id                 Int?\n  confirmation_control               String?                     @db.VarChar(128)\n  firm_zone                          String?                     @db.VarChar(128)\n  tradeoff_zone                      String?                     @db.VarChar(128)\n  creation_profile                   String?                     @db.VarChar(128)\n  jit_indicator                      String?                     @db.VarChar(128)\n  sap_po_line_no                     BigInt?\n  send_edi_flag                      Int?                        @db.SmallInt\n  conversion_factor                  BigInt?\n  unit_stock_price                   Decimal?                    @db.Decimal(28, 8)\n  exchange_rate_usd                  Decimal?                    @db.Decimal(28, 8)\n  unit_stock_price_usd               Decimal?                    @db.Decimal(28, 8)\n  total_amount_received_usd          Decimal?                    @db.Decimal(28, 2)\n  total_amount_ordered_usd           Decimal?                    @db.Decimal(28, 2)\n  internal_order_location_address_id Int?\n  invoice_status_id                  Int?\n  total_amount_invoiced_usd          Decimal?                    @db.Decimal(28, 2)\n  total_amount_invoiced_amt          Decimal?                    @db.Decimal(28, 2)\n  total_invoiced_quantity_stock_uom  Decimal?                    @db.Decimal(30, 8)\n  total_invoiced_quantity_po_uom     Decimal?                    @db.Decimal(30, 8)\n  post_to_portal_flag                Int?                        @db.SmallInt\n  short_text                         String?                     @db.LongText\n  rma_number                         String?                     @db.VarChar(128)\n  gle_expense_account_id             BigInt?\n  internal_order_id                  BigInt?\n  ship_to_address                    String?                     @db.MediumText\n  budget_code_id                     Int?                        @db.UnsignedInt\n  spend_category_id                  Int?\n  spend_sub_category_id              Int?\n  asset_id                           BigInt?\n  last_received_date                 DateTime?                   @db.DateTime(0)\n  supplier_part_number               String?                     @db.MediumText\n  manufacturing_part_number          String?                     @db.VarChar(512)\n  detail_number                      String?                     @db.VarChar(512)\n  supplier_part_id                   BigInt?\n  hide_price_from_supplier           Int?                        @db.SmallInt\n  scope_purchase_order_line          scope_purchase_order_line[]\n  warp_budget_code                   warp_budget_code?           @relation(fields: [budget_code_id], references: [budget_code_id], onDelete: Restrict, map: \"fk_warp_po_line_budget_code\")\n  warp_purchase_order                warp_purchase_order         @relation(fields: [purchase_order_id], references: [purchase_order_id], map: \"fk_warp_po_line_purchase_order_id\")\n  warp_user                          warp_user?                  @relation(fields: [create_by_user_id], references: [warp_user_id], onDelete: Restrict, map: \"fk_warp_po_line_user\")\n\n  @@id([purchase_order_line_id, purchase_order_id])\n  @@index([purchase_order_id], map: \"fk_warp_po_line_purchase_order_id\")\n  @@index([create_by_user_id], map: \"fk_warp_po_line_user\")\n  @@index([budget_code_id], map: \"fk_warp_po_line_budget_code\")\n}\n\nmodel scope_status_type {\n  scope_status_type_id Int            @id @default(autoincrement()) @db.UnsignedInt\n  type                 String?        @db.VarChar(45)\n  name                 String         @db.VarChar(45)\n  scope                scope[]\n  scope_status         scope_status[]\n}\n\nmodel review_flow_step_decision {\n  review_flow_step_decision_id   Int                            @id @default(autoincrement()) @db.UnsignedInt\n  review_flow_step_id            Int                            @db.UnsignedInt\n  decision_type_id               Int                            @default(1) @db.UnsignedInt\n  group                          String                         @db.VarChar(128)\n  notes                          String?                        @db.MediumText\n  update_ts                      DateTime?                      @db.Timestamp(0)\n  user_id                        Int                            @db.UnsignedInt\n  review_flow_step_decision_type review_flow_step_decision_type @relation(fields: [decision_type_id], references: [review_flow_step_decision_type_id], onDelete: Cascade, onUpdate: NoAction, map: \"fk__review_flow_step_decision_review_flow_step_decision_type\")\n  user                           new_user                       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: \"fk__review_flow_step_decision_user_id\")\n  review_flow_step               review_flow_step               @relation(fields: [review_flow_step_id], references: [review_flow_step_id], onDelete: Cascade, map: \"fk__review_flow_step_decision_review_flow_step_id\")\n  scope_reviewer                 scope_reviewer?\n\n  @@unique([review_flow_step_id, user_id], map: \"uk_review_flow_step_user\")\n  @@index([user_id], map: \"fk__review_flow_step_decision_user_id\")\n  @@index([decision_type_id], map: \"fk__review_flow_step_decision_review_flow_step_decision_type\")\n}\n\nmodel review_flow_step_decision_type {\n  review_flow_step_decision_type_id Int                         @id @default(autoincrement()) @db.UnsignedInt\n  type                              String                      @db.VarChar(45)\n  name                              String?                     @db.VarChar(100)\n  review_flow_step_decision         review_flow_step_decision[]\n}\n\nmodel location_level {\n  level_id                                Int                                       @id @default(autoincrement()) @db.UnsignedInt\n  location_id                             Int                                       @db.UnsignedInt\n  level_name                              String                                    @db.VarChar(128)\n  level_abbreviation                      String?                                   @db.VarChar(16)\n  document                                document[]\n  location                                location                                  @relation(fields: [location_id], references: [location_id], map: \"fk_location_id\")\n  project_planning_subproject_requirement project_planning_subproject_requirement[]\n\n  @@unique([location_id, level_abbreviation], map: \"uk_document_level_abbreviation\")\n  @@index([location_id], map: \"fk_location_id\")\n}\n\nmodel file {\n  file_id           String              @id @db.VarChar(36)\n  filename          String              @db.VarChar(255)\n  extension         String              @db.VarChar(45)\n  size              BigInt              @db.UnsignedBigInt\n  creation_ts       DateTime            @default(now()) @db.Timestamp(0)\n  md5               String              @db.VarChar(32)\n  created_by        Int                 @db.UnsignedInt\n  processed_ts      DateTime?           @db.Timestamp(0)\n  document_revision document_revision[]\n  user              new_user            @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_file_user\")\n\n  @@index([created_by], map: \"fk_file_user\")\n  @@index([md5], map: \"idx_file_md5\")\n}\n\nmodel document {\n  document_id                 Int                          @id @default(autoincrement()) @db.UnsignedInt\n  latest_revision_id          Int?                         @db.UnsignedInt\n  title                       String                       @db.VarChar(300)\n  document_number             String                       @db.VarChar(250)\n  document_type_id            Int                          @db.UnsignedInt\n  creation_ts                 DateTime                     @default(now()) @db.Timestamp(0)\n  update_ts                   DateTime?                    @db.Timestamp(0)\n  site_id                     Int?                         @db.UnsignedInt\n  building_id                 Int?                         @db.UnsignedInt\n  area_id                     Int                          @db.UnsignedInt\n  area_detail_id              Int?                         @db.UnsignedInt\n  level_id                    Int?                         @db.UnsignedInt\n  discipline_id               Int                          @db.UnsignedInt\n  is_deleted                  Int                          @default(0) @db.TinyInt\n  operation_log_id            Int                          @unique(map: \"operation_log_id\") @db.UnsignedInt\n  created_by                  Int                          @db.UnsignedInt\n  created_by_company          Int                          @db.UnsignedInt\n  updated_by                  Int?                         @db.UnsignedInt\n  updated_by_company          Int?                         @db.UnsignedInt\n  location_id                 Int                          @db.UnsignedInt\n  sequence_number             Int?                         @db.UnsignedInt\n  subcontractor               String?                      @db.VarChar(255)\n  searchable_subcontractor    String?                      @db.VarChar(255)\n  permit_number               String?                      @db.Text\n  is_permit_required          Boolean                      @default(false)\n  permit_frequency            document_permit_frequency?\n  submittal_category_id       Int?                         @db.UnsignedInt\n  submittal_type_id           Int?                         @db.UnsignedInt\n  submittal_detail_id         Int?                         @db.UnsignedInt\n  created_by_user             new_user                     @relation(\"document_created_byTouser\", fields: [created_by], references: [id], map: \"fk__document_created_by\")\n  created_by_company_full     company                      @relation(\"document_created_by_companyTocompany\", fields: [created_by_company], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"fk__document_created_by_company\")\n  document_type               document_type                @relation(fields: [document_type_id], references: [document_type_id], map: \"fk__document_document_type\")\n  updated_by_user             new_user?                    @relation(\"document_updated_byTouser\", fields: [updated_by], references: [id], onDelete: Restrict, map: \"fk__document_update_by\")\n  updated_by_company_full     company?                     @relation(\"document_updated_by_companyTocompany\", fields: [updated_by_company], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"fk__document_updated_by_company\")\n  area                        area                         @relation(fields: [area_id], references: [area_id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_document_area\")\n  area_detail                 area?                        @relation(\"document_area_detail_idToarea\", fields: [area_detail_id], references: [area_id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_document_area_detail\")\n  building                    area?                        @relation(\"document_building_idToarea\", fields: [building_id], references: [area_id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_document_building\")\n  discipline                  discipline                   @relation(fields: [discipline_id], references: [discipline_id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_document_discipline\")\n  latest_revision             document_revision?           @relation(\"document_latest_revision_idTodocument_revision\", fields: [latest_revision_id], references: [document_revision_id], onUpdate: NoAction, map: \"fk_document_document_revision\")\n  document_submittal_category document_submittal_category? @relation(fields: [submittal_category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_document_document_submittal_category\")\n  document_submittal_detail   document_submittal_detail?   @relation(fields: [submittal_detail_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_document_document_submittal_detail\")\n  document_submittal_type     document_submittal_type?     @relation(fields: [submittal_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_document_document_submittal_type\")\n  location                    location                     @relation(fields: [location_id], references: [location_id], map: \"fk_document_location\")\n  location_level              location_level?              @relation(fields: [level_id], references: [level_id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_document_location_level\")\n  operation_log               operation_log                @relation(fields: [operation_log_id], references: [operation_log_id], map: \"fk_document_operation_log\")\n  site                        area?                        @relation(\"document_site_idToarea\", fields: [site_id], references: [area_id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_document_site\")\n  document_additional_area    document_additional_area[]\n  document_csi_division       document_csi_division[]\n  document_package_document   document_package_document[]\n  document_program            document_program[]\n  document_revision           document_revision[]\n\n  @@index([created_by], map: \"fk__document_created_by\")\n  @@index([document_type_id], map: \"fk__document_document_type\")\n  @@index([updated_by], map: \"fk__document_update_by\")\n  @@index([area_id], map: \"fk_document_area\")\n  @@index([discipline_id], map: \"fk_document_discipline\")\n  @@index([latest_revision_id], map: \"fk_document_document_revision\")\n  @@index([level_id], map: \"fk_document_location_level\")\n  @@index([location_id], map: \"fk_document_location\")\n  @@index([created_by_company], map: \"fk__document_created_by_company\")\n  @@index([updated_by_company], map: \"fk__document_updated_by_company\")\n  @@index([building_id], map: \"fk_document_building\")\n  @@index([area_detail_id], map: \"fk_document_area_detail\")\n  @@index([site_id], map: \"fk_document_site\")\n  @@index([submittal_category_id], map: \"fk_document_document_submittal_category\")\n  @@index([submittal_detail_id], map: \"fk_document_document_submittal_detail\")\n  @@index([submittal_type_id], map: \"fk_document_document_submittal_type\")\n  @@fulltext([document_number], map: \"ft_document_number\")\n  @@fulltext([title], map: \"ft_document_title\")\n  @@fulltext([title, document_number], map: \"ft_document_title_number\")\n  @@fulltext([searchable_subcontractor], map: \"ft_subcontractor\")\n}\n\nmodel document_type {\n  document_type_id       Int                      @id @default(autoincrement()) @db.UnsignedInt\n  type                   String                   @db.VarChar(50)\n  name                   String                   @db.VarChar(50)\n  abbreviation           String?                  @unique(map: \"uk_document_type_abbreviation\") @db.VarChar(16)\n  document               document[]\n  location_document_type location_document_type[]\n}\n\nmodel warp_budget_code {\n  budget_code_id          Int                   @id @db.UnsignedInt\n  budget_code             String?               @db.VarChar(256)\n  budget_code_description String?               @db.MediumText\n  cost_center_id          Int?                  @db.UnsignedInt\n  account_id              Int?                  @db.UnsignedInt\n  enabled                 Int?                  @db.SmallInt\n  create_date             DateTime?             @db.DateTime(0)\n  create_by_user_id       Int?                  @db.UnsignedInt\n  modify_date             DateTime?             @db.DateTime(0)\n  entity_id               Int?                  @db.UnsignedInt\n  WBS                     String?               @db.VarChar(256)\n  project_budget_code     project_budget_code[]\n  warp_cost_center        warp_cost_center?     @relation(fields: [cost_center_id], references: [cost_center_id], onDelete: Restrict, map: \"fk_warp_budget_code_cost_center\")\n  warp_entity             warp_entity?          @relation(fields: [entity_id], references: [entity_id], onDelete: Restrict, map: \"fk_warp_budget_code_entity\")\n  warp_user               warp_user?            @relation(fields: [create_by_user_id], references: [warp_user_id], onDelete: Restrict, map: \"fk_warp_budget_code_user\")\n  warp_po_line            warp_po_line[]\n\n  @@index([cost_center_id], map: \"fk_warp_budget_code_cost_center\")\n  @@index([entity_id], map: \"fk_warp_budget_code_entity\")\n  @@index([create_by_user_id], map: \"fk_warp_budget_code_user\")\n}\n\nmodel document_revision {\n  document_revision_id         Int                         @id @default(autoincrement()) @db.UnsignedInt\n  document_id                  Int                         @db.UnsignedInt\n  file_id                      String                      @db.VarChar(36)\n  revision                     String                      @db.VarChar(25)\n  location_document_purpose_id Int?                        @db.UnsignedInt\n  reference                    String?                     @db.VarChar(128)\n  notes                        String?                     @db.MediumText\n  creation_ts                  DateTime                    @default(now()) @db.Timestamp(3)\n  created_by                   Int                         @db.UnsignedInt\n  review_flow_id               Int?                        @db.UnsignedInt\n  latest_of_document           document[]                  @relation(\"document_latest_revision_idTodocument_revision\")\n  document_markup              document_markup[]\n  document                     document                    @relation(fields: [document_id], references: [document_id], onDelete: Cascade, map: \"fk_document_revision_document\")\n  file                         file                        @relation(fields: [file_id], references: [file_id], map: \"fk_document_revision_file\")\n  location_document_purpose    location_document_purpose?  @relation(fields: [location_document_purpose_id], references: [id], onUpdate: NoAction, map: \"fk_document_revision_location_document_purpose\")\n  review_flow                  review_flow?                @relation(fields: [review_flow_id], references: [id], onDelete: Restrict, onUpdate: NoAction, map: \"fk_document_revision_review_flow\")\n  user                         new_user                    @relation(fields: [created_by], references: [id], map: \"fk_document_revision_user\")\n  document_revision_status     document_revision_status[]\n  notification                 notification[]\n  project_document_revision    project_document_revision[]\n  request_document_revision    request_document_revision[]\n  scope_document_revision      scope_document_revision[]\n  task                         task[]\n\n  @@unique([document_id, revision], map: \"uk_document_id_revision\")\n  @@index([file_id], map: \"fk_document_revision_file\")\n  @@index([created_by], map: \"fk_document_revision_user\")\n  @@index([document_revision_id, creation_ts], map: \"i_document_revision_id_creation_ts\")\n  @@index([location_document_purpose_id], map: \"fk_document_revision_location_document_purpose\")\n  @@index([review_flow_id], map: \"fk_document_revision_review_flow\")\n  @@fulltext([reference], map: \"ft_document_revision_reference\")\n  @@fulltext([revision], map: \"ft_document_revision_revision\")\n}\n\nmodel operation_log {\n  operation_log_id    Int                   @id @default(autoincrement()) @db.UnsignedInt\n  document            document?\n  issue               issue[]\n  labor_rate          labor_rate?\n  lead                lead[]\n  operation_log_entry operation_log_entry[]\n  project             project[]\n  request             request[]\n  scope               scope?\n}\n\nmodel operation_log_entry {\n  operation_log_entry_id      Int                      @id @default(autoincrement()) @db.UnsignedInt\n  operation_log_id            Int                      @db.UnsignedInt\n  operation_log_entry_type_id Int                      @db.UnsignedInt\n  details                     Json?\n  creation_ts                 DateTime                 @default(now()) @db.Timestamp(0)\n  is_sensitive                Int                      @default(0) @db.TinyInt\n  created_by                  Int                      @db.UnsignedInt\n  operation_log               operation_log            @relation(fields: [operation_log_id], references: [operation_log_id], map: \"fk_operation_log_entry_operation_log\")\n  operation_log_entry_type    operation_log_entry_type @relation(fields: [operation_log_entry_type_id], references: [operation_log_entry_type_id], map: \"fk_operation_log_entry_operation_log_entry_type\")\n  user                        new_user                 @relation(fields: [created_by], references: [id], map: \"fk_operation_log_entry_user\")\n\n  @@index([operation_log_id], map: \"fk_operation_log_entry_operation_log\")\n  @@index([operation_log_entry_type_id], map: \"fk_operation_log_entry_operation_log_entry_type\")\n  @@index([created_by], map: \"fk_operation_log_entry_user\")\n}\n\nmodel operation_log_entry_type {\n  operation_log_entry_type_id Int                   @id @default(autoincrement()) @db.UnsignedInt\n  type                        String                @unique(map: \"uk_operation_log_entry_type\") @db.VarChar(40)\n  operation_log_entry         operation_log_entry[]\n}\n\nmodel location_discipline {\n  id                             Int                           @id @default(autoincrement()) @db.UnsignedInt\n  location_id                    Int                           @db.UnsignedInt\n  discipline_id                  Int                           @db.UnsignedInt\n  indirect_labor_cost_percentage Decimal?                      @db.Decimal(10, 6)\n  discipline                     discipline                    @relation(fields: [discipline_id], references: [discipline_id], map: \"fk_location_discipline_discipline\")\n  location                       location                      @relation(fields: [location_id], references: [location_id], map: \"fk_location_discipline_location\")\n  team_member_area_discipline    team_member_area_discipline[]\n\n  @@unique([location_id, discipline_id], map: \"uk_location_discipline\")\n  @@index([discipline_id], map: \"fk_location_discipline_discipline\")\n}\n\nmodel location_scope_reviewer {\n  location_scope_reviewer_id Int                 @id @default(autoincrement()) @db.UnsignedInt\n  location_id                Int                 @db.UnsignedInt\n  scope_reviewer_type_id     Int                 @db.UnsignedInt\n  user_id                    Int                 @db.UnsignedInt\n  location                   location            @relation(fields: [location_id], references: [location_id], map: \"fk_location_scope_reviewer_location\")\n  scope_reviewer_type        scope_reviewer_type @relation(fields: [scope_reviewer_type_id], references: [scope_reviewer_type_id], map: \"fk_location_scope_reviewer_scope_reviewer_type\")\n  user                       new_user            @relation(fields: [user_id], references: [id], map: \"fk_location_scope_reviewer_user\")\n\n  @@unique([location_id, scope_reviewer_type_id], map: \"uk_location_id_scope_reviewer_type_id\")\n  @@index([user_id], map: \"fk_location_scope_reviewer_user\")\n  @@index([scope_reviewer_type_id], map: \"fk_location_scope_reviewer_scope_reviewer_type\")\n}\n\nmodel warp_country {\n  country_id          Int           @id\n  name                String?       @db.VarChar(256)\n  abbreviation        String?       @db.VarChar(256)\n  enabled             Int?          @db.SmallInt\n  default_currency_id Int?\n  region_id           Int?\n  country_code        String?       @db.VarChar(256)\n  warp_entity         warp_entity[]\n}\n\nmodel scope_reviewer {\n  scope_id                     Int                       @db.UnsignedInt\n  type_id                      Int                       @db.UnsignedInt\n  review_flow_step_decision_id Int                       @unique(map: \"uc_scope_review_review_flow_step_decision_id\") @db.UnsignedInt\n  user_id                      Int                       @db.UnsignedInt\n  scope                        scope                     @relation(fields: [scope_id], references: [scope_id], onDelete: Cascade, map: \"fk__scope_reviewer_scope\")\n  scope_reviewer_type          scope_reviewer_type       @relation(fields: [type_id], references: [scope_reviewer_type_id], map: \"fk_scope_reviewer_scope_reviewer_type_id\")\n  user                         new_user                  @relation(fields: [user_id], references: [id], map: \"fk_scope_reviewer_user_id\")\n  review_flow_step_decision    review_flow_step_decision @relation(fields: [review_flow_step_decision_id], references: [review_flow_step_decision_id], map: \"fk_scope_reviewer_review_flow_decision\")\n\n  @@id([scope_id, user_id, type_id, review_flow_step_decision_id])\n  @@index([type_id], map: \"fk__scope_reviewer_scope_reviewer_type_id\")\n  @@index([user_id], map: \"fk__scope_reviewer_user_id\")\n}\n\nmodel scope_review_template {\n  scope_review_template_id   Int                          @id @default(autoincrement()) @db.UnsignedInt\n  name                       String                       @db.VarChar(255)\n  location_id                Int                          @db.UnsignedInt\n  is_deleted                 Int                          @default(0) @db.SmallInt\n  creation_ts                DateTime                     @default(now()) @db.Timestamp(0)\n  update_ts                  DateTime                     @default(now()) @db.Timestamp(0)\n  created_by                 Int                          @db.UnsignedInt\n  updated_by                 Int?                         @db.UnsignedInt\n  scope                      scope[]\n  created_by_user            new_user                     @relation(\"scope_review_template_created_byTouser\", fields: [created_by], references: [id], map: \"fk_scope_review_template_created_by_user\")\n  location                   location                     @relation(fields: [location_id], references: [location_id], map: \"fk_scope_review_template_location\")\n  updated_by_user            new_user?                    @relation(\"scope_review_template_updated_byTouser\", fields: [updated_by], references: [id], onDelete: Restrict, map: \"fk_scope_review_template_updated_by_user\")\n  scope_review_template_step scope_review_template_step[]\n\n  @@index([created_by], map: \"fk_scope_review_template_created_by_user\")\n  @@index([location_id], map: \"fk_scope_review_template_location\")\n  @@index([updated_by], map: \"fk_scope_review_template_updated_by_user\")\n}\n\nmodel scope_review_template_reviewer {\n  scope_review_template_reviewer_id Int                         @id @default(autoincrement()) @db.UnsignedInt\n  scope_reviewer_type_id            Int                         @db.UnsignedInt\n  scope_review_template_group_id    Int                         @db.UnsignedInt\n  user_id                           Int                         @db.UnsignedInt\n  scope_review_template_group       scope_review_template_group @relation(fields: [scope_review_template_group_id], references: [scope_review_template_group_id], onDelete: Cascade, map: \"fk_scope_review_template_reviewer_group\")\n  scope_reviewer_type               scope_reviewer_type         @relation(fields: [scope_reviewer_type_id], references: [scope_reviewer_type_id], map: \"fk_scope_reviewer_template_reviewer_scope_reviewer_type\")\n  user                              new_user                    @relation(fields: [user_id], references: [id], map: \"fk_scope_reviewer_template_reviewer_user\")\n\n  @@index([scope_reviewer_type_id], map: \"fk_scope_reviewer_template_reviewer_scope_reviewer_type\")\n  @@index([scope_review_template_group_id], map: \"fk_scope_review_template_reviewer_group\")\n  @@index([user_id], map: \"fk_scope_reviewer_template_reviewer_user\")\n}\n\nmodel scope_review_template_step {\n  scope_review_template_step_id Int                           @id @default(autoincrement()) @db.UnsignedInt\n  scope_review_template_id      Int                           @db.UnsignedInt\n  description                   String                        @db.VarChar(255)\n  step_number                   Int\n  scope_review_template_group   scope_review_template_group[]\n  scope_review_template         scope_review_template         @relation(fields: [scope_review_template_id], references: [scope_review_template_id], onDelete: Cascade, map: \"fk_scope_review_template_step_scope_review_template\")\n\n  @@index([scope_review_template_id], map: \"fk_scope_review_template_step_scope_review_template\")\n}\n\nmodel scope_spend_type {\n  scope_id      Int        @db.UnsignedInt\n  spend_type_id Int        @db.UnsignedInt\n  scope         scope      @relation(fields: [scope_id], references: [scope_id], onDelete: Cascade, map: \"fk_scope_spend_type_scope\")\n  spend_type    spend_type @relation(fields: [spend_type_id], references: [spend_type_id], map: \"fk_scope_spend_type_spend_type\")\n\n  @@id([scope_id, spend_type_id])\n  @@index([spend_type_id], map: \"fk_scope_spend_type_spend_type\")\n}\n\nmodel spend_type {\n  spend_type_id    Int                @id @default(autoincrement()) @db.UnsignedInt\n  type             String             @db.VarChar(45)\n  scope_spend_type scope_spend_type[]\n}\n\nmodel asset {\n  asset_id                    Int                          @id @default(autoincrement()) @db.UnsignedInt\n  asset_code                  String                       @db.VarChar(255)\n  location_id                 Int                          @db.UnsignedInt\n  description                 String                       @db.VarChar(255)\n  csi_division_id             Int?                         @db.UnsignedInt\n  csi_cost_element_id         Int?                         @db.UnsignedInt\n  discipline_id               Int?                         @db.UnsignedInt\n  unit_of_measure_id          Int?                         @db.UnsignedInt\n  creation_ts                 DateTime                     @default(now()) @db.Timestamp(0)\n  update_ts                   DateTime                     @default(now()) @db.Timestamp(0)\n  asset_type_id               Int?                         @db.UnsignedInt\n  supplier_id                 Int?                         @db.UnsignedInt\n  asset_category_id           Int                          @db.UnsignedInt\n  created_by                  Int                          @db.UnsignedInt\n  updated_by                  Int?                         @db.UnsignedInt\n  asset_category              asset_category               @relation(fields: [asset_category_id], references: [asset_category_id], map: \"fk_asset_category\")\n  asset_type                  asset_type?                  @relation(fields: [asset_type_id], references: [asset_type_id], onDelete: Restrict, map: \"fk_asset_type\")\n  user_asset_created_byTouser new_user                     @relation(\"asset_created_byTouser\", fields: [created_by], references: [id], map: \"fk_asset_createdby\")\n  csi_cost_element            csi_cost_element?            @relation(fields: [csi_cost_element_id], references: [cost_element_id], onDelete: Restrict, map: \"fk_asset_csi_cost_element\")\n  csi_division                csi_division?                @relation(fields: [csi_division_id], references: [division_id], onDelete: Restrict, map: \"fk_asset_csi_division\")\n  discipline                  discipline?                  @relation(fields: [discipline_id], references: [discipline_id], onDelete: Restrict, map: \"fk_asset_discipline\")\n  location                    location                     @relation(fields: [location_id], references: [location_id], map: \"fk_asset_location\")\n  unit_of_measure             unit_of_measure?             @relation(fields: [unit_of_measure_id], references: [unit_of_measure_id], onDelete: Restrict, map: \"fk_asset_unit_of_measure\")\n  user_asset_updated_byTouser new_user?                    @relation(\"asset_updated_byTouser\", fields: [updated_by], references: [id], onDelete: Restrict, map: \"fk_asset_updatedby\")\n  warp_supplier               warp_supplier?               @relation(fields: [supplier_id], references: [supplier_id], onDelete: Restrict, map: \"fk_asset_supplier\")\n  asset_attachment            asset_attachment[]\n  asset_part                  asset_part[]\n  asset_price                 asset_price[]\n  cost_line_item              cost_line_item[]\n  project_planning_equipment  project_planning_equipment[]\n\n  @@unique([location_id, asset_code], map: \"unique_asset_code\")\n  @@index([created_by], map: \"fk_asset_createdby\")\n  @@index([csi_cost_element_id], map: \"fk_asset_csi_cost_element\")\n  @@index([csi_division_id], map: \"fk_asset_csi_division\")\n  @@index([discipline_id], map: \"fk_asset_discipline\")\n  @@index([unit_of_measure_id], map: \"fk_asset_unit_of_measure\")\n  @@index([updated_by], map: \"fk_asset_updatedby\")\n  @@index([asset_category_id], map: \"fk_asset_asset_category\")\n  @@index([asset_type_id], map: \"fk_asset_asset_type\")\n  @@index([supplier_id], map: \"fk_asset_warp_supplier\")\n}\n\nmodel asset_price {\n  asset_price_id                    Int            @id @default(autoincrement()) @db.UnsignedInt\n  asset_id                          Int            @db.UnsignedInt\n  quantity                          Decimal        @db.Decimal(10, 2)\n  unit_man_hour                     Decimal        @db.Decimal(10, 2)\n  material_cost                     Decimal        @db.Decimal(10, 2)\n  equipment_cost                    Decimal?       @db.Decimal(10, 2)\n  cost_estimate_id                  Int?           @db.UnsignedInt\n  creation_ts                       DateTime       @default(now()) @db.Timestamp(0)\n  update_ts                         DateTime       @default(now()) @db.Timestamp(0)\n  description                       String?        @db.VarChar(255)\n  created_by                        Int            @db.UnsignedInt\n  updated_by                        Int?           @db.UnsignedInt\n  asset                             asset          @relation(fields: [asset_id], references: [asset_id], map: \"fk_asset\")\n  cost_estimate                     cost_estimate? @relation(fields: [cost_estimate_id], references: [cost_estimate_id], onDelete: Restrict, map: \"fk_asset_cost_estimate_id\")\n  user_asset_price_created_byTouser new_user       @relation(\"asset_price_created_byTouser\", fields: [created_by], references: [id], map: \"fk_asset_price_createdby\")\n  user_asset_price_updated_byTouser new_user?      @relation(\"asset_price_updated_byTouser\", fields: [updated_by], references: [id], onDelete: Restrict, map: \"fk_asset_price_updatedby\")\n\n  @@index([asset_id], map: \"fk_asset\")\n  @@index([created_by], map: \"fk_asset_price_createdby\")\n  @@index([updated_by], map: \"fk_asset_price_updatedby\")\n  @@index([cost_estimate_id], map: \"fk_asset_cost_estimate_id\")\n}\n\nmodel stakeholder_type {\n  stakeholder_type_id      Int                        @id @default(autoincrement()) @db.UnsignedInt\n  type                     String                     @db.VarChar(45)\n  name                     String?                    @db.VarChar(100)\n  issue_stakeholder        issue_stakeholder[]\n  project_stakeholder_user project_stakeholder_user[]\n  scope_stakeholder        scope_stakeholder[]\n}\n\nmodel project {\n  project_id                      Int                               @id @default(autoincrement()) @db.UnsignedInt\n  location_id                     Int                               @db.UnsignedInt\n  title                           String                            @db.VarChar(255)\n  description                     String?                           @db.Text\n  estimate_amount                 Decimal?                          @db.Decimal(20, 2)\n  cost_estimate_id                Int?                              @db.UnsignedInt\n  forecast_amount                 Decimal?                          @db.Decimal(20, 2)\n  budget_amount                   Decimal?                          @db.Decimal(20, 2)\n  budget_approval_date            DateTime?                         @db.Timestamp(0)\n  operation_log_id                Int                               @db.UnsignedInt\n  status_id                       Int                               @db.UnsignedInt\n  request_id                      Int?                              @db.UnsignedInt\n  creation_ts                     DateTime                          @default(now()) @db.Timestamp(0)\n  update_ts                       DateTime                          @default(now()) @db.Timestamp(0)\n  created_by                      Int                               @db.UnsignedInt\n  updated_by                      Int                               @db.UnsignedInt\n  project_code                    String?                           @db.VarChar(45)\n  cost_estimate                   cost_estimate?                    @relation(fields: [cost_estimate_id], references: [cost_estimate_id], onDelete: Restrict, map: \"fk_construction_cost_estimate\")\n  operation_log                   operation_log                     @relation(fields: [operation_log_id], references: [operation_log_id], map: \"fk_construction_cost_operation_log\")\n  current_status                  project_status_type               @relation(fields: [status_id], references: [project_status_type_id], map: \"fk_construction_cost_status\")\n  created_by_user                 new_user                          @relation(\"project_created_byTouser\", fields: [created_by], references: [id], map: \"fk_project_created_by_user\")\n  location                        location                          @relation(fields: [location_id], references: [location_id], map: \"fk_project_location\")\n  request                         request?                          @relation(fields: [request_id], references: [request_id], onDelete: Restrict, map: \"fk_project_request\")\n  updated_by_user                 new_user                          @relation(\"project_updated_byTouser\", fields: [updated_by], references: [id], map: \"fk_project_updated_by_user\")\n  project_area                    project_area[]\n  project_attachment              project_attachment[]\n  project_budget_code             project_budget_code[]\n  project_document_revision       project_document_revision[]\n  project_planning_phase          project_planning_phase[]\n  project_planning_subproject     project_planning_subproject[]\n  project_program                 project_program[]\n  project_stakeholder_team_member project_stakeholder_team_member[]\n  project_stakeholder_user        project_stakeholder_user[]\n  project_status                  project_status[]\n  request_form_value              request_form_value[]\n  saving                          saving[]\n  scope                           scope[]\n  task                            task[]\n\n  @@unique([location_id, project_code], map: \"uk_project_location_project_code\")\n  @@index([cost_estimate_id], map: \"fk_project_cost_estimate\")\n  @@index([operation_log_id], map: \"fk_project_cost_operation_log\")\n  @@index([status_id], map: \"fk_project_cost_status\")\n  @@index([created_by], map: \"fk_project_created_by_user\")\n  @@index([updated_by], map: \"fk_project_updated_by_user\")\n  @@index([request_id], map: \"fk_project_request\")\n}\n\nmodel project_budget_code {\n  project_id     Int              @db.UnsignedInt\n  budget_code_id Int              @db.UnsignedInt\n  budget_code    warp_budget_code @relation(fields: [budget_code_id], references: [budget_code_id], onDelete: Cascade, map: \"fk_project_budget_code_budget_code\")\n  project        project          @relation(fields: [project_id], references: [project_id], onDelete: Cascade, map: \"fk_project_budget_code_project\")\n\n  @@id([project_id, budget_code_id])\n  @@index([budget_code_id], map: \"fk_project_budget_code_budget_code\")\n}\n\nmodel project_status {\n  project_status_id      Int                 @id @default(autoincrement()) @db.UnsignedInt\n  project_id             Int                 @db.UnsignedInt\n  project_status_type_id Int                 @db.UnsignedInt\n  creation_ts            DateTime            @default(now()) @db.Timestamp(0)\n  created_by             Int                 @db.UnsignedInt\n  project                project             @relation(fields: [project_id], references: [project_id], onDelete: Cascade, map: \"fk_project_status_project\")\n  project_status_type    project_status_type @relation(fields: [project_status_type_id], references: [project_status_type_id], onDelete: Cascade, map: \"fk_project_status_status_type\")\n  user                   new_user            @relation(fields: [created_by], references: [id], map: \"fk_project_status_user\")\n\n  @@index([project_id], map: \"fk_project_status_project\")\n  @@index([project_status_type_id], map: \"fk_project_status_status_type\")\n  @@index([created_by], map: \"fk_project_status_user\")\n}\n\nmodel project_status_type {\n  project_status_type_id Int              @id @default(autoincrement()) @db.UnsignedInt\n  type                   String?          @db.VarChar(45)\n  name                   String           @db.VarChar(45)\n  project                project[]\n  project_status         project_status[]\n}\n\nmodel project_area {\n  project_id Int     @db.UnsignedInt\n  area_id    Int     @db.UnsignedInt\n  area       area    @relation(fields: [area_id], references: [area_id], map: \"fk_project_area_area\")\n  project    project @relation(fields: [project_id], references: [project_id], onDelete: Cascade, map: \"fk_project_area_project\")\n\n  @@id([project_id, area_id])\n  @@index([area_id], map: \"fk_project_area_area\")\n}\n\nmodel spend_category {\n  spend_category_id Int     @id @default(autoincrement()) @db.UnsignedInt\n  category          String  @db.VarChar(45)\n  is_deleted        Boolean @default(false)\n  scope             scope[]\n}\n\nmodel scope_review_template_group {\n  scope_review_template_group_id Int                              @id @default(autoincrement()) @db.UnsignedInt\n  name                           String                           @db.VarChar(255)\n  scope_review_template_step_id  Int                              @db.UnsignedInt\n  scope_review_template_step     scope_review_template_step       @relation(fields: [scope_review_template_step_id], references: [scope_review_template_step_id], onDelete: Cascade, map: \"fk_scope_review_template_group_scope_review_template_step\")\n  scope_review_template_reviewer scope_review_template_reviewer[]\n\n  @@unique([scope_review_template_group_id, scope_review_template_step_id], map: \"unique_scope_review_template_group_step\")\n  @@index([scope_review_template_step_id], map: \"fk_scope_review_template_group_step\")\n}\n\nmodel scope_supplier {\n  scope_id      Int           @db.UnsignedInt\n  supplier_id   Int           @db.UnsignedInt\n  scope         scope         @relation(fields: [scope_id], references: [scope_id], onDelete: Cascade, map: \"fk_scope_supplier_scope\")\n  warp_supplier warp_supplier @relation(fields: [supplier_id], references: [supplier_id], map: \"fk_scope_supplier_warp_supplier\")\n\n  @@id([scope_id, supplier_id])\n  @@index([supplier_id], map: \"fk_scope_supplier_warp_supplier\")\n}\n\nmodel scope_purchase_order_line {\n  scope_purchase_order_line_id Int                  @id @default(autoincrement()) @db.UnsignedInt\n  scope_purchase_order_id      Int                  @db.UnsignedInt\n  purchase_order_line_id       BigInt               @db.UnsignedBigInt\n  purchase_order_id            BigInt               @db.UnsignedBigInt\n  scope_purchase_order         scope_purchase_order @relation(fields: [scope_purchase_order_id], references: [scope_purchase_order_id], onDelete: Cascade, map: \"fk_scope_purchase_order_line_scope_purchase_order\")\n  warp_po_line                 warp_po_line         @relation(fields: [purchase_order_line_id, purchase_order_id], references: [purchase_order_line_id, purchase_order_id], map: \"fk_scope_purchase_order_line_warp_po_line\")\n\n  @@index([scope_purchase_order_id], map: \"fk_scope_purchase_order_line_scope_purchase_order\")\n  @@index([purchase_order_line_id, purchase_order_id], map: \"fk_scope_purchase_order_line_warp_po_line\")\n}\n\nmodel scope_competitiveness {\n  scope_competitiveness_id Int     @id @default(autoincrement()) @db.UnsignedInt\n  name                     String  @db.VarChar(45)\n  class                    String  @db.VarChar(45)\n  scope                    scope[]\n}\n\nmodel scope_attachment {\n  scope_id      Int        @db.UnsignedInt\n  attachment_id String     @unique(map: \"attachment_id\") @db.VarChar(36)\n  creation_ts   DateTime   @default(now()) @db.Timestamp(0)\n  is_deleted    Int?       @default(0) @db.TinyInt\n  attachment    attachment @relation(fields: [attachment_id], references: [attachment_id], onDelete: Cascade, map: \"fk_attachment\")\n  scope         scope      @relation(fields: [scope_id], references: [scope_id], onDelete: Cascade, map: \"fk_scope_attachment_scope\")\n\n  @@id([scope_id, attachment_id])\n}\n\nmodel asset_category {\n  asset_category_id   Int     @id @default(autoincrement()) @db.UnsignedInt\n  asset_category_name String  @db.VarChar(255)\n  asset               asset[]\n}\n\nmodel asset_type {\n  asset_type_id   Int     @id @default(autoincrement()) @db.UnsignedInt\n  asset_type_name String  @db.VarChar(255)\n  is_deleted      Boolean @default(false)\n  asset           asset[]\n}\n\nmodel asset_attachment {\n  asset_id      Int        @db.UnsignedInt\n  attachment_id String     @unique(map: \"attachment_id\") @db.VarChar(36)\n  is_deleted    Boolean    @default(false)\n  asset         asset      @relation(fields: [asset_id], references: [asset_id], onDelete: Cascade, map: \"fk_asset_attachment_asset\")\n  attachment    attachment @relation(fields: [attachment_id], references: [attachment_id], onDelete: Cascade, map: \"fk_asset_attachment_attachment\")\n\n  @@id([asset_id, attachment_id])\n}\n\nmodel document_package {\n  package_id                Int                         @id @default(autoincrement()) @db.UnsignedInt\n  name                      String                      @db.VarChar(255)\n  creation_ts               DateTime                    @default(now()) @db.Timestamp(0)\n  update_ts                 DateTime?                   @default(now()) @db.Timestamp(0)\n  created_by                Int                         @db.UnsignedInt\n  updated_by                Int?                        @db.UnsignedInt\n  description               String?                     @db.MediumText\n  package_type_id           Int                         @db.UnsignedInt\n  location_id               Int                         @db.UnsignedInt\n  created_by_user           new_user                    @relation(\"document_package_created_byTouser\", fields: [created_by], references: [id], map: \"fk_package_created_by_user\")\n  document_package_type     document_package_type       @relation(fields: [package_type_id], references: [document_package_type_id], onDelete: NoAction, map: \"fk_document_package_document_package_type\")\n  location                  location                    @relation(fields: [location_id], references: [location_id], map: \"fk_document_package_location\")\n  updated_by_user           new_user?                   @relation(\"document_package_updated_byTouser\", fields: [updated_by], references: [id], onDelete: Restrict, map: \"fk_package_updated_by_user\")\n  document_package_document document_package_document[]\n  notification              notification[]\n\n  @@index([created_by], map: \"fk_document_package_created_by_user\")\n  @@index([updated_by], map: \"fk_document_package_updated_by_user\")\n  @@index([package_type_id], map: \"fk_document_package_document_package_type\")\n  @@index([location_id], map: \"fk_document_package_location\")\n}\n\nmodel asset_part {\n  asset_part_id         Int                     @id @default(autoincrement()) @db.UnsignedInt\n  asset_id              Int                     @db.UnsignedInt\n  name                  String                  @db.VarChar(255)\n  part_type_id          Int                     @db.UnsignedInt\n  supplier_id           Int                     @db.UnsignedInt\n  optional              Boolean                 @default(false)\n  quantity              Int                     @db.UnsignedInt\n  asset                 asset                   @relation(fields: [asset_id], references: [asset_id], onDelete: Cascade, map: \"fk_asset_part_asset\")\n  asset_part_type       asset_part_type         @relation(fields: [part_type_id], references: [asset_part_type_id], map: \"fk_asset_part_asset_part_type\")\n  warp_supplier         warp_supplier           @relation(fields: [supplier_id], references: [supplier_id], map: \"fk_asset_part_warp_supplier\")\n  asset_part_attachment asset_part_attachment[]\n  asset_part_utility    asset_part_utility[]\n\n  @@index([asset_id], map: \"fk_asset_part_asset\")\n  @@index([part_type_id], map: \"fk_asset_part_asset_part_type\")\n  @@index([supplier_id], map: \"fk_asset_part_warp_supplier\")\n}\n\nmodel asset_part_type {\n  asset_part_type_id Int          @id @default(autoincrement()) @db.UnsignedInt\n  name               String       @db.VarChar(255)\n  asset_part         asset_part[]\n}\n\nmodel supplier_user {\n  sso_id                              String                        @id @db.VarChar(128)\n  family_name                         String?                       @db.VarChar(128)\n  creation_ts                         DateTime                      @default(now()) @db.Timestamp(3)\n  update_ts                           DateTime?                     @db.Timestamp(0)\n  locale                              String?                       @db.VarChar(45)\n  given_name                          String?                       @db.VarChar(128)\n  name                                String?                       @db.VarChar(128)\n  email                               String?                       @db.VarChar(128)\n  job_title                           String?                       @db.VarChar(128)\n  created_by                          Int                           @db.UnsignedInt\n  updated_by                          Int?                          @db.UnsignedInt\n  searchable_user_name_email          String?                       @db.VarChar(300)\n  location_warp_supplier_user         location_warp_supplier_user[]\n  new_user                            new_user?\n  user_supplier_user_created_byTouser new_user                      @relation(\"supplier_user_created_byTouser\", fields: [created_by], references: [id], map: \"fk_supplier_user_created_by\")\n  user_supplier_user_updated_byTouser new_user?                     @relation(\"supplier_user_updated_byTouser\", fields: [updated_by], references: [id], onDelete: Restrict, map: \"fk_supplier_user_updated_by\")\n\n  @@index([created_by], map: \"fk_supplier_user_created_by\")\n  @@index([updated_by], map: \"fk_supplier_user_updated_by\")\n  @@fulltext([searchable_user_name_email], map: \"idx_searchable_user_name_email\")\n}\n\nmodel asset_part_attachment {\n  asset_part_id Int        @db.UnsignedInt\n  attachment_id String     @unique(map: \"uk_asset_part_attachment_id\") @db.VarChar(36)\n  is_deleted    Boolean    @default(false)\n  asset_part    asset_part @relation(fields: [asset_part_id], references: [asset_part_id], onDelete: Cascade, map: \"fk_asset_part_attachment_asset\")\n  attachment    attachment @relation(fields: [attachment_id], references: [attachment_id], onDelete: Cascade, map: \"fk_asset_part_attachment_attachment\")\n\n  @@id([asset_part_id, attachment_id])\n}\n\nmodel saving {\n  saving_id         Int                 @id @default(autoincrement()) @db.UnsignedInt\n  project_id        Int                 @db.UnsignedInt\n  amount            Decimal             @db.Decimal(28, 2)\n  creation_ts       DateTime            @default(now()) @db.Timestamp(0)\n  update_ts         DateTime            @default(now()) @db.Timestamp(0)\n  type_id           Int                 @db.UnsignedInt\n  description       String              @db.MediumText\n  effective_date    DateTime            @db.DateTime(0)\n  scope_id          Int?                @db.UnsignedInt\n  created_by        Int                 @db.UnsignedInt\n  updated_by        Int                 @db.UnsignedInt\n  created_by_user   new_user            @relation(\"saving_created_byTouser\", fields: [created_by], references: [id], map: \"fk_saving_created_by\")\n  project           project             @relation(fields: [project_id], references: [project_id], onDelete: Cascade, map: \"fk_saving_project\")\n  saving_type       saving_type         @relation(fields: [type_id], references: [id], map: \"fk_saving_saving_type\")\n  scope             scope?              @relation(fields: [scope_id], references: [scope_id], onDelete: Restrict, map: \"fk_saving_scope\")\n  updated_by_user   new_user            @relation(\"saving_updated_byTouser\", fields: [updated_by], references: [id], map: \"fk_saving_updated_by\")\n  saving_attachment saving_attachment[]\n\n  @@index([project_id], map: \"fk_saving_project\")\n  @@index([created_by], map: \"fk_saving_created_by\")\n  @@index([updated_by], map: \"fk_saving_updated_by\")\n  @@index([type_id], map: \"fk_saving_saving_type\")\n  @@index([scope_id], map: \"fk_saving_scope\")\n}\n\nmodel saving_type {\n  id     Int      @id @default(autoincrement()) @db.UnsignedInt\n  name   String   @db.VarChar(128)\n  group  String   @db.VarChar(128)\n  saving saving[]\n}\n\nmodel scope_review_flow {\n  review_flow_id   Int                @id @default(autoincrement()) @db.UnsignedInt\n  review_flow_step review_flow_step[]\n  scope            scope[]\n}\n\nmodel saving_attachment {\n  saving_id     Int        @db.UnsignedInt\n  attachment_id String     @unique(map: \"attachment_id\") @db.VarChar(36)\n  creation_ts   DateTime   @default(now()) @db.Timestamp(0)\n  is_deleted    Int?       @default(0) @db.TinyInt\n  saving        saving     @relation(fields: [saving_id], references: [saving_id], onDelete: Cascade, map: \"fk_saving\")\n  attachment    attachment @relation(fields: [attachment_id], references: [attachment_id], onDelete: Cascade, map: \"fk_saving_attachment\")\n\n  @@id([saving_id, attachment_id])\n}\n\nmodel review_decision {\n  id                         Int                          @id @default(autoincrement()) @db.UnsignedInt\n  reviewer_authority_id      Int                          @db.UnsignedInt\n  status                     review_decision_status\n  decision_date              DateTime?                    @db.Timestamp(0)\n  comment                    String?                      @db.MediumText\n  review_group_id            Int                          @db.UnsignedInt\n  reviewer_id                Int                          @db.UnsignedInt\n  review_group               review_group                 @relation(fields: [review_group_id], references: [id], onDelete: Cascade, map: \"fk_review_decision_review_group\")\n  reviewer_authority         reviewer_authority           @relation(fields: [reviewer_authority_id], references: [id], map: \"fk_review_decision_reviewer_authority\")\n  user                       new_user                     @relation(fields: [reviewer_id], references: [id], map: \"fk_review_decision_user\")\n  review_decision_attachment review_decision_attachment[]\n\n  @@index([review_group_id], map: \"fk_review_decision_review_group\")\n  @@index([reviewer_authority_id], map: \"fk_review_decision_reviewer_authority\")\n  @@index([reviewer_id], map: \"fk_review_decision_user\")\n}\n\nmodel review_flow {\n  id                                      Int                           @id @default(autoincrement()) @db.UnsignedInt\n  name                                    String                        @db.VarChar(255)\n  subject_type                            review_flow_subject_type\n  subject_id                              Int                           @db.UnsignedInt\n  due_date                                DateTime?                     @db.Timestamp(0)\n  approval_strategy                       review_flow_approval_strategy\n  creation_ts                             DateTime                      @default(now()) @db.Timestamp(0)\n  update_ts                               DateTime                      @default(now()) @db.Timestamp(0)\n  submission_ts                           DateTime?                     @db.Timestamp(0)\n  submission_comment                      String?                       @db.MediumText\n  created_by_id                           Int                           @db.UnsignedInt\n  submission_by_id                        Int?                          @db.UnsignedInt\n  updated_by_id                           Int?                          @db.UnsignedInt\n  review_template_id                      Int?                          @db.UnsignedInt\n  document_revision                       document_revision[]\n  user_review_flow_created_by_idTouser    new_user                      @relation(\"review_flow_created_by_idTouser\", fields: [created_by_id], references: [id], map: \"fk_review_flow_created_by_user\")\n  user_review_flow_submission_by_idTouser new_user?                     @relation(\"review_flow_submission_by_idTouser\", fields: [submission_by_id], references: [id], onDelete: Restrict, map: \"fk_review_flow_submission_by_user\")\n  review_template                         review_template?              @relation(fields: [review_template_id], references: [id], onUpdate: NoAction, map: \"fk_review_flow_template\")\n  user_review_flow_updated_by_idTouser    new_user?                     @relation(\"review_flow_updated_by_idTouser\", fields: [updated_by_id], references: [id], onDelete: Restrict, map: \"fk_review_flow_updated_by_user\")\n  review_step                             review_step[]\n  task                                    task[]\n\n  @@index([created_by_id], map: \"fk_review_flow_created_by_user\")\n  @@index([updated_by_id], map: \"fk_review_flow_updated_by_user\")\n  @@index([submission_by_id], map: \"fk_review_flow_submission_by_user\")\n  @@index([subject_id, subject_type], map: \"idx_review_flow_subject_id_type\")\n  @@index([review_template_id], map: \"fk_review_flow_template\")\n}\n\nmodel review_group {\n  id                   Int                               @id @default(autoincrement()) @db.UnsignedInt\n  name                 String                            @db.VarChar(255)\n  index                Int\n  approval_strategy    review_group_approval_strategy\n  reviewer_group_type  review_group_reviewer_group_type\n  review_step_id       Int                               @db.UnsignedInt\n  aggregation_strategy review_group_aggregation_strategy @default(acknowledge)\n  review_decision      review_decision[]\n  review_step          review_step                       @relation(fields: [review_step_id], references: [id], onDelete: Cascade, map: \"fk_review_group_review_step\")\n  task                 task?\n\n  @@index([review_step_id], map: \"fk_review_group_review_step\")\n}\n\nmodel review_step {\n  id                   Int                              @id @default(autoincrement()) @db.UnsignedInt\n  name                 String                           @db.VarChar(255)\n  index                Int\n  approval_strategy    review_step_approval_strategy\n  review_flow_id       Int                              @db.UnsignedInt\n  due_date             DateTime?                        @db.Timestamp(0)\n  aggregation_strategy review_step_aggregation_strategy @default(acknowledge)\n  review_group         review_group[]\n  review_flow          review_flow                      @relation(fields: [review_flow_id], references: [id], onDelete: Cascade, map: \"fk_review_step_review_flow\")\n\n  @@index([review_flow_id], map: \"fk_review_step_review_flow\")\n}\n\nmodel review_template {\n  id                         Int                               @id @default(autoincrement()) @db.UnsignedInt\n  name                       String                            @db.VarChar(255)\n  description                String?                           @db.MediumText\n  subject_type               review_template_subject_type\n  approval_strategy          review_template_approval_strategy\n  creation_ts                DateTime                          @default(now()) @db.Timestamp(0)\n  update_ts                  DateTime                          @default(now()) @db.Timestamp(0)\n  subject_id                 Int?                              @db.UnsignedInt\n  created_by_id              Int                               @db.UnsignedInt\n  updated_by_id              Int?                              @db.UnsignedInt\n  location_id                Int?                              @db.UnsignedInt\n  is_deleted                 Boolean\n  with_team_manager_fallback Boolean                           @default(true)\n  review_flow                review_flow[]\n  created_by_user            new_user                          @relation(\"review_template_created_by_idTouser\", fields: [created_by_id], references: [id], map: \"fk_review_template_created_by_user\")\n  location                   location?                         @relation(fields: [location_id], references: [location_id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_review_template_location\")\n  updated_by_user            new_user?                         @relation(\"review_template_updated_by_idTouser\", fields: [updated_by_id], references: [id], onDelete: Restrict, map: \"fk_review_template_updated_by_user\")\n  review_template_country    review_template_country[]\n  review_template_step       review_template_step[]\n  task                       task[]\n\n  @@index([created_by_id], map: \"fk_review_template_created_by_user\")\n  @@index([updated_by_id], map: \"fk_review_template_updated_by_user\")\n  @@index([subject_id], map: \"review_template_subject_id\")\n  @@index([location_id], map: \"fk_review_template_location\")\n}\n\nmodel review_template_group {\n  id                            Int                                        @id @default(autoincrement()) @db.UnsignedInt\n  name                          String                                     @db.VarChar(255)\n  index                         Int\n  approval_strategy             review_template_group_approval_strategy\n  reviewer_group_type           review_template_group_reviewer_group_type\n  review_template_step_id       Int                                        @db.UnsignedInt\n  aggregation_strategy          review_template_group_aggregation_strategy @default(acknowledge)\n  review_template_step          review_template_step                       @relation(fields: [review_template_step_id], references: [id], onDelete: Cascade, map: \"fk_review_template_group_review_template_step\")\n  review_template_reviewer      review_template_reviewer[]\n  review_template_reviewer_team review_template_reviewer_team[]\n\n  @@index([review_template_step_id], map: \"fk_review_template_group_review_template_step\")\n}\n\nmodel review_template_reviewer {\n  reviewer_authority_id    Int                   @db.UnsignedInt\n  review_template_group_id Int                   @db.UnsignedInt\n  reviewer_id              Int                   @db.UnsignedInt\n  review_template_group    review_template_group @relation(fields: [review_template_group_id], references: [id], onDelete: Cascade, map: \"fk_review_template_reviewer_review_template_group\")\n  reviewer_authority       reviewer_authority    @relation(fields: [reviewer_authority_id], references: [id], map: \"fk_review_template_reviewer_reviewer_authority\")\n  user                     new_user              @relation(fields: [reviewer_id], references: [id], map: \"fk_review_template_reviewer_user\")\n\n  @@id([reviewer_id, review_template_group_id])\n  @@index([review_template_group_id], map: \"fk_review_template_reviewer_review_template_group\")\n  @@index([reviewer_authority_id], map: \"fk_review_template_reviewer_reviewer_authority\")\n}\n\nmodel review_template_step {\n  id                    Int                                       @id @default(autoincrement()) @db.UnsignedInt\n  name                  String                                    @db.VarChar(255)\n  index                 Int\n  approval_strategy     review_template_step_approval_strategy\n  review_template_id    Int                                       @db.UnsignedInt\n  aggregation_strategy  review_template_step_aggregation_strategy @default(acknowledge)\n  review_template_group review_template_group[]\n  review_template       review_template                           @relation(fields: [review_template_id], references: [id], onDelete: Cascade, map: \"fk_review_template_step_review_template\")\n\n  @@index([review_template_id], map: \"fk_review_template_step_review_template\")\n}\n\nmodel reviewer_authority {\n  id                       Int                             @id @default(autoincrement()) @db.UnsignedInt\n  type                     String                          @unique(map: \"uk_reviewer_authority_type\") @db.VarChar(255)\n  name                     String                          @db.VarChar(255)\n  subject_type             reviewer_authority_subject_type\n  review_decision          review_decision[]\n  review_template_reviewer review_template_reviewer[]\n}\n\nmodel project_attachment {\n  project_id    Int        @db.UnsignedInt\n  attachment_id String     @unique(map: \"attachment_id\") @db.VarChar(36)\n  is_deleted    Int?       @default(0) @db.TinyInt\n  project       project    @relation(fields: [project_id], references: [project_id], onDelete: Cascade, map: \"fk_project\")\n  attachment    attachment @relation(fields: [attachment_id], references: [attachment_id], onDelete: Cascade, map: \"fk_project_attachment\")\n\n  @@id([project_id, attachment_id])\n}\n\nmodel request_type {\n  request_type_id           Int                         @unique(map: \"uk_request_type_id\") @default(autoincrement()) @db.UnsignedInt\n  location_id               Int                         @db.UnsignedInt\n  creation_ts               DateTime                    @default(now()) @db.Timestamp(0)\n  update_ts                 DateTime                    @db.Timestamp(0)\n  name                      String                      @db.VarChar(255)\n  prefix                    String                      @db.VarChar(255)\n  is_active                 Boolean                     @default(false)\n  is_external               Boolean                     @default(false)\n  can_be_created_in         String?\n  recipient                 String\n  is_deleted                Boolean                     @default(false)\n  can_only_be_elevation     Boolean                     @default(false)\n  can_create_scope          Boolean                     @default(false)\n  can_create_project        Boolean                     @default(false)\n  created_by                Int                         @db.UnsignedInt\n  updated_by                Int                         @db.UnsignedInt\n  auto_review_submit        Boolean                     @default(false)\n  has_document_linking_step Boolean                     @default(false)\n  createdByUser             new_user                    @relation(\"request_type_created_byTouser\", fields: [created_by], references: [id], map: \"fk_request_type_created_by\")\n  location                  location                    @relation(fields: [location_id], references: [location_id], map: \"fk_request_type_location\")\n  updatedByUser             new_user                    @relation(\"request_type_updated_byTouser\", fields: [updated_by], references: [id], map: \"fk_request_type_updated_by\")\n  upstream_request_types    request_type_relationship[] @relation(\"request_type_relationship_downstream_request_type_idTorequest_type\")\n  downstream_request_types  request_type_relationship[] @relation(\"request_type_relationship_upstream_request_type_idTorequest_type\")\n  request_type_revision     request_type_revision[]\n  request_type_team         request_type_team[]\n  request_type_user         request_type_user[]\n\n  @@id([request_type_id, location_id])\n  @@unique([prefix, location_id], map: \"uk_request_type_prefix\")\n  @@index([created_by], map: \"fk_request_type_created_by\")\n  @@index([location_id], map: \"fk_request_type_location\")\n  @@index([updated_by], map: \"fk_request_type_updated_by\")\n}\n\nmodel request_type_form_section {\n  request_type_form_section_id Int                       @id @default(autoincrement()) @db.UnsignedInt\n  name                         String                    @db.VarChar(255)\n  index                        Int                       @db.UnsignedInt\n  request_type_revision_id     Int                       @db.UnsignedInt\n  request_type_form_field      request_type_form_field[]\n  request_type_revision        request_type_revision     @relation(fields: [request_type_revision_id], references: [request_type_revision_id], onDelete: Cascade, map: \"fk_request_type_form_section_request_type_revision\")\n\n  @@index([request_type_revision_id], map: \"fk_request_type_form_section_request_type_revision\")\n}\n\nmodel request_type_relationship {\n  upstream_request_type_id                                                        Int          @db.UnsignedInt\n  downstream_request_type_id                                                      Int          @db.UnsignedInt\n  request_type_request_type_relationship_downstream_request_type_idTorequest_type request_type @relation(\"request_type_relationship_downstream_request_type_idTorequest_type\", fields: [downstream_request_type_id], references: [request_type_id], onDelete: Cascade, map: \"fk_request_type_relationship_downstream_request_type\")\n  request_type_request_type_relationship_upstream_request_type_idTorequest_type   request_type @relation(\"request_type_relationship_upstream_request_type_idTorequest_type\", fields: [upstream_request_type_id], references: [request_type_id], onDelete: Cascade, map: \"fk_request_type_relationship_upstream_request_type\")\n\n  @@id([downstream_request_type_id, upstream_request_type_id])\n  @@index([upstream_request_type_id], map: \"fk_request_type_relationship_upstream_request_type\")\n}\n\nmodel request_type_user {\n  request_type_user_id Int                    @id @default(autoincrement()) @db.UnsignedInt\n  request_type_id      Int                    @db.UnsignedInt\n  type                 request_type_user_type\n  area_id              Int?                   @db.UnsignedInt\n  user_id              Int                    @db.UnsignedInt\n  area                 area?                  @relation(fields: [area_id], references: [area_id], onDelete: Restrict, map: \"fk_request_type_user_area\")\n  request_type         request_type           @relation(fields: [request_type_id], references: [request_type_id], onDelete: Cascade, map: \"fk_request_type_user_request_type\")\n  user                 new_user               @relation(fields: [user_id], references: [id], map: \"fk_request_type_user_user\")\n\n  @@index([area_id], map: \"fk_request_type_user_area\")\n  @@index([user_id], map: \"fk_request_type_user_user\")\n  @@index([request_type_id], map: \"fk_request_type_user_request_type\")\n}\n\nmodel request_type_form_field {\n  request_type_form_field_id    Int                          @id @default(autoincrement()) @db.UnsignedInt\n  section_id                    Int                          @db.UnsignedInt\n  type_id                       Int                          @db.UnsignedInt\n  index                         Int                          @db.UnsignedInt\n  label                         String                       @db.VarChar(255)\n  config                        Json\n  previous_revision_field_id    Int?                         @db.UnsignedInt\n  request_form_value            request_form_value[]\n  request_type_form_field       request_type_form_field?     @relation(\"request_type_form_fieldTorequest_type_form_field\", fields: [previous_revision_field_id], references: [request_type_form_field_id], map: \"fk_request_type_form_field_previous_revision_field\")\n  other_request_type_form_field request_type_form_field[]    @relation(\"request_type_form_fieldTorequest_type_form_field\")\n  request_type_form_section     request_type_form_section    @relation(fields: [section_id], references: [request_type_form_section_id], onDelete: Cascade, map: \"fk_request_type_form_field_section\")\n  request_type_form_field_type  request_type_form_field_type @relation(fields: [type_id], references: [request_type_form_field_type_id], map: \"fk_request_type_form_field_type\")\n\n  @@index([type_id], map: \"fk_request_type_form_field_type\")\n  @@index([section_id], map: \"fk_request_type_form_field_section\")\n  @@index([previous_revision_field_id], map: \"fk_request_type_form_field_previous_revision_field\")\n}\n\nmodel request_type_form_field_type {\n  request_type_form_field_type_id Int                       @id @default(autoincrement()) @db.UnsignedInt\n  type                            String                    @unique(map: \"type\") @db.VarChar(255)\n  is_common                       Boolean                   @default(false)\n  default_label                   String?                   @db.VarChar(255)\n  config                          Json\n  request_type_form_field         request_type_form_field[]\n}\n\nmodel asset_part_utility {\n  asset_part_id Int        @db.UnsignedInt\n  attribute_id  Int        @db.UnsignedInt\n  value         String?    @db.VarChar(255)\n  asset_part    asset_part @relation(fields: [asset_part_id], references: [asset_part_id], onDelete: Cascade, map: \"fk_asset_part_utility_asset_part\")\n  attribute     attribute  @relation(fields: [attribute_id], references: [attribute_id], map: \"fk_asset_part_utility_attribute\")\n\n  @@id([asset_part_id, attribute_id])\n  @@index([attribute_id], map: \"fk_asset_part_utility_attribute\")\n}\n\nmodel attribute {\n  attribute_id       Int                  @id @default(autoincrement()) @db.UnsignedInt\n  category_id        Int                  @db.UnsignedInt\n  name               String               @db.VarChar(255)\n  data_type_id       Int                  @db.UnsignedInt\n  unit_of_measure_id Int?                 @db.UnsignedInt\n  options            Json?\n  asset_part_utility asset_part_utility[]\n  category           category             @relation(fields: [category_id], references: [category_id], map: \"fk_attribute_utility\")\n  data_type          data_type            @relation(fields: [data_type_id], references: [data_type_id], map: \"fk_attribute_data_type\")\n  unit_of_measure    unit_of_measure?     @relation(fields: [unit_of_measure_id], references: [unit_of_measure_id], onDelete: Restrict, map: \"fk_attribute_unit_of_measure\")\n\n  @@index([data_type_id], map: \"fk_attribute_data_type\")\n  @@index([unit_of_measure_id], map: \"fk_attribute_unit_of_measure\")\n  @@index([category_id], map: \"fk_attribute_category\")\n}\n\nmodel data_type {\n  data_type_id Int         @id @default(autoincrement()) @db.UnsignedInt\n  type         String      @unique(map: \"data_unique_type\") @db.VarChar(255)\n  attribute    attribute[]\n}\n\nmodel category {\n  category_id Int         @id @default(autoincrement()) @db.UnsignedInt\n  name        String      @db.VarChar(255)\n  type        String      @unique(map: \"category_unique_type\") @db.VarChar(255)\n  attribute   attribute[]\n}\n\nmodel document_purpose {\n  id                        Int                         @id @default(autoincrement()) @db.UnsignedInt\n  name                      String                      @db.VarChar(45)\n  type                      String                      @unique(map: \"type\") @db.VarChar(45)\n  abbreviation              String                      @unique(map: \"abbreviation\") @db.VarChar(16)\n  location_document_purpose location_document_purpose[]\n}\n\nmodel location_review_setting {\n  location_id Int                            @db.UnsignedInt\n  domain      location_review_setting_domain\n  option      Json\n  location    location                       @relation(fields: [location_id], references: [location_id], map: \"fk_location_review_setting_location\")\n\n  @@id([location_id, domain])\n  @@index([location_id], map: \"fk_location_review_setting_location\")\n}\n\nmodel project_planning_phase {\n  id                                           Int                                 @id @default(autoincrement()) @db.UnsignedInt\n  project_id                                   Int                                 @db.UnsignedInt\n  name                                         String                              @db.VarChar(128)\n  creation_ts                                  DateTime                            @default(now()) @db.Timestamp(3)\n  update_ts                                    DateTime?                           @db.Timestamp(3)\n  created_by                                   Int                                 @db.UnsignedInt\n  updated_by                                   Int?                                @db.UnsignedInt\n  user_project_planning_phase_created_byTouser new_user                            @relation(\"project_planning_phase_created_byTouser\", fields: [created_by], references: [id], map: \"fk_project_planning_phase_created_by\")\n  project                                      project                             @relation(fields: [project_id], references: [project_id], onDelete: Cascade, map: \"fk_project_planning_phase_project_id\")\n  user_project_planning_phase_updated_byTouser new_user?                           @relation(\"project_planning_phase_updated_byTouser\", fields: [updated_by], references: [id], onDelete: Restrict, map: \"fk_project_planning_phase_updated_by\")\n  project_planning_subproject_phase            project_planning_subproject_phase[]\n\n  @@index([created_by], map: \"fk_project_planning_phase_created_by\")\n  @@index([project_id], map: \"fk_project_planning_phase_project_id\")\n  @@index([updated_by], map: \"fk_project_planning_phase_updated_by\")\n}\n\nmodel location_document_purpose {\n  id                  Int                 @id @default(autoincrement()) @db.UnsignedInt\n  location_id         Int                 @db.UnsignedInt\n  document_purpose_id Int                 @db.UnsignedInt\n  creation_ts         DateTime            @default(now()) @db.Timestamp(0)\n  created_by          Int                 @db.UnsignedInt\n  abbreviation        String?             @db.VarChar(16)\n  document_revision   document_revision[]\n  user                new_user            @relation(fields: [created_by], references: [id], onDelete: NoAction, map: \"fk_location_document_purpose_created_by\")\n  document_purpose    document_purpose    @relation(fields: [document_purpose_id], references: [id], map: \"fk_location_document_purpose_document_purpose\")\n  location            location            @relation(fields: [location_id], references: [location_id], onDelete: NoAction, map: \"fk_location_document_purpose_location\")\n\n  @@unique([location_id, document_purpose_id], map: \"uk_location_document_purpose\")\n  @@unique([location_id, abbreviation], map: \"uk_location_document_purpose_abbreviation\")\n  @@index([created_by], map: \"fk_location_document_purpose_created_by\")\n  @@index([document_purpose_id], map: \"fk_location_document_purpose_document_purpose\")\n}\n\nmodel project_planning_subproject {\n  id                                      Int                                       @id @default(autoincrement()) @db.UnsignedInt\n  name                                    String                                    @db.VarChar(128)\n  project_id                              Int                                       @db.UnsignedInt\n  area_id                                 Int                                       @db.UnsignedInt\n  creation_ts                             DateTime                                  @default(now()) @db.Timestamp(3)\n  update_ts                               DateTime?                                 @db.Timestamp(3)\n  created_by                              Int                                       @db.UnsignedInt\n  updated_by                              Int?                                      @db.UnsignedInt\n  tesla_responsible_person                Int                                       @db.UnsignedInt\n  project_planning_equipment              project_planning_equipment[]\n  area                                    area                                      @relation(fields: [area_id], references: [area_id], map: \"fk_project_planning_subproject_area_id\")\n  created_by_user                         new_user                                  @relation(\"project_planning_subproject_created_byTouser\", fields: [created_by], references: [id], map: \"fk_project_planning_subproject_created_by\")\n  project                                 project                                   @relation(fields: [project_id], references: [project_id], onDelete: Cascade, map: \"fk_project_planning_subproject_project_id\")\n  tesla_responsible_person_user           new_user                                  @relation(\"project_planning_subproject_tesla_responsible_personTouser\", fields: [tesla_responsible_person], references: [id], onDelete: NoAction, map: \"fk_project_planning_subproject_tesla_responsible_person\")\n  updated_by_user                         new_user?                                 @relation(\"project_planning_subproject_updated_byTouser\", fields: [updated_by], references: [id], onDelete: Restrict, map: \"fk_project_planning_subproject_updated_by\")\n  project_planning_subproject_phase       project_planning_subproject_phase[]\n  project_planning_subproject_requirement project_planning_subproject_requirement[]\n\n  @@index([area_id], map: \"fk_project_planning_subproject_area_id\")\n  @@index([created_by], map: \"fk_project_planning_subproject_created_by\")\n  @@index([project_id], map: \"fk_project_planning_subproject_project_id\")\n  @@index([updated_by], map: \"fk_project_planning_subproject_updated_by\")\n  @@index([tesla_responsible_person], map: \"fk_project_planning_subproject_tesla_responsible_person\")\n}\n\nmodel project_planning_subproject_phase {\n  id                                Int                                @id @default(autoincrement()) @db.UnsignedInt\n  subproject_id                     Int                                @db.UnsignedInt\n  phase_id                          Int                                @db.UnsignedInt\n  internal_area_m2                  Decimal?                           @db.Decimal(28, 2)\n  external_area_m2                  Decimal?                           @db.Decimal(28, 2)\n  headcount_excluding_shifts        Int?                               @db.UnsignedInt\n  project_planning_equipment_phase  project_planning_equipment_phase[]\n  project_planning_phase            project_planning_phase             @relation(fields: [phase_id], references: [id], onDelete: Cascade, map: \"fk_project_planning_subproject_phase_phase_id\")\n  project_planning_subproject       project_planning_subproject        @relation(fields: [subproject_id], references: [id], onDelete: Cascade, map: \"fk_project_planning_subproject_phase_subproject_id\")\n  project_planning_subproject_shift project_planning_subproject_shift?\n\n  @@unique([subproject_id, phase_id], map: \"uk_subproject_id_phase_id\")\n  @@index([phase_id], map: \"fk_project_planning_subproject_phase_phase_id\")\n}\n\nmodel location_document_type {\n  location_id      Int           @db.UnsignedInt\n  document_type_id Int           @db.UnsignedInt\n  creation_ts      DateTime      @default(now()) @db.Timestamp(0)\n  created_by       Int           @db.UnsignedInt\n  auto_numbering   Boolean       @default(false)\n  user             new_user      @relation(fields: [created_by], references: [id], map: \"fk_location_document_type_created_by\")\n  document_type    document_type @relation(fields: [document_type_id], references: [document_type_id], map: \"fk_location_document_type_document_type\")\n  location         location      @relation(fields: [location_id], references: [location_id], map: \"fk_location_document_type_location\")\n\n  @@id([location_id, document_type_id])\n  @@index([created_by], map: \"fk_location_document_type_created_by\")\n  @@index([document_type_id], map: \"fk_location_document_type_document_type\")\n}\n\nmodel location_warp_entity {\n  location_id    Int         @db.UnsignedInt\n  warp_entity_id Int         @db.UnsignedInt\n  location       location    @relation(fields: [location_id], references: [location_id], map: \"fk_location_warp_entity_location_id\")\n  warp_entity    warp_entity @relation(fields: [warp_entity_id], references: [entity_id], map: \"fk_location_warp_entity_warp_entity_id\")\n\n  @@id([location_id, warp_entity_id])\n  @@index([warp_entity_id], map: \"fk_location_warp_entity_warp_entity_id\")\n}\n\nmodel project_planning_equipment {\n  id                                  Int                                   @id @default(autoincrement()) @db.UnsignedInt\n  subproject_id                       Int                                   @db.UnsignedInt\n  equipment_id                        Int                                   @db.UnsignedInt\n  creation_ts                         DateTime                              @default(now()) @db.Timestamp(3)\n  update_ts                           DateTime?                             @db.Timestamp(3)\n  created_by                          Int                                   @db.UnsignedInt\n  updated_by                          Int?                                  @db.UnsignedInt\n  notes                               String                                @default(dbgenerated(\"(_utf8mb4\\\\'\\\\')\")) @db.Text\n  created_by_user                     new_user                              @relation(\"project_planning_equipment_created_byTouser\", fields: [created_by], references: [id], map: \"fk_project_planning_equipment_created_by\")\n  asset                               asset                                 @relation(fields: [equipment_id], references: [asset_id], onDelete: Cascade, map: \"fk_project_planning_equipment_equipment_id\")\n  updated_by_user                     new_user?                             @relation(\"project_planning_equipment_updated_byTouser\", fields: [updated_by], references: [id], onDelete: Restrict, map: \"fk_project_planning_equipment_updated_by\")\n  project_planning_subproject         project_planning_subproject           @relation(fields: [subproject_id], references: [id], onDelete: Cascade, map: \"fk_project_planning_equipment_subproject_id\")\n  project_planning_equipment_phase    project_planning_equipment_phase[]\n  project_planning_equipment_quantity project_planning_equipment_quantity[]\n\n  @@index([created_by], map: \"fk_project_planning_equipment_created_by\")\n  @@index([equipment_id], map: \"fk_project_planning_equipment_equipment_id\")\n  @@index([updated_by], map: \"fk_project_planning_equipment_updated_by\")\n  @@index([subproject_id], map: \"subproject_id\")\n}\n\nmodel project_planning_equipment_phase {\n  id                                Int                               @id @default(autoincrement()) @db.UnsignedInt\n  equipment_id                      Int                               @db.UnsignedInt\n  subproject_phase_id               Int                               @db.UnsignedInt\n  project_planning_equipment        project_planning_equipment        @relation(fields: [equipment_id], references: [id], onDelete: Cascade, map: \"fk_project_planning_equipment_phase_equipment_id\")\n  project_planning_subproject_phase project_planning_subproject_phase @relation(fields: [subproject_phase_id], references: [id], onDelete: Cascade, map: \"fk_project_planning_equipment_phase_subproject_phase_id\")\n\n  @@unique([equipment_id, subproject_phase_id], map: \"uk_equipment_id_subproject_phase_id\")\n  @@index([subproject_phase_id], map: \"fk_project_planning_equipment_phase_subproject_phase_id\")\n}\n\nmodel request {\n  request_id                Int                         @id @default(autoincrement()) @db.UnsignedInt\n  creation_ts               DateTime?                   @default(now()) @db.Timestamp(0)\n  update_ts                 DateTime?                   @db.Timestamp(0)\n  active_recipient          String\n  operation_log_id          Int                         @db.UnsignedInt\n  request_type_revision_id  Int                         @db.UnsignedInt\n  created_by                Int                         @db.UnsignedInt\n  created_by_company        Int                         @db.UnsignedInt\n  updated_by                Int?                        @db.UnsignedInt\n  updated_by_company        Int?                        @db.UnsignedInt\n  comments                  comment[]\n  notification              notification[]\n  project                   project[]\n  created_by_user           new_user                    @relation(\"request_created_byTonew_user\", fields: [created_by], references: [id], map: \"fk_request_created_by\")\n  created_by_company_full   company                     @relation(\"request_created_by_companyTocompany\", fields: [created_by_company], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_request_created_by_company\")\n  operation_log             operation_log               @relation(fields: [operation_log_id], references: [operation_log_id], onDelete: Cascade, map: \"fk_request_operation_log_id\")\n  request_type_revision     request_type_revision       @relation(fields: [request_type_revision_id], references: [request_type_revision_id], map: \"fk_request_request_type_revision\")\n  updated_by_user           new_user?                   @relation(\"request_updated_byTonew_user\", fields: [updated_by], references: [id], onDelete: Restrict, map: \"fk_request_new_updated_by\")\n  updated_by_company_full   company?                    @relation(\"request_updated_by_companyTocompany\", fields: [updated_by_company], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_request_updated_by_company\")\n  request_document_revision request_document_revision[]\n  request_form_value        request_form_value[]\n  request_recipient         request_recipient[]\n  upstream_request          request_relationship[]      @relation(\"request_relationship_to_request_idTorequest\")\n  downstream_request        request_relationship[]      @relation(\"request_relationship_from_request_idTorequest\")\n  request_status            request_status[]\n  scope                     scope[]\n  task                      task[]\n\n  @@index([operation_log_id], map: \"fk_request_operation_log_id\")\n  @@index([request_type_revision_id], map: \"fk_request_request_type_revision\")\n  @@index([created_by], map: \"fk_request_created_by\")\n  @@index([updated_by], map: \"fk_request_updated_by\")\n  @@index([created_by_company], map: \"fk_request_created_by_company\")\n  @@index([updated_by_company], map: \"fk_request_updated_by_company\")\n}\n\nmodel request_form_value {\n  request_form_value_id   Int                     @id @default(autoincrement()) @db.UnsignedInt\n  request_id              Int                     @db.UnsignedInt\n  form_field_id           Int                     @db.UnsignedInt\n  title                   String?                 @db.VarChar(300)\n  area_id                 Int?                    @db.UnsignedInt\n  discipline_id           Int?                    @db.UnsignedInt\n  project_id              Int?                    @db.UnsignedInt\n  scope_id                Int?                    @db.UnsignedInt\n  description             String?                 @db.MediumText\n  attachment_id           String?                 @db.VarChar(36)\n  supplier_id             Int?                    @db.UnsignedInt\n  cost_estimate_id        Int?                    @db.UnsignedInt\n  due_date                DateTime?               @db.Timestamp(0)\n  text                    String?                 @db.LongText\n  date                    DateTime?               @db.DateTime(0)\n  boolean                 Boolean?\n  atom_user_id            Int?                    @db.UnsignedInt\n  area                    area?                   @relation(fields: [area_id], references: [area_id], onDelete: Restrict, map: \"fk_request_form_value_area\")\n  user                    new_user?               @relation(fields: [atom_user_id], references: [id], onDelete: Restrict, map: \"fk_request_form_value_atom_user\")\n  file                    attachment?             @relation(fields: [attachment_id], references: [attachment_id], onDelete: Restrict, map: \"fk_request_form_value_attachment\")\n  cost_estimate           cost_estimate?          @relation(fields: [cost_estimate_id], references: [cost_estimate_id], onDelete: Restrict, map: \"fk_request_form_value_cost_estimate\")\n  discipline              discipline?             @relation(fields: [discipline_id], references: [discipline_id], onDelete: Restrict, map: \"fk_request_form_value_discipline\")\n  request_type_form_field request_type_form_field @relation(fields: [form_field_id], references: [request_type_form_field_id], map: \"fk_request_form_value_field\")\n  project                 project?                @relation(fields: [project_id], references: [project_id], onDelete: Restrict, map: \"fk_request_form_value_project\")\n  request                 request                 @relation(fields: [request_id], references: [request_id], onDelete: Cascade, map: \"fk_request_form_value_request\")\n  scope                   scope?                  @relation(fields: [scope_id], references: [scope_id], onDelete: Restrict, map: \"fk_request_form_value_scope\")\n  supplier                warp_supplier?          @relation(fields: [supplier_id], references: [supplier_id], onDelete: Restrict, map: \"fk_request_form_value_supplier\")\n\n  @@index([area_id], map: \"fk_request_form_value_area\")\n  @@index([atom_user_id], map: \"fk_request_form_value_atom_user\")\n  @@index([attachment_id], map: \"fk_request_form_value_attachment\")\n  @@index([cost_estimate_id], map: \"fk_request_form_value_cost_estimate\")\n  @@index([discipline_id], map: \"fk_request_form_value_discipline\")\n  @@index([form_field_id], map: \"fk_request_form_value_field\")\n  @@index([project_id], map: \"fk_request_form_value_project\")\n  @@index([scope_id], map: \"fk_request_form_value_scope\")\n  @@index([supplier_id], map: \"fk_request_form_value_supplier\")\n  @@index([request_id], map: \"fk_request_form_value_request\")\n}\n\nmodel request_recipient {\n  request_recipient_id Int                    @id @default(autoincrement()) @db.UnsignedInt\n  request_id           Int                    @db.UnsignedInt\n  area_id              Int?                   @db.UnsignedInt\n  user_id              Int                    @db.UnsignedInt\n  type                 request_recipient_type @default(custom_user)\n  area                 area?                  @relation(fields: [area_id], references: [area_id], onDelete: Restrict, map: \"fk_request_user_area\")\n  request              request                @relation(fields: [request_id], references: [request_id], onDelete: Cascade, map: \"fk_request_user_request\")\n  user                 new_user               @relation(fields: [user_id], references: [id], map: \"fk_request_user_user\")\n\n  @@index([area_id], map: \"fk_request_user_area\")\n  @@index([request_id], map: \"fk_request_user_request\")\n  @@index([user_id], map: \"fk_request_user_user\")\n}\n\nmodel request_relationship {\n  from_request_id Int     @db.UnsignedInt\n  to_request_id   Int     @db.UnsignedInt\n  to_request      request @relation(\"request_relationship_to_request_idTorequest\", fields: [to_request_id], references: [request_id], onDelete: Cascade, map: \"fk_request_relationship_downstream_request\")\n  from_request    request @relation(\"request_relationship_from_request_idTorequest\", fields: [from_request_id], references: [request_id], onDelete: Cascade, map: \"fk_request_relationship_upstream_request\")\n\n  @@id([to_request_id, from_request_id])\n  @@index([from_request_id], map: \"fk_request_relationship_upstream_request\")\n}\n\nmodel request_status {\n  request_status_id      Int                 @id @default(autoincrement()) @db.UnsignedInt\n  request_id             Int                 @db.UnsignedInt\n  request_status_type_id Int                 @db.UnsignedInt\n  creation_ts            DateTime            @default(now()) @db.Timestamp(3)\n  is_last                Boolean             @default(false)\n  created_by             Int                 @db.UnsignedInt\n  request                request             @relation(fields: [request_id], references: [request_id], onDelete: Cascade, map: \"fk_request_status_request\")\n  request_status_type    request_status_type @relation(fields: [request_status_type_id], references: [request_status_type_id], onDelete: Cascade, map: \"fk_request_status_status_type\")\n  user                   new_user            @relation(fields: [created_by], references: [id], map: \"fk_request_status_user\")\n\n  @@index([request_id], map: \"fk_request_status_request\")\n  @@index([request_status_type_id], map: \"fk_request_status_status_type\")\n  @@index([created_by], map: \"fk_request_status_user\")\n}\n\nmodel request_status_type {\n  request_status_type_id Int              @id @default(autoincrement()) @db.UnsignedInt\n  type                   String           @unique(map: \"type\") @db.VarChar(45)\n  name                   String           @db.VarChar(45)\n  request_status         request_status[]\n}\n\nmodel user_settings {\n  id                   Int       @id @default(autoincrement()) @db.UnsignedInt\n  selected_location_id Int?      @db.UnsignedInt\n  user_id              Int       @unique(map: \"uk_user_settings\") @db.UnsignedInt\n  location             location? @relation(fields: [selected_location_id], references: [location_id], onDelete: Restrict, map: \"fk_user_settings_location\")\n  user                 new_user  @relation(fields: [user_id], references: [id], onDelete: Cascade, map: \"fk_user_settings_user\")\n\n  @@index([selected_location_id], map: \"fk_user_settings_location\")\n}\n\nmodel comment {\n  comment_id          Int                  @id @default(autoincrement()) @db.UnsignedInt\n  body                String               @db.Text\n  creation_ts         DateTime             @default(now()) @db.Timestamp(0)\n  update_ts           DateTime?            @db.Timestamp(0)\n  is_deleted          Boolean              @default(false)\n  request_id          Int?                 @db.UnsignedInt\n  scope_id            Int?                 @db.UnsignedInt\n  parent_comment_id   Int?                 @db.UnsignedInt\n  created_by          Int                  @db.UnsignedInt\n  updated_by          Int?                 @db.UnsignedInt\n  issue_id            Int?                 @db.UnsignedInt\n  visible_to_external Boolean              @default(false)\n  meta                Json?\n  created_by_user     new_user             @relation(\"comment_created_byTouser\", fields: [created_by], references: [id], map: \"fk_comment_created_by\")\n  issue               issue?               @relation(fields: [issue_id], references: [issue_id], onDelete: Cascade, map: \"fk_comment_issue_id\")\n  request             request?             @relation(fields: [request_id], references: [request_id], onDelete: Cascade, map: \"fk_comment_request_id\")\n  scope               scope?               @relation(fields: [scope_id], references: [scope_id], onDelete: Cascade, map: \"fk_comment_scope_id\")\n  updated_by_user     new_user?            @relation(\"comment_updated_byTouser\", fields: [updated_by], references: [id], onDelete: Restrict, map: \"fk_comment_updated_by\")\n  parent_comment      comment?             @relation(\"commentTocomment\", fields: [parent_comment_id], references: [comment_id], onDelete: Cascade, map: \"fk_parent_comment_id_comment\")\n  replies             comment[]            @relation(\"commentTocomment\")\n  comment_attachment  comment_attachment[]\n  comment_mention     comment_mention[]\n  notification        notification[]\n\n  @@index([created_by], map: \"fk_comment_created_by\")\n  @@index([updated_by], map: \"fk_comment_updated_by\")\n  @@index([parent_comment_id], map: \"fk_parent_comment_id_comment\")\n  @@index([request_id], map: \"fk_comment_request_id\")\n  @@index([scope_id], map: \"fk_comment_scope_id\")\n  @@index([issue_id], map: \"fk_comment_issue_id\")\n}\n\nmodel request_type_revision {\n  request_type_revision_id  Int                         @id @default(autoincrement()) @db.UnsignedInt\n  request_type_id           Int                         @db.UnsignedInt\n  creation_ts               DateTime                    @default(now()) @db.Timestamp(3)\n  created_by                Int                         @db.UnsignedInt\n  request                   request[]\n  request_type_form_section request_type_form_section[]\n  request_type              request_type                @relation(fields: [request_type_id], references: [request_type_id], onDelete: Cascade, map: \"fk_request_type_revision_request_type\")\n  user                      new_user                    @relation(fields: [created_by], references: [id], map: \"fk_request_type_revision_user\")\n\n  @@index([request_type_id], map: \"fk_request_type_revision_request_type\")\n  @@index([created_by], map: \"fk_request_type_revision_user\")\n}\n\nmodel location_warp_supplier {\n  location_id   Int           @db.UnsignedInt\n  supplier_id   Int           @db.UnsignedInt\n  company_id    Int?          @db.UnsignedInt\n  is_active     Boolean       @default(true)\n  company       company?      @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_location_warp_supplier_issuing_company\")\n  location      location      @relation(fields: [location_id], references: [location_id], map: \"fk_location_warp_supplier_location\")\n  warp_supplier warp_supplier @relation(fields: [supplier_id], references: [supplier_id], map: \"fk_location_warp_supplier_warp_supplier\")\n\n  @@id([supplier_id, location_id])\n  @@index([location_id], map: \"fk_location_warp_supplier_location\")\n  @@index([company_id], map: \"fk_location_warp_supplier_issuing_company\")\n}\n\nmodel comment_mention {\n  comment_mention_id Int      @id @default(autoincrement()) @db.UnsignedInt\n  comment_id         Int      @db.UnsignedInt\n  creation_ts        DateTime @default(now()) @db.Timestamp(0)\n  mentioned_user_id  Int      @db.UnsignedInt\n  comment            comment  @relation(fields: [comment_id], references: [comment_id], onDelete: Cascade, map: \"fk_comment_mention_comment_id\")\n  user               new_user @relation(fields: [mentioned_user_id], references: [id], map: \"fk_comment_mention_mentioned_user_id\")\n\n  @@index([comment_id], map: \"fk_comment_mention_comment_id\")\n  @@index([mentioned_user_id], map: \"fk_comment_mention_mentioned_user_id\")\n}\n\nmodel warp_asset {\n  asset_id         Int               @id @db.UnsignedInt\n  asset_code       String            @db.VarChar(50)\n  description      String?           @db.VarChar(500)\n  entity_id        Int?              @db.UnsignedInt\n  cost_center_id   Int?              @db.UnsignedInt\n  asset_location   String?           @db.VarChar(255)\n  enabled          Boolean?\n  GL_code          String?           @db.VarChar(50)\n  GL_description   String?           @db.VarChar(500)\n  SIO_code         String?           @db.VarChar(50)\n  SIO_description  String?           @db.VarChar(500)\n  warp_cost_center warp_cost_center? @relation(\"CostCenterToAssets\", fields: [cost_center_id], references: [cost_center_id], onDelete: Restrict, map: \"fk_warp_asset_cost_center_id\")\n  warp_entity      warp_entity?      @relation(\"EntityToAssets\", fields: [entity_id], references: [entity_id], onDelete: Restrict, map: \"fk_warp_asset_entity_id\")\n\n  @@index([cost_center_id], map: \"fk_warp_asset_cost_center_id\")\n  @@index([entity_id], map: \"fk_warp_asset_entity_id\")\n}\n\nmodel location_warp_supplier_user {\n  location_id          Int           @db.UnsignedInt\n  supplier_id          Int           @db.UnsignedInt\n  is_active            Boolean       @default(true)\n  supplier_user_sso_id String        @db.VarChar(128)\n  location             location      @relation(fields: [location_id], references: [location_id], onDelete: NoAction, map: \"fk_location_warp_supplier_supplier_user_location\")\n  warp_supplier        warp_supplier @relation(fields: [supplier_id], references: [supplier_id], onDelete: NoAction, map: \"fk_location_warp_supplier_supplier_user_warp_supplier\")\n  supplier_user        supplier_user @relation(fields: [supplier_user_sso_id], references: [sso_id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_location_warp_supplier_user_supplier_user\")\n\n  @@id([location_id, supplier_id, supplier_user_sso_id])\n  @@index([supplier_id], map: \"fk_location_warp_supplier_supplier_user_warp_supplier\")\n  @@index([supplier_user_sso_id], map: \"fk_location_warp_supplier_user_supplier_user\")\n}\n\n/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.\nmodel new_user {\n  id                                                                                                   Int                                       @id @default(autoincrement()) @db.UnsignedInt\n  tesla_user_id                                                                                        String?                                   @unique(map: \"tesla_user_id\") @db.VarChar(128)\n  supplier_user_sso_id                                                                                 String?                                   @unique(map: \"supplier_user_sso_id\") @db.VarChar(128)\n  aconex_user_id                                                                                       String?                                   @unique(map: \"aconex_user_id\") @db.VarChar(128)\n  name                                                                                                 String                                    @db.VarChar(128)\n  email                                                                                                String                                    @db.VarChar(128)\n  last_login_ts                                                                                        DateTime?                                 @db.Timestamp(0)\n  searchable_user_name_email                                                                           String?                                   @db.VarChar(300)\n  access_request_access_request_created_byTonew_user                                                   access_request[]                          @relation(\"access_request_created_byTonew_user\")\n  access_request_access_request_responded_byTonew_user                                                 access_request[]                          @relation(\"access_request_responded_byTonew_user\")\n  access_request_access_request_user_idTonew_user                                                      access_request[]                          @relation(\"access_request_user_idTonew_user\")\n  asset_asset_created_byTouser                                                                         asset[]                                   @relation(\"asset_created_byTouser\")\n  asset_asset_updated_byTouser                                                                         asset[]                                   @relation(\"asset_updated_byTouser\")\n  asset_price_asset_price_created_byTouser                                                             asset_price[]                             @relation(\"asset_price_created_byTouser\")\n  asset_price_asset_price_updated_byTouser                                                             asset_price[]                             @relation(\"asset_price_updated_byTouser\")\n  attachment                                                                                           attachment[]\n  comment_comment_created_byTouser                                                                     comment[]                                 @relation(\"comment_created_byTouser\")\n  comment_comment_updated_byTouser                                                                     comment[]                                 @relation(\"comment_updated_byTouser\")\n  comment_attachment                                                                                   comment_attachment[]\n  comment_mention                                                                                      comment_mention[]\n  cost_estimate_cost_estimate_created_byTouser                                                         cost_estimate[]                           @relation(\"cost_estimate_created_byTouser\")\n  cost_estimate_cost_estimate_updated_byTouser                                                         cost_estimate[]                           @relation(\"cost_estimate_updated_byTouser\")\n  cost_estimate_funding_request                                                                        cost_estimate_funding_request[]\n  cost_line_item_cost_line_item_created_byTouser                                                       cost_line_item[]                          @relation(\"cost_line_item_created_byTouser\")\n  cost_line_item_cost_line_item_updated_byTouser                                                       cost_line_item[]                          @relation(\"cost_line_item_updated_byTouser\")\n  cost_project_cost_project_created_byTouser                                                           cost_project[]                            @relation(\"cost_project_created_byTouser\")\n  cost_project_cost_project_updated_byTouser                                                           cost_project[]                            @relation(\"cost_project_updated_byTouser\")\n  cost_project_stakeholder                                                                             cost_project_stakeholder[]\n  cost_scope_cost_scope_created_byTouser                                                               cost_scope[]                              @relation(\"cost_scope_created_byTouser\")\n  cost_scope_cost_scope_updated_byTouser                                                               cost_scope[]                              @relation(\"cost_scope_updated_byTouser\")\n  cost_sub_project_cost_sub_project_created_byTouser                                                   cost_sub_project[]                        @relation(\"cost_sub_project_created_byTouser\")\n  cost_sub_project_cost_sub_project_updated_byTouser                                                   cost_sub_project[]                        @relation(\"cost_sub_project_updated_byTouser\")\n  document_document_created_byTouser                                                                   document[]                                @relation(\"document_created_byTouser\")\n  document_document_updated_byTouser                                                                   document[]                                @relation(\"document_updated_byTouser\")\n  document_markup_document_markup_created_byTonew_user                                                 document_markup[]                         @relation(\"document_markup_created_byTonew_user\")\n  document_markup_document_markup_updated_byTonew_user                                                 document_markup[]                         @relation(\"document_markup_updated_byTonew_user\")\n  document_package_document_package_created_byTouser                                                   document_package[]                        @relation(\"document_package_created_byTouser\")\n  document_package_document_package_updated_byTouser                                                   document_package[]                        @relation(\"document_package_updated_byTouser\")\n  document_revision                                                                                    document_revision[]\n  document_revision_status                                                                             document_revision_status[]\n  file                                                                                                 file[]\n  issue_issue_created_byTonew_user                                                                     issue[]                                   @relation(\"issue_created_byTonew_user\")\n  issue_issue_updated_byTonew_user                                                                     issue[]                                   @relation(\"issue_updated_byTonew_user\")\n  issue_assigned                                                                                       issue_assigned[]\n  issue_stakeholder                                                                                    issue_stakeholder[]\n  labor_rate_labor_rate_created_byTouser                                                               labor_rate[]                              @relation(\"labor_rate_created_byTouser\")\n  labor_rate_labor_rate_updated_byTouser                                                               labor_rate[]                              @relation(\"labor_rate_updated_byTouser\")\n  lead_lead_created_byTonew_user                                                                       lead[]                                    @relation(\"lead_created_byTonew_user\")\n  lead_lead_updated_byTonew_user                                                                       lead[]                                    @relation(\"lead_updated_byTonew_user\")\n  lead_address_lead_address_created_byTonew_user                                                       lead_address[]                            @relation(\"lead_address_created_byTonew_user\")\n  lead_address_lead_address_updated_byTonew_user                                                       lead_address[]                            @relation(\"lead_address_updated_byTonew_user\")\n  lead_attachment_lead_attachment_created_byTonew_user                                                 lead_attachment[]                         @relation(\"lead_attachment_created_byTonew_user\")\n  lead_attachment_lead_attachment_updated_byTonew_user                                                 lead_attachment[]                         @relation(\"lead_attachment_updated_byTonew_user\")\n  lead_questionnaire_lead_questionnaire_created_byTonew_user                                           lead_questionnaire[]                      @relation(\"lead_questionnaire_created_byTonew_user\")\n  lead_questionnaire_lead_questionnaire_updated_byTonew_user                                           lead_questionnaire[]                      @relation(\"lead_questionnaire_updated_byTonew_user\")\n  lead_questionnaire_template_lead_questionnaire_template_created_byTonew_user                         lead_questionnaire_template[]             @relation(\"lead_questionnaire_template_created_byTonew_user\")\n  lead_questionnaire_template_lead_questionnaire_template_updated_byTonew_user                         lead_questionnaire_template[]             @relation(\"lead_questionnaire_template_updated_byTonew_user\")\n  lead_stakeholder_lead_stakeholder_created_byTonew_user                                               lead_stakeholder[]                        @relation(\"lead_stakeholder_created_byTonew_user\")\n  lead_stakeholder_lead_stakeholder_updated_byTonew_user                                               lead_stakeholder[]                        @relation(\"lead_stakeholder_updated_byTonew_user\")\n  lead_stakeholder_lead_stakeholder_user_idTonew_user                                                  lead_stakeholder[]                        @relation(\"lead_stakeholder_user_idTonew_user\")\n  lead_status                                                                                          lead_status[]\n  lead_survey_analysis_created_byTonew_user                                                            lead_survey_analysis[]                    @relation(\"lead_survey_analysis_created_byTonew_user\")\n  lead_survey_analysis_updated_byTonew_user                                                            lead_survey_analysis[]                    @relation(\"lead_survey_analysis_updated_byTonew_user\")\n  location_location_created_byTouser                                                                   location[]                                @relation(\"location_created_byTouser\")\n  location                                                                                             location[]\n  location_document_field_type_location_document_field_type_updated_byTonew_user                       location_document_field_type[]            @relation(\"location_document_field_type_updated_byTonew_user\")\n  location_document_numbering_scheme_location_document_numbering_scheme_created_byTonew_user           location_document_numbering_scheme[]      @relation(\"location_document_numbering_scheme_created_byTonew_user\")\n  location_document_numbering_scheme_location_document_numbering_scheme_updated_byTonew_user           location_document_numbering_scheme[]      @relation(\"location_document_numbering_scheme_updated_byTonew_user\")\n  location_document_purpose                                                                            location_document_purpose[]\n  location_document_type                                                                               location_document_type[]\n  location_program                                                                                     location_program[]\n  location_scope_reviewer                                                                              location_scope_reviewer[]\n  supplier_user                                                                                        supplier_user?                            @relation(fields: [supplier_user_sso_id], references: [sso_id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_new_user_supplier_user\")\n  tesla_user                                                                                           user?                                     @relation(fields: [tesla_user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_new_user_tesla_user\")\n  notification                                                                                         notification[]\n  notification_notification_recipient_idTonew_user                                                     notification[]                            @relation(\"notification_recipient_idTonew_user\")\n  operation_log_entry                                                                                  operation_log_entry[]\n  project_project_created_byTouser                                                                     project[]                                 @relation(\"project_created_byTouser\")\n  project_project_updated_byTouser                                                                     project[]                                 @relation(\"project_updated_byTouser\")\n  project_document_revision                                                                            project_document_revision[]\n  project_planning_equipment_project_planning_equipment_created_byTouser                               project_planning_equipment[]              @relation(\"project_planning_equipment_created_byTouser\")\n  project_planning_equipment_project_planning_equipment_updated_byTouser                               project_planning_equipment[]              @relation(\"project_planning_equipment_updated_byTouser\")\n  project_planning_phase_project_planning_phase_created_byTouser                                       project_planning_phase[]                  @relation(\"project_planning_phase_created_byTouser\")\n  project_planning_phase_project_planning_phase_updated_byTouser                                       project_planning_phase[]                  @relation(\"project_planning_phase_updated_byTouser\")\n  project_planning_subproject_project_planning_subproject_created_byTouser                             project_planning_subproject[]             @relation(\"project_planning_subproject_created_byTouser\")\n  project_planning_subproject_project_planning_subproject_tesla_responsible_personTouser               project_planning_subproject[]             @relation(\"project_planning_subproject_tesla_responsible_personTouser\")\n  project_planning_subproject_project_planning_subproject_updated_byTouser                             project_planning_subproject[]             @relation(\"project_planning_subproject_updated_byTouser\")\n  project_planning_subproject_requirement_project_planning_subproject_requirement_created_byTonew_user project_planning_subproject_requirement[] @relation(\"project_planning_subproject_requirement_created_byTonew_user\")\n  project_planning_subproject_requirement_project_planning_subproject_requirement_updated_byTonew_user project_planning_subproject_requirement[] @relation(\"project_planning_subproject_requirement_updated_byTonew_user\")\n  project_stakeholder_user                                                                             project_stakeholder_user[]\n  project_status                                                                                       project_status[]\n  request_request_created_byTonew_user                                                                 request[]                                 @relation(\"request_created_byTonew_user\")\n  request_request_updated_byTonew_user                                                                 request[]                                 @relation(\"request_updated_byTonew_user\")\n  request_document_revision                                                                            request_document_revision[]\n  request_form_value                                                                                   request_form_value[]\n  request_recipient                                                                                    request_recipient[]\n  request_status                                                                                       request_status[]\n  request_type_request_type_created_byTouser                                                           request_type[]                            @relation(\"request_type_created_byTouser\")\n  request_type_request_type_updated_byTouser                                                           request_type[]                            @relation(\"request_type_updated_byTouser\")\n  request_type_revision                                                                                request_type_revision[]\n  request_type_user                                                                                    request_type_user[]\n  review_decision                                                                                      review_decision[]\n  review_flow_review_flow_created_by_idTouser                                                          review_flow[]                             @relation(\"review_flow_created_by_idTouser\")\n  review_flow_review_flow_submission_by_idTouser                                                       review_flow[]                             @relation(\"review_flow_submission_by_idTouser\")\n  review_flow_review_flow_updated_by_idTouser                                                          review_flow[]                             @relation(\"review_flow_updated_by_idTouser\")\n  review_flow_step_decision                                                                            review_flow_step_decision[]\n  review_template_review_template_created_by_idTouser                                                  review_template[]                         @relation(\"review_template_created_by_idTouser\")\n  review_template_review_template_updated_by_idTouser                                                  review_template[]                         @relation(\"review_template_updated_by_idTouser\")\n  review_template_reviewer                                                                             review_template_reviewer[]\n  saving_saving_created_byTouser                                                                       saving[]                                  @relation(\"saving_created_byTouser\")\n  saving_saving_updated_byTouser                                                                       saving[]                                  @relation(\"saving_updated_byTouser\")\n  scopes_created                                                                                       scope[]                                   @relation(\"scope_created_byTouser\")\n  scopes_updated                                                                                       scope[]                                   @relation(\"scope_updated_byTouser\")\n  scope_document_revision                                                                              scope_document_revision[]\n  scope_review_template_scope_review_template_created_byTouser                                         scope_review_template[]                   @relation(\"scope_review_template_created_byTouser\")\n  scope_review_template_scope_review_template_updated_byTouser                                         scope_review_template[]                   @relation(\"scope_review_template_updated_byTouser\")\n  scope_review_template_reviewer                                                                       scope_review_template_reviewer[]\n  scope_reviewer                                                                                       scope_reviewer[]\n  scope_stakeholder                                                                                    scope_stakeholder[]\n  scope_status                                                                                         scope_status[]\n  supplier_user_supplier_user_created_byTouser                                                         supplier_user[]                           @relation(\"supplier_user_created_byTouser\")\n  supplier_user_supplier_user_updated_byTouser                                                         supplier_user[]                           @relation(\"supplier_user_updated_byTouser\")\n  task_task_created_byTonew_user                                                                       task[]                                    @relation(\"task_created_byTonew_user\")\n  task_task_updated_byTonew_user                                                                       task[]                                    @relation(\"task_updated_byTonew_user\")\n  task_user                                                                                            task_user[]\n  team_team_created_byTonew_user                                                                       team[]                                    @relation(\"team_created_byTonew_user\")\n  team_team_updated_byTonew_user                                                                       team[]                                    @relation(\"team_updated_byTonew_user\")\n  team_member                                                                                          team_member[]\n  team_member_team_member_user_idTonew_user                                                            team_member[]                             @relation(\"team_member_user_idTonew_user\")\n  user_role                                                                                            user_role[]\n  user_settings                                                                                        user_settings?\n\n  @@fulltext([searchable_user_name_email], map: \"ft_user_name_email\")\n}\n\nmodel user {\n  user_id                            String         @id @db.VarChar(128)\n  family_name                        String?        @db.VarChar(128)\n  given_name                         String?        @db.VarChar(128)\n  name                               String         @db.VarChar(128)\n  locale                             String?        @db.VarChar(45)\n  email                              String         @db.VarChar(128)\n  status                             String?        @db.VarChar(128)\n  is_active                          Int?           @db.SmallInt\n  cost_center_code                   String?        @db.VarChar(128)\n  manager_id                         String?        @db.VarChar(128)\n  l360_trt_id                        Int?           @db.UnsignedInt\n  department_name                    String?        @db.VarChar(128)\n  supervisory_organization_hierarchy String?        @db.VarChar(1024)\n  new_user                           new_user?\n  l360_location                      l360_location? @relation(fields: [l360_trt_id], references: [trt_id], onDelete: Restrict, map: \"fk_user_l360_location\")\n\n  @@index([l360_trt_id], map: \"fk_user_l360_location\")\n}\n\nmodel lead {\n  lead_id              Int                    @id @default(autoincrement()) @db.UnsignedInt\n  title                String                 @db.VarChar(255)\n  description          String?                @db.MediumText\n  operation_type_id    Int                    @db.UnsignedInt\n  status_id            Int                    @db.UnsignedInt\n  operation_log_id     Int                    @db.UnsignedInt\n  location_id          Int                    @db.UnsignedInt\n  created_by           Int                    @db.UnsignedInt\n  creation_ts          DateTime               @default(now()) @db.Timestamp(0)\n  updated_by           Int                    @db.UnsignedInt\n  update_ts            DateTime               @default(now()) @db.Timestamp(0)\n  created_by_user      new_user               @relation(\"lead_created_byTonew_user\", fields: [created_by], references: [id], map: \"fk_lead_created_by\")\n  location             location               @relation(fields: [location_id], references: [location_id], map: \"fk_lead_location\")\n  operation_log        operation_log          @relation(fields: [operation_log_id], references: [operation_log_id], map: \"fk_lead_operation_log\")\n  operation_type       lead_operation_type    @relation(\"lead_operation_type_idTolead_enum\", fields: [operation_type_id], references: [lead_operation_type_id], map: \"fk_lead_operation_type\")\n  current_status       lead_status_type       @relation(\"lead_status_idTolead_enum\", fields: [status_id], references: [lead_status_type_id], map: \"fk_lead_status\")\n  updated_by_user      new_user               @relation(\"lead_updated_byTonew_user\", fields: [updated_by], references: [id], map: \"fk_lead_updated_by\")\n  lead_addresses       lead_address[]\n  lead_attachments     lead_attachment[]\n  lead_questionnaires  lead_questionnaire[]\n  lead_stakeholder     lead_stakeholder[]\n  lead_statuses        lead_status[]\n  lead_survey_analysis lead_survey_analysis[]\n\n  @@index([created_by], map: \"fk_lead_created_by\")\n  @@index([location_id], map: \"fk_lead_location\")\n  @@index([operation_log_id], map: \"fk_lead_operation_log\")\n  @@index([operation_type_id], map: \"fk_lead_operation_type\")\n  @@index([status_id], map: \"fk_lead_status\")\n  @@index([updated_by], map: \"fk_lead_updated_by\")\n}\n\nmodel lead_address {\n  id               Int                            @id @default(autoincrement()) @db.UnsignedInt\n  lead_id          Int                            @db.UnsignedInt\n  address_number   String?                        @db.VarChar(255)\n  address_street   String?                        @db.VarChar(255)\n  address_street_2 String?                        @db.VarChar(255)\n  city             String                         @db.VarChar(255)\n  county           String?                        @db.VarChar(100)\n  state            String                         @db.VarChar(255)\n  zip              String                         @db.VarChar(100)\n  country          String                         @db.VarChar(100)\n  latitude         Decimal                        @db.Decimal(10, 7)\n  longitude        Decimal                        @db.Decimal(10, 7)\n  address_provider lead_address_address_provider? @default(google)\n  created_by       Int                            @db.UnsignedInt\n  creation_ts      DateTime                       @default(now()) @db.Timestamp(0)\n  updated_by       Int                            @db.UnsignedInt\n  update_ts        DateTime                       @default(now()) @db.Timestamp(0)\n  lead             lead                           @relation(fields: [lead_id], references: [lead_id], onDelete: Cascade, map: \"fk_address_lead\")\n  created_by_user  new_user                       @relation(\"lead_address_created_byTonew_user\", fields: [created_by], references: [id], map: \"fk_lead_address_created_by\")\n  updated_by_user  new_user                       @relation(\"lead_address_updated_byTonew_user\", fields: [updated_by], references: [id], map: \"fk_lead_address_updated_by\")\n\n  @@index([lead_id], map: \"fk_address_lead\")\n  @@index([created_by], map: \"fk_lead_address_created_by\")\n  @@index([updated_by], map: \"fk_lead_address_updated_by\")\n}\n\nmodel lead_attachment {\n  lead_id         Int                  @db.UnsignedInt\n  attachment_id   String               @unique(map: \"attachment_id\") @db.VarChar(36)\n  type_id         Int                  @db.UnsignedInt\n  is_deleted      Int?                 @default(0) @db.TinyInt\n  created_by      Int                  @db.UnsignedInt\n  creation_ts     DateTime             @default(now()) @db.Timestamp(0)\n  updated_by      Int                  @db.UnsignedInt\n  update_ts       DateTime             @default(now()) @db.Timestamp(0)\n  lead            lead                 @relation(fields: [lead_id], references: [lead_id], onDelete: Cascade, map: \"fk_lead\")\n  attachment      attachment           @relation(fields: [attachment_id], references: [attachment_id], onDelete: Cascade, map: \"fk_lead_attachment\")\n  created_by_user new_user             @relation(\"lead_attachment_created_byTonew_user\", fields: [created_by], references: [id], map: \"fk_lead_attachment_created_by\")\n  updated_by_user new_user             @relation(\"lead_attachment_updated_byTonew_user\", fields: [updated_by], references: [id], map: \"fk_lead_attachment_updated_by\")\n  type            lead_attachment_type @relation(fields: [type_id], references: [lead_attachment_type_id], map: \"fk_type\")\n\n  @@id([lead_id, attachment_id])\n  @@index([created_by], map: \"fk_lead_attachment_created_by\")\n  @@index([updated_by], map: \"fk_lead_attachment_updated_by\")\n  @@index([type_id], map: \"fk_type\")\n}\n\nmodel lead_attachment_type {\n  lead_attachment_type_id Int               @id @default(autoincrement()) @db.UnsignedInt\n  type                    String            @unique(map: \"type\") @db.VarChar(45)\n  name                    String            @db.VarChar(45)\n  lead_attachment         lead_attachment[]\n}\n\nmodel lead_operation_type {\n  lead_operation_type_id Int    @id @default(autoincrement()) @db.UnsignedInt\n  type                   String @unique(map: \"type\") @db.VarChar(45)\n  name                   String @db.VarChar(45)\n  lead_operations        lead[] @relation(\"lead_operation_type_idTolead_enum\")\n}\n\nmodel lead_status_type {\n  lead_status_type_id Int           @id @default(autoincrement()) @db.UnsignedInt\n  type                String        @unique(map: \"type\") @db.VarChar(45)\n  name                String        @db.VarChar(45)\n  lead                lead[]        @relation(\"lead_status_idTolead_enum\")\n  lead_status         lead_status[]\n}\n\nmodel lead_status {\n  id               Int              @id @default(autoincrement()) @db.UnsignedInt\n  lead_id          Int              @db.UnsignedInt\n  status_type_id   Int              @db.UnsignedInt\n  created_by       Int              @db.UnsignedInt\n  creation_ts      DateTime         @default(now()) @db.Timestamp(0)\n  created_by_user  new_user         @relation(fields: [created_by], references: [id], map: \"fk_lead_status_created_by\")\n  lead             lead             @relation(fields: [lead_id], references: [lead_id], onDelete: Cascade, map: \"fk_lead_status_lead\")\n  lead_status_type lead_status_type @relation(fields: [status_type_id], references: [lead_status_type_id], map: \"fk_lead_status_status_type\")\n\n  @@index([status_type_id], map: \"fk_lead_status_status_type\")\n  @@index([created_by], map: \"fk_lead_status_created_by\")\n  @@index([lead_id], map: \"fk_lead_status_lead\")\n}\n\nmodel location_country {\n  location_id Int      @db.UnsignedInt\n  country_id  Int      @db.UnsignedInt\n  country     country  @relation(fields: [country_id], references: [country_id], onDelete: Cascade, map: \"fk_location_country_country\")\n  location    location @relation(fields: [location_id], references: [location_id], onDelete: Cascade, map: \"fk_location_country_location\")\n\n  @@id([location_id, country_id])\n  @@index([country_id], map: \"fk_location_country_country\")\n}\n\nmodel review_template_country {\n  review_template_id Int             @db.UnsignedInt\n  country_id         Int             @db.UnsignedInt\n  country            country         @relation(fields: [country_id], references: [country_id], onDelete: Cascade, map: \"fk_review_template_country_country\")\n  review_template    review_template @relation(fields: [review_template_id], references: [id], onDelete: Cascade, map: \"fk_review_template_country_template\")\n\n  @@id([review_template_id, country_id])\n  @@index([country_id], map: \"fk_review_template_country_country\")\n}\n\nmodel lead_stakeholder {\n  lead_id                                        Int                   @db.UnsignedInt\n  user_id                                        Int                   @db.UnsignedInt\n  type_id                                        Int                   @db.UnsignedInt\n  created_by                                     Int                   @db.UnsignedInt\n  creation_ts                                    DateTime              @default(now()) @db.Timestamp(0)\n  updated_by                                     Int                   @db.UnsignedInt\n  update_ts                                      DateTime              @default(now()) @db.Timestamp(0)\n  new_user_lead_stakeholder_created_byTonew_user new_user              @relation(\"lead_stakeholder_created_byTonew_user\", fields: [created_by], references: [id], map: \"fk_lead_stakeholder_created_by\")\n  lead                                           lead                  @relation(fields: [lead_id], references: [lead_id], onDelete: Cascade, map: \"fk_lead_stakeholder_lead\")\n  lead_stakeholder_type                          lead_stakeholder_type @relation(fields: [type_id], references: [stakeholder_type_id], map: \"fk_lead_stakeholder_type\")\n  new_user_lead_stakeholder_updated_byTonew_user new_user              @relation(\"lead_stakeholder_updated_byTonew_user\", fields: [updated_by], references: [id], map: \"fk_lead_stakeholder_updated_by\")\n  new_user_lead_stakeholder_user_idTonew_user    new_user              @relation(\"lead_stakeholder_user_idTonew_user\", fields: [user_id], references: [id], map: \"fk_lead_stakeholder_user\")\n\n  @@id([lead_id, user_id, type_id])\n  @@index([created_by], map: \"fk_lead_stakeholder_created_by\")\n  @@index([type_id], map: \"fk_lead_stakeholder_type\")\n  @@index([updated_by], map: \"fk_lead_stakeholder_updated_by\")\n  @@index([user_id], map: \"fk_lead_stakeholder_user\")\n}\n\nmodel lead_stakeholder_type {\n  stakeholder_type_id Int                @id @default(autoincrement()) @db.UnsignedInt\n  type                String             @db.VarChar(45)\n  name                String             @db.VarChar(100)\n  lead_stakeholder    lead_stakeholder[]\n}\n\nmodel lead_survey_analysis {\n  lead_id          Int                       @db.UnsignedInt\n  type_id          Int                       @db.UnsignedInt\n  analysis_content String                    @db.Text\n  created_by       Int                       @db.UnsignedInt\n  creation_ts      DateTime                  @default(now()) @db.Timestamp(0)\n  updated_by       Int                       @db.UnsignedInt\n  update_ts        DateTime                  @default(now()) @db.Timestamp(0)\n  created_by_user  new_user                  @relation(\"lead_survey_analysis_created_byTonew_user\", fields: [created_by], references: [id], map: \"fk_lead_survey_detail_created_by\")\n  lead             lead                      @relation(fields: [lead_id], references: [lead_id], onDelete: Cascade, map: \"fk_lead_survey_detail_lead\")\n  type             lead_survey_analysis_type @relation(fields: [type_id], references: [lead_survey_analysis_type_id], map: \"fk_lead_survey_detail_type\")\n  updated_by_user  new_user                  @relation(\"lead_survey_analysis_updated_byTonew_user\", fields: [updated_by], references: [id], map: \"fk_lead_survey_detail_updated_by\")\n\n  @@id([lead_id, type_id])\n  @@index([created_by], map: \"fk_lead_survey_detail_created_by\")\n  @@index([type_id], map: \"fk_lead_survey_detail_type\")\n  @@index([updated_by], map: \"fk_lead_survey_detail_updated_by\")\n}\n\nmodel lead_survey_analysis_type {\n  lead_survey_analysis_type_id Int                         @id @default(autoincrement()) @db.UnsignedInt\n  type                         String                      @db.VarChar(45)\n  name                         String                      @db.VarChar(45)\n  parent_id                    Int?                        @db.UnsignedInt\n  lead_survey_analysis         lead_survey_analysis[]\n  parent_type                  lead_survey_analysis_type?  @relation(\"lead_survey_analysis_typeTolead_survey_analysis_type\", fields: [parent_id], references: [lead_survey_analysis_type_id], onDelete: Restrict, map: \"fk_lead_survey_analysis_parent\")\n  lead_survey_analysis_type    lead_survey_analysis_type[] @relation(\"lead_survey_analysis_typeTolead_survey_analysis_type\")\n\n  @@index([parent_id], map: \"fk_lead_survey_analysis_parent\")\n}\n\nmodel country {\n  country_id                                   Int                                            @id @db.UnsignedInt\n  country_name                                 String                                         @db.VarChar(128)\n  country_2iso_code                            String                                         @db.VarChar(10)\n  location_country                             location_country[]\n  location_country_lead_questionnaire_template location_country_lead_questionnaire_template[]\n  review_template_country                      review_template_country[]\n}\n\nmodel document_package_type {\n  document_package_type_id Int                @id @default(autoincrement()) @db.UnsignedInt\n  type                     String             @db.VarChar(50)\n  name                     String             @db.VarChar(50)\n  abbreviation             String             @unique(map: \"uk_document_package_type_abbreviation\") @db.VarChar(16)\n  document_package         document_package[]\n}\n\nmodel document_markup {\n  id                   Int                  @id @default(autoincrement()) @db.UnsignedInt\n  document_revision_id Int                  @db.UnsignedInt\n  page                 Int                  @db.UnsignedInt\n  type                 document_markup_type\n  created_by           Int                  @db.UnsignedInt\n  updated_by           Int                  @db.UnsignedInt\n  creation_ts          DateTime             @default(now()) @db.Timestamp(0)\n  update_ts            DateTime             @default(now()) @db.Timestamp(0)\n  canvas_object        Json\n  style                Json?\n  content              Json?\n  version              Int                  @db.UnsignedInt\n  createdByUser        new_user             @relation(\"document_markup_created_byTonew_user\", fields: [created_by], references: [id], onUpdate: NoAction, map: \"fk_document_markup_created_by\")\n  document_revision    document_revision    @relation(fields: [document_revision_id], references: [document_revision_id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_document_markup_document_revision\")\n  updatedByUser        new_user             @relation(\"document_markup_updated_byTonew_user\", fields: [updated_by], references: [id], onUpdate: NoAction, map: \"fk_document_markup_updated_by\")\n\n  @@index([created_by], map: \"fk_document_markup_created_by\")\n  @@index([document_revision_id], map: \"fk_document_markup_document_revision\")\n  @@index([updated_by], map: \"fk_document_markup_updated_by\")\n}\n\nmodel project_planning_equipment_quantity {\n  id                            Int                        @id @default(autoincrement()) @db.UnsignedInt\n  project_planning_equipment_id Int                        @db.UnsignedInt\n  quantity                      Int                        @db.UnsignedInt\n  max_power_pct                 Decimal                    @db.Decimal(8, 4)\n  diversity_factor_pct          Decimal                    @db.Decimal(8, 4)\n  project_planning_equipment    project_planning_equipment @relation(fields: [project_planning_equipment_id], references: [id], onDelete: Cascade, map: \"fk_pproject_planning_equipment_id\")\n\n  @@index([project_planning_equipment_id], map: \"fk_project_planning_equipment_id\")\n}\n\nmodel company {\n  id                           Int                      @id @default(autoincrement()) @db.UnsignedInt\n  code                         String                   @unique(map: \"uk_company_code\") @db.VarChar(10)\n  name                         String                   @db.TinyText\n  searchable_company_code_name String?                  @db.VarChar(266)\n  document_created             document[]               @relation(\"document_created_by_companyTocompany\")\n  document_updated             document[]               @relation(\"document_updated_by_companyTocompany\")\n  location_warp_supplier       location_warp_supplier[]\n  request_created              request[]                @relation(\"request_created_by_companyTocompany\")\n  request_updated              request[]                @relation(\"request_updated_by_companyTocompany\")\n  task                         task[]\n  team                         team[]\n\n  @@fulltext([searchable_company_code_name], map: \"ft_company_code_name\")\n}\n\nmodel project_planning_subproject_shift {\n  subproject_phase_id               Int                               @id @db.UnsignedInt\n  number_of_shifts                  Int                               @db.UnsignedInt\n  headcount_per_shift               Int                               @db.UnsignedInt\n  project_planning_subproject_phase project_planning_subproject_phase @relation(fields: [subproject_phase_id], references: [id], onDelete: Cascade, map: \"fk_project_planning_subproject_shift_subproject_phase_id\")\n}\n\nmodel team {\n  id                            Int                             @id @default(autoincrement()) @db.UnsignedInt\n  name                          String                          @db.VarChar(255)\n  location_id                   Int                             @db.UnsignedInt\n  creation_ts                   DateTime                        @default(now()) @db.Timestamp(0)\n  update_ts                     DateTime                        @default(now()) @db.Timestamp(0)\n  created_by                    Int                             @db.UnsignedInt\n  updated_by                    Int                             @db.UnsignedInt\n  is_deleted                    Boolean                         @default(false)\n  company_id                    Int?                            @db.UnsignedInt\n  request_type_team             request_type_team[]\n  review_template_reviewer_team review_template_reviewer_team[]\n  scope                         scope[]\n  company                       company?                        @relation(fields: [company_id], references: [id], onDelete: Restrict, onUpdate: NoAction, map: \"fk_team_company\")\n  createdByUser                 new_user                        @relation(\"team_created_byTonew_user\", fields: [created_by], references: [id], onUpdate: NoAction, map: \"fk_team_created_by\")\n  location                      location                        @relation(fields: [location_id], references: [location_id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_team_location\")\n  updatedByUser                 new_user                        @relation(\"team_updated_byTonew_user\", fields: [updated_by], references: [id], onUpdate: NoAction, map: \"fk_team_updated_by\")\n  team_member                   team_member[]\n\n  @@index([created_by], map: \"fk_team_created_by\")\n  @@index([location_id], map: \"fk_team_location\")\n  @@index([updated_by], map: \"fk_team_updated_by\")\n  @@index([company_id], map: \"fk_team_company\")\n}\n\nmodel lead_questionnaire {\n  id                          Int                         @id @default(autoincrement()) @db.UnsignedInt\n  lead_id                     Int                         @db.UnsignedInt\n  template_id                 Int                         @db.UnsignedInt\n  answer                      String?                     @db.Text\n  created_by                  Int                         @db.UnsignedInt\n  creation_ts                 DateTime                    @default(now()) @db.Timestamp(0)\n  updated_by                  Int                         @db.UnsignedInt\n  update_ts                   DateTime                    @default(now()) @db.Timestamp(0)\n  created_by_user             new_user                    @relation(\"lead_questionnaire_created_byTonew_user\", fields: [created_by], references: [id], map: \"fk_lead_questionnaire_created_by\")\n  lead                        lead                        @relation(fields: [lead_id], references: [lead_id], onDelete: Cascade, map: \"fk_lead_questionnaire_lead\")\n  lead_questionnaire_template lead_questionnaire_template @relation(fields: [template_id], references: [id], map: \"fk_lead_questionnaire_template\")\n  updated_by_user             new_user                    @relation(\"lead_questionnaire_updated_byTonew_user\", fields: [updated_by], references: [id], map: \"fk_lead_questionnaire_updated_by\")\n\n  @@unique([lead_id, template_id], map: \"uc_lead_questionnaire_lead_template\")\n  @@index([created_by], map: \"fk_lead_questionnaire_created_by\")\n  @@index([template_id], map: \"fk_lead_questionnaire_template\")\n  @@index([updated_by], map: \"fk_lead_questionnaire_updated_by\")\n}\n\nmodel lead_questionnaire_template {\n  id                                           Int                                            @id @default(autoincrement()) @db.UnsignedInt\n  name                                         String                                         @db.VarChar(255)\n  questionnaire                                String?                                        @db.Text\n  created_by                                   Int                                            @db.UnsignedInt\n  creation_ts                                  DateTime                                       @default(now()) @db.Timestamp(0)\n  updated_by                                   Int                                            @db.UnsignedInt\n  update_ts                                    DateTime                                       @default(now()) @db.Timestamp(0)\n  lead_questionnaire                           lead_questionnaire[]\n  created_by_user                              new_user                                       @relation(\"lead_questionnaire_template_created_byTonew_user\", fields: [created_by], references: [id], map: \"fk_lead_questionnaire_template_created_by\")\n  updated_by_user                              new_user                                       @relation(\"lead_questionnaire_template_updated_byTonew_user\", fields: [updated_by], references: [id], map: \"fk_lead_questionnaire_template_updated_by\")\n  location_country_lead_questionnaire_template location_country_lead_questionnaire_template[]\n\n  @@index([created_by], map: \"fk_lead_questionnaire_template_created_by\")\n  @@index([updated_by], map: \"fk_lead_questionnaire_template_updated_by\")\n}\n\nmodel team_member {\n  id                              Int                               @id @default(autoincrement()) @db.UnsignedInt\n  team_id                         Int                               @db.UnsignedInt\n  user_id                         Int                               @db.UnsignedInt\n  creation_ts                     DateTime                          @default(now()) @db.Timestamp(0)\n  created_by                      Int                               @db.UnsignedInt\n  is_manager                      Boolean\n  project_stakeholder_team_member project_stakeholder_team_member[]\n  scope_stakeholder_team_member   scope_stakeholder_team_member[]\n  created_by_user                 new_user                          @relation(fields: [created_by], references: [id], onUpdate: NoAction, map: \"fk_team_member_user\")\n  team                            team                              @relation(fields: [team_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_team_member_team\")\n  user                            new_user                          @relation(\"team_member_user_idTonew_user\", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_team_member_created_by_user\")\n  team_member_area_discipline     team_member_area_discipline[]\n\n  @@unique([user_id, team_id], map: \"uc_team_member_team_user\")\n  @@index([created_by], map: \"fk_team_member_created_by_user\")\n  @@index([team_id], map: \"fk_team_member_team\")\n}\n\nmodel location_issue_type {\n  issue_type_id Int      @id @default(autoincrement()) @db.UnsignedInt\n  name          String   @db.VarChar(45)\n  abbreviation  String   @db.VarChar(16)\n  location_id   Int      @db.UnsignedInt\n  issue         issue[]\n  location      location @relation(fields: [location_id], references: [location_id], onDelete: NoAction, map: \"fk_location_issue_type_location\")\n\n  @@unique([location_id, abbreviation], map: \"uk_location_issue_type_abbreviation\")\n}\n\nmodel issue {\n  issue_id            Int                 @id @default(autoincrement()) @db.UnsignedInt\n  issue_type_id       Int                 @db.UnsignedInt\n  location_id         Int                 @db.UnsignedInt\n  title               String              @db.TinyText\n  details             String              @db.Text\n  description         String?             @db.MediumText\n  scope_id            Int                 @db.UnsignedInt\n  response_due_date   DateTime?           @db.Timestamp(0)\n  created_by          Int                 @db.UnsignedInt\n  creation_ts         DateTime            @default(now()) @db.Timestamp(0)\n  updated_by          Int                 @db.UnsignedInt\n  update_ts           DateTime            @default(now()) @db.Timestamp(0)\n  priority            issue_priority\n  status              issue_status        @default(open)\n  operation_log_id    Int                 @db.UnsignedInt\n  is_permit_relevant  Boolean             @default(false)\n  area_id             Int                 @db.UnsignedInt\n  comment             comment[]\n  area                area                @relation(fields: [area_id], references: [area_id], map: \"fk_issue_area\")\n  created_by_user     new_user            @relation(\"issue_created_byTonew_user\", fields: [created_by], references: [id], map: \"fk_issue_created_by\")\n  location            location            @relation(fields: [location_id], references: [location_id], map: \"fk_issue_location\")\n  operation_log       operation_log       @relation(fields: [operation_log_id], references: [operation_log_id], onDelete: Cascade, map: \"fk_issue_operation_log_id\")\n  scope               scope               @relation(fields: [scope_id], references: [scope_id], onDelete: Cascade, map: \"fk_issue_scope\")\n  location_issue_type location_issue_type @relation(fields: [issue_type_id], references: [issue_type_id], map: \"fk_issue_type\")\n  updated_by_user     new_user            @relation(\"issue_updated_byTonew_user\", fields: [updated_by], references: [id], map: \"fk_issue_updated_by\")\n  issue_assigned      issue_assigned[]\n  issue_attachment    issue_attachment[]\n  issue_discipline    issue_discipline[]\n  issue_stakeholder   issue_stakeholder[]\n  notification        notification[]\n\n  @@index([created_by], map: \"fk_issue_created_by\")\n  @@index([scope_id], map: \"fk_issue_scope\")\n  @@index([issue_type_id], map: \"fk_issue_type\")\n  @@index([updated_by], map: \"fk_issue_updated_by\")\n  @@index([location_id], map: \"fk_issue_location\")\n  @@index([operation_log_id], map: \"fk_issue_operation_log_id\")\n  @@index([area_id], map: \"fk_issue_area\")\n  @@fulltext([title], map: \"idx_title\")\n}\n\nmodel issue_attachment {\n  issue_id      Int        @db.UnsignedInt\n  attachment_id String     @db.VarChar(36)\n  is_deleted    Int?       @default(0) @db.TinyInt\n  attachment    attachment @relation(fields: [attachment_id], references: [attachment_id], onDelete: NoAction, map: \"fk_issue_attachment_attachment\")\n  issue         issue      @relation(fields: [issue_id], references: [issue_id], onDelete: Cascade, map: \"fk_issue_attachment_issue\")\n\n  @@id([issue_id, attachment_id])\n  @@index([attachment_id], map: \"fk_issue_attachment_attachment\")\n}\n\nmodel location_country_lead_questionnaire_template {\n  location_id                 Int                         @db.UnsignedInt\n  country_id                  Int                         @db.UnsignedInt\n  template_id                 Int                         @db.UnsignedInt\n  country                     country                     @relation(fields: [country_id], references: [country_id], map: \"fk_location_country_lead_questionnaire_template_country\")\n  location                    location                    @relation(fields: [location_id], references: [location_id], map: \"fk_location_country_lead_questionnaire_template_location\")\n  lead_questionnaire_template lead_questionnaire_template @relation(fields: [template_id], references: [id], onDelete: Cascade, map: \"fk_location_country_lead_questionnaire_template_template\")\n\n  @@id([location_id, country_id])\n  @@index([country_id], map: \"fk_location_country_lead_questionnaire_template_country\")\n  @@index([template_id], map: \"fk_location_country_lead_questionnaire_template_template\")\n}\n\nmodel project_stakeholder_team_member {\n  project_id     Int         @db.UnsignedInt\n  team_member_id Int         @db.UnsignedInt\n  project        project     @relation(fields: [project_id], references: [project_id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_project_stakeholder_team_member_project\")\n  team_member    team_member @relation(fields: [team_member_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_project_stakeholder_team_member_team_member\")\n\n  @@id([project_id, team_member_id])\n  @@index([team_member_id], map: \"fk_project_stakeholder_team_member_team_member\")\n}\n\nmodel project_stakeholder_user {\n  project_id          Int              @db.UnsignedInt\n  stakeholder_type_id Int              @db.UnsignedInt\n  user_id             Int              @db.UnsignedInt\n  project             project          @relation(fields: [project_id], references: [project_id], onDelete: Cascade, map: \"fk_project_stakeholder_project\")\n  stakeholder_type    stakeholder_type @relation(fields: [stakeholder_type_id], references: [stakeholder_type_id], onDelete: Cascade, map: \"fk_project_stakeholder_type\")\n  user                new_user         @relation(fields: [user_id], references: [id], map: \"fk_project_stakeholder_user\")\n\n  @@id([project_id, user_id, stakeholder_type_id])\n  @@index([stakeholder_type_id], map: \"fk_project_stakeholder_type\")\n  @@index([user_id], map: \"fk_project_stakeholder_user\")\n}\n\nmodel document_revision_status {\n  revision_status_id            Int                           @id @default(autoincrement()) @db.UnsignedInt\n  revision_id                   Int                           @db.UnsignedInt\n  revision_status_type_id       Int                           @db.UnsignedInt\n  creation_ts                   DateTime                      @default(now()) @db.Timestamp(3)\n  is_last                       Boolean                       @default(false)\n  created_by                    Int                           @db.UnsignedInt\n  document_revision             document_revision             @relation(fields: [revision_id], references: [document_revision_id], onDelete: Cascade, map: \"fk_document_revision_status_revision\")\n  document_revision_status_type document_revision_status_type @relation(fields: [revision_status_type_id], references: [revision_status_type_id], onDelete: Cascade, map: \"fk_document_revision_status_status_type\")\n  new_user                      new_user                      @relation(fields: [created_by], references: [id], onDelete: NoAction, map: \"fk_revision_status_user\")\n\n  @@index([revision_id], map: \"fk_document_revision_status_revision\")\n  @@index([revision_status_type_id], map: \"fk_document_revision_status_status_type\")\n  @@index([created_by], map: \"fk_revision_status_user\")\n}\n\nmodel document_revision_status_type {\n  revision_status_type_id  Int                        @id @default(autoincrement()) @db.UnsignedInt\n  type                     String                     @unique(map: \"type\") @db.VarChar(45)\n  name                     String                     @db.VarChar(45)\n  document_revision_status document_revision_status[]\n}\n\nmodel request_document_revision {\n  request_id        Int               @db.UnsignedInt\n  creation_ts       DateTime          @default(now()) @db.Timestamp(0)\n  revision_id       Int               @db.UnsignedInt\n  created_by        Int               @db.UnsignedInt\n  id                Int               @id @default(autoincrement()) @db.UnsignedInt\n  is_released       Boolean           @default(false)\n  new_user          new_user          @relation(fields: [created_by], references: [id], map: \"fk_request_node_created_by_user\")\n  request           request           @relation(fields: [request_id], references: [request_id], onDelete: Cascade, map: \"fk_request_node_request\")\n  document_revision document_revision @relation(fields: [revision_id], references: [document_revision_id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_request_node_revision\")\n\n  @@unique([request_id, revision_id], map: \"uk_request_node\")\n  @@index([created_by], map: \"fk_request_node_created_by_user\")\n  @@index([revision_id], map: \"fk_request_node_revision\")\n}\n\nmodel scope_document_revision {\n  scope_id          Int               @db.UnsignedInt\n  creation_ts       DateTime          @default(now()) @db.Timestamp(0)\n  revision_id       Int               @db.UnsignedInt\n  created_by        Int               @db.UnsignedInt\n  id                Int               @id @default(autoincrement()) @db.UnsignedInt\n  is_released       Boolean           @default(false)\n  createdByUser     new_user          @relation(fields: [created_by], references: [id], map: \"fk_scope_node_created_by_user\")\n  document_revision document_revision @relation(fields: [revision_id], references: [document_revision_id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_scope_node_revision\")\n  scope             scope             @relation(fields: [scope_id], references: [scope_id], onDelete: Cascade, map: \"fk_scope_node_scope\")\n\n  @@unique([scope_id, revision_id], map: \"uk_scope_node\")\n  @@index([created_by], map: \"fk_scope_node_created_by_user\")\n  @@index([revision_id], map: \"fk_scope_node_revision\")\n}\n\nmodel review_template_reviewer_team {\n  review_template_group_id Int                   @db.UnsignedInt\n  team_id                  Int                   @db.UnsignedInt\n  review_template_group    review_template_group @relation(fields: [review_template_group_id], references: [id], onDelete: Cascade, map: \"fk_review_template_reviewer_team_review_template_group\")\n  team                     team                  @relation(fields: [team_id], references: [id], map: \"fk_review_template_reviewer_team_team\")\n\n  @@id([team_id, review_template_group_id])\n  @@index([review_template_group_id], map: \"fk_review_template_reviewer_team_review_template_group\")\n}\n\nmodel project_planning_subproject_requirement {\n  id                                                                    Int                                                                @id @default(autoincrement()) @db.UnsignedInt\n  subproject_id                                                         Int                                                                @db.UnsignedInt\n  level_id                                                              Int?                                                               @db.UnsignedInt\n  mezzanine                                                             Boolean\n  emergency_exit                                                        Boolean\n  lift_needed                                                           Boolean\n  pathways_width                                                        Decimal?                                                           @db.Decimal(10, 4)\n  pathways_height                                                       Decimal?                                                           @db.Decimal(10, 4)\n  testing_what                                                          String?                                                            @db.VarChar(1024)\n  temperature_max                                                       Decimal?                                                           @db.Decimal(10, 1)\n  temperature_min                                                       Decimal?                                                           @db.Decimal(10, 1)\n  humidity_max                                                          Decimal?                                                           @db.Decimal(10, 1)\n  humidity_min                                                          Decimal?                                                           @db.Decimal(10, 1)\n  reinforced_walls_needed                                               Boolean\n  clear_height                                                          Decimal?                                                           @db.Decimal(10, 4)\n  fire_sprinkler_temp_max                                               Decimal?                                                           @db.Decimal(10, 1)\n  fire_sprinkler_temp_min                                               Decimal?                                                           @db.Decimal(10, 1)\n  fire_class                                                            project_planning_subproject_requirement_fire_class?\n  hazardous_material                                                    Boolean\n  max_noise                                                             Decimal?                                                           @db.Decimal(10, 1)\n  differential_pressure                                                 Decimal?                                                           @db.Decimal(10, 1)\n  storage_how                                                           String?                                                            @db.VarChar(1024)\n  storage_after_testing                                                 String?                                                            @db.VarChar(1024)\n  storage_time_length                                                   String?                                                            @db.VarChar(1024)\n  created_by                                                            Int                                                                @db.UnsignedInt\n  creation_ts                                                           DateTime                                                           @default(now()) @db.Timestamp(0)\n  updated_by                                                            Int?                                                               @db.UnsignedInt\n  update_ts                                                             DateTime?                                                          @db.Timestamp(0)\n  pathways_frequency_of_use                                             project_planning_subproject_requirement_pathways_frequency_of_use?\n  pathways_vehicles                                                     String?\n  mezzanine_height                                                      Decimal?                                                           @db.Decimal(10, 1)\n  outside_access_width                                                  Decimal?                                                           @db.Decimal(10, 1)\n  outside_access_height                                                 Decimal?                                                           @db.Decimal(10, 1)\n  outside_access_door_type                                              project_planning_subproject_requirement_outside_access_door_type?\n  testing_moving_how                                                    project_planning_subproject_requirement_testing_moving_how?\n  testing_frequency                                                     project_planning_subproject_requirement_testing_frequency?\n  lab_height                                                            Decimal?                                                           @db.Decimal(10, 1)\n  foundation_requirements                                               String?                                                            @db.VarChar(1024)\n  crane_load                                                            Decimal?                                                           @db.Decimal(10, 1)\n  crane_covered_area                                                    Decimal?                                                           @db.Decimal(10, 1)\n  exhaust_needed                                                        Boolean\n  exhaust_filtering                                                     Boolean\n  exhaust_placement                                                     project_planning_subproject_requirement_exhaust_placement?\n  exhaust_chemicals                                                     String?                                                            @db.VarChar(1024)\n  comments                                                              String?                                                            @db.MediumText\n  new_user_project_planning_subproject_requirement_created_byTonew_user new_user                                                           @relation(\"project_planning_subproject_requirement_created_byTonew_user\", fields: [created_by], references: [id], map: \"fk_project_planning_subproject_requirement_created_by\")\n  location_level                                                        location_level?                                                    @relation(fields: [level_id], references: [level_id], onDelete: Restrict, map: \"fk_project_planning_subproject_requirement_level\")\n  new_user_project_planning_subproject_requirement_updated_byTonew_user new_user?                                                          @relation(\"project_planning_subproject_requirement_updated_byTonew_user\", fields: [updated_by], references: [id], onDelete: Restrict, map: \"fk_project_planning_subproject_requirement_updated_by\")\n  project_planning_subproject                                           project_planning_subproject                                        @relation(fields: [subproject_id], references: [id], onDelete: Cascade, map: \"fk_subproject_requirement_subproject\")\n  project_planning_subproject_requirement_attachment                    project_planning_subproject_requirement_attachment[]\n\n  @@index([created_by], map: \"fk_project_planning_subproject_requirement_created_by\")\n  @@index([level_id], map: \"fk_project_planning_subproject_requirement_level\")\n  @@index([updated_by], map: \"fk_project_planning_subproject_requirement_updated_by\")\n  @@index([subproject_id], map: \"fk_subproject_requirement_subproject\")\n}\n\nmodel warp_purchase_order_type {\n  purchase_order_type_id Int                   @id @db.UnsignedInt\n  name                   String                @db.VarChar(512)\n  warp_purchase_order    warp_purchase_order[]\n}\n\nmodel request_type_team {\n  request_type_team_id Int                    @id @default(autoincrement()) @db.UnsignedInt\n  request_type_id      Int                    @db.UnsignedInt\n  team_id              Int                    @db.UnsignedInt\n  type                 request_type_team_type\n  request_type         request_type           @relation(fields: [request_type_id], references: [request_type_id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_request_type_team_request_type\")\n  team                 team                   @relation(fields: [team_id], references: [id], onUpdate: NoAction, map: \"fk_request_type_team_team\")\n\n  @@index([request_type_id], map: \"fk_request_type_team_request_type\")\n  @@index([team_id], map: \"fk_request_type_team_team\")\n}\n\nmodel document_package_document {\n  id               Int              @id @default(autoincrement())\n  package_id       Int              @db.UnsignedInt\n  document_id      Int              @db.UnsignedInt\n  document         document         @relation(fields: [document_id], references: [document_id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_document_id\")\n  document_package document_package @relation(fields: [package_id], references: [package_id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_package_id\")\n\n  @@unique([package_id, document_id], map: \"uk_package_id_document_id\")\n  @@index([document_id], map: \"fk_document_id\")\n}\n\nmodel comment_attachment {\n  comment_attachment_id Int        @id @default(autoincrement()) @db.UnsignedInt\n  comment_id            Int        @db.UnsignedInt\n  attachment_id         String     @db.VarChar(128)\n  creation_ts           DateTime   @default(now()) @db.Timestamp(0)\n  created_by            Int        @db.UnsignedInt\n  attachment            attachment @relation(fields: [attachment_id], references: [attachment_id], onDelete: Cascade, map: \"fk_comment_attachment_attachment_id\")\n  comment               comment    @relation(fields: [comment_id], references: [comment_id], onDelete: Cascade, map: \"fk_comment_attachment_comment_id\")\n  new_user              new_user   @relation(fields: [created_by], references: [id], map: \"fk_comment_attachment_created_by\")\n\n  @@index([attachment_id], map: \"fk_comment_attachment_attachment_id\")\n  @@index([comment_id], map: \"fk_comment_attachment_comment_id\")\n  @@index([created_by], map: \"fk_comment_attachment_created_by\")\n}\n\nmodel team_member_area_discipline {\n  team_member_id         Int                 @db.UnsignedInt\n  area_id                Int                 @db.UnsignedInt\n  location_discipline_id Int                 @db.UnsignedInt\n  area                   area                @relation(fields: [area_id], references: [area_id], onDelete: Cascade, map: \"fk_team_member_area_discipline_area_id\")\n  location_discipline    location_discipline @relation(fields: [location_discipline_id], references: [id], onDelete: Cascade, map: \"fk_team_member_area_discipline_location_discipline_id\")\n  team_member            team_member         @relation(fields: [team_member_id], references: [id], onDelete: Cascade, map: \"fk_team_member_area_discipline_member_id\")\n\n  @@id([team_member_id, area_id, location_discipline_id])\n  @@index([area_id], map: \"fk_team_member_area_discipline_area_id\")\n  @@index([location_discipline_id], map: \"fk_team_member_area_discipline_location_discipline_id\")\n}\n\nmodel project_planning_subproject_requirement_attachment {\n  project_planning_subproject_requirement_id Int                                     @db.UnsignedInt\n  attachment_id                              String                                  @db.VarChar(36)\n  is_deleted                                 Int?                                    @default(0) @db.TinyInt\n  attachment                                 attachment                              @relation(fields: [attachment_id], references: [attachment_id], onDelete: NoAction, map: \"fk_project_planning_subproject_requirement_attachment_attachment\")\n  project_planning_subproject_requirement    project_planning_subproject_requirement @relation(fields: [project_planning_subproject_requirement_id], references: [id], onDelete: Cascade, map: \"fk_requirement_attachment_subproject_requirement\")\n\n  @@id([project_planning_subproject_requirement_id, attachment_id])\n  @@index([attachment_id], map: \"fk_project_planning_subproject_requirement_attachment_attachment\")\n}\n\nmodel issue_assigned {\n  id               Int            @id @default(autoincrement()) @db.UnsignedInt\n  issue_id         Int            @db.UnsignedInt\n  warp_supplier_id Int?           @db.UnsignedInt\n  tesla_user_id    Int?           @db.UnsignedInt\n  issue            issue          @relation(fields: [issue_id], references: [issue_id], onDelete: Cascade, map: \"fk_issue_assigned_issue\")\n  new_user         new_user?      @relation(fields: [tesla_user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_issue_assigned_tesla_user\")\n  warp_supplier    warp_supplier? @relation(fields: [warp_supplier_id], references: [supplier_id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_issue_assigned_warp_supplier\")\n\n  @@index([issue_id], map: \"fk_issue_assigned_issue\")\n  @@index([tesla_user_id], map: \"fk_issue_assigned_tesla_user\")\n  @@index([warp_supplier_id], map: \"fk_issue_assigned_warp_supplier\")\n}\n\nmodel issue_discipline {\n  issue_id      Int        @db.UnsignedInt\n  discipline_id Int        @db.UnsignedInt\n  discipline    discipline @relation(fields: [discipline_id], references: [discipline_id], map: \"fk_issue_discipline_discipline\")\n  issue         issue      @relation(fields: [issue_id], references: [issue_id], onDelete: Cascade, map: \"fk_issue_discipline_issue\")\n\n  @@id([issue_id, discipline_id])\n  @@index([discipline_id], map: \"fk_issue_discipline_discipline\")\n}\n\nmodel notification {\n  id                Int                @id @default(autoincrement()) @db.UnsignedInt\n  recipient_id      Int                @db.UnsignedInt\n  type              notification_type\n  location_id       Int                @db.UnsignedInt\n  scope_id          Int?               @db.UnsignedInt\n  request_id        Int?               @db.UnsignedInt\n  comment_id        Int?               @db.UnsignedInt\n  issue_id          Int?               @db.UnsignedInt\n  doc_revision_id   Int?               @db.UnsignedInt\n  doc_package_id    Int?               @db.UnsignedInt\n  read_ts           DateTime?          @db.Timestamp(0)\n  created_by        Int                @db.UnsignedInt\n  creation_ts       DateTime           @default(now()) @db.Timestamp(0)\n  comment           comment?           @relation(fields: [comment_id], references: [comment_id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_notification_comment\")\n  created_by_user   new_user           @relation(fields: [created_by], references: [id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_notification_created_by\")\n  document_package  document_package?  @relation(fields: [doc_package_id], references: [package_id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_notification_doc_package\")\n  document_revision document_revision? @relation(fields: [doc_revision_id], references: [document_revision_id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_notification_doc_revision\")\n  issue             issue?             @relation(fields: [issue_id], references: [issue_id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_notification_issue\")\n  location          location           @relation(fields: [location_id], references: [location_id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_notification_location\")\n  recipient_user    new_user           @relation(\"notification_recipient_idTonew_user\", fields: [recipient_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_notification_recipient_id\")\n  request           request?           @relation(fields: [request_id], references: [request_id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_notification_request\")\n  scope             scope?             @relation(fields: [scope_id], references: [scope_id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_notification_scope\")\n\n  @@index([location_id], map: \"fk_notification_location\")\n  @@index([created_by], map: \"fk_notification_created_by\")\n  @@index([recipient_id], map: \"fk_notification_recipient_id\")\n  @@index([comment_id], map: \"fk_notification_comment\")\n  @@index([doc_package_id], map: \"fk_notification_doc_package\")\n  @@index([issue_id], map: \"fk_notification_issue\")\n  @@index([request_id], map: \"fk_notification_request\")\n  @@index([scope_id], map: \"fk_notification_scope\")\n  @@index([doc_revision_id], map: \"fk_notification_doc_revision\")\n}\n\nmodel area_category {\n  area_category_id Int    @id @default(autoincrement()) @db.UnsignedInt\n  name             String @db.VarChar(45)\n  area             area[]\n}\n\nmodel scope_stakeholder_team_member {\n  scope_id       Int         @db.UnsignedInt\n  team_member_id Int         @db.UnsignedInt\n  scope          scope       @relation(fields: [scope_id], references: [scope_id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_scope_stakeholder_team_member_scope\")\n  team_member    team_member @relation(fields: [team_member_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_scope_stakeholder_team_member_team_member\")\n\n  @@id([scope_id, team_member_id])\n  @@index([team_member_id], map: \"fk_scope_stakeholder_team_member_team_member\")\n}\n\nmodel document_field_type {\n  id                                         Int                                          @id @default(autoincrement()) @db.UnsignedInt\n  field_key                                  String                                       @unique(map: \"uk_document_field_key\") @db.VarChar(255)\n  is_core                                    Boolean                                      @default(false)\n  default_display_name                       String                                       @db.VarChar(255)\n  location_document_field_type               location_document_field_type[]\n  location_document_numbering_scheme_segment location_document_numbering_scheme_segment[]\n}\n\nmodel location_document_numbering_scheme {\n  id                                                               Int                                          @id @default(autoincrement()) @db.UnsignedInt\n  sequence_number_length                                           Int?                                         @db.UnsignedInt\n  sequence_number_start                                            Int?                                         @db.UnsignedInt\n  location_id                                                      Int                                          @unique(map: \"uk_loc_doc_num_scheme_location\") @db.UnsignedInt\n  creation_ts                                                      DateTime                                     @default(now()) @db.Timestamp(0)\n  created_by                                                       Int                                          @db.UnsignedInt\n  update_ts                                                        DateTime                                     @default(now()) @db.Timestamp(0)\n  updated_by                                                       Int                                          @db.UnsignedInt\n  location                                                         location                                     @relation(fields: [location_id], references: [location_id], onDelete: Cascade, map: \"fk_loc_doc_num_scheme\")\n  new_user_location_document_numbering_scheme_created_byTonew_user new_user                                     @relation(\"location_document_numbering_scheme_created_byTonew_user\", fields: [created_by], references: [id], map: \"fk_loc_doc_num_scheme_created_by\")\n  new_user_location_document_numbering_scheme_updated_byTonew_user new_user                                     @relation(\"location_document_numbering_scheme_updated_byTonew_user\", fields: [updated_by], references: [id], map: \"fk_loc_doc_num_scheme_updated_by\")\n  location_document_numbering_scheme_segment                       location_document_numbering_scheme_segment[]\n\n  @@index([created_by], map: \"fk_loc_doc_num_scheme_created_by\")\n  @@index([updated_by], map: \"fk_loc_doc_num_scheme_updated_by\")\n}\n\nmodel location_document_numbering_scheme_segment {\n  id                                 Int                                @id @default(autoincrement()) @db.UnsignedInt\n  scheme_id                          Int                                @db.UnsignedInt\n  document_field_type_id             Int                                @db.UnsignedInt\n  position                           Int                                @db.UnsignedInt\n  document_field_type                document_field_type                @relation(fields: [document_field_type_id], references: [id], onDelete: NoAction, map: \"fk_loc_doc_num_scheme_seg_doc_field_type\")\n  location_document_numbering_scheme location_document_numbering_scheme @relation(fields: [scheme_id], references: [id], onDelete: Cascade, map: \"fk_loc_doc_num_scheme_seg_scheme\")\n\n  @@unique([scheme_id, document_field_type_id, position], map: \"uk_scheme_id_document_field_type_id_position\")\n  @@index([document_field_type_id], map: \"fk_loc_doc_num_scheme_seg_doc_field_type\")\n}\n\nmodel project_document_revision {\n  id                Int               @id @default(autoincrement()) @db.UnsignedInt\n  project_id        Int               @db.UnsignedInt\n  creation_ts       DateTime          @default(now()) @db.Timestamp(0)\n  revision_id       Int               @db.UnsignedInt\n  created_by        Int               @db.UnsignedInt\n  new_user          new_user          @relation(fields: [created_by], references: [id], onDelete: NoAction, map: \"fk_project_document_revision_created_by_user\")\n  project           project           @relation(fields: [project_id], references: [project_id], onDelete: Cascade, map: \"fk_project_document_revision_project\")\n  document_revision document_revision @relation(fields: [revision_id], references: [document_revision_id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_project_document_revision_revision\")\n\n  @@unique([project_id, revision_id], map: \"uk_project_document_revision\")\n  @@index([created_by], map: \"fk_project_document_revision_created_by_user\")\n  @@index([revision_id], map: \"fk_project_document_revision_revision\")\n}\n\nmodel review_decision_attachment {\n  review_decision_id Int             @db.UnsignedInt\n  attachment_id      String          @db.VarChar(36)\n  is_deleted         Int?            @default(0) @db.TinyInt\n  attachment         attachment      @relation(fields: [attachment_id], references: [attachment_id], onDelete: Cascade, map: \"fk_review_decision_attachment_attachment\")\n  review_decision    review_decision @relation(fields: [review_decision_id], references: [id], onDelete: Cascade, map: \"fk_review_decision_attachment_review_decision\")\n\n  @@id([review_decision_id, attachment_id])\n  @@index([attachment_id], map: \"fk_review_decision_attachment_attachment\")\n}\n\nmodel location_document_field_type {\n  location_id            Int                 @db.UnsignedInt\n  document_field_type_id Int                 @db.UnsignedInt\n  is_required            Boolean             @default(false)\n  display_name           String?             @db.VarChar(255)\n  update_ts              DateTime            @default(now()) @db.Timestamp(0)\n  updated_by             Int?                @db.UnsignedInt\n  document_field_type    document_field_type @relation(fields: [document_field_type_id], references: [id], map: \"fk_loc_doc_field_id\")\n  location               location            @relation(fields: [location_id], references: [location_id], onDelete: Cascade, map: \"fk_loc_doc_field_type_loc\")\n  updated_by_user        new_user?           @relation(\"location_document_field_type_updated_byTonew_user\", fields: [updated_by], references: [id], onDelete: Restrict, map: \"fk_loc_doc_type_updated_by\")\n\n  @@id([location_id, document_field_type_id])\n  @@index([document_field_type_id], map: \"fk_loc_doc_field_id\")\n  @@index([updated_by], map: \"fk_loc_doc_type_updated_by\")\n}\n\nmodel task {\n  id                   Int                @id @default(autoincrement()) @db.UnsignedInt\n  type                 task_type\n  status               task_status\n  location_id          Int                @db.UnsignedInt\n  discipline_id        Int?               @db.UnsignedInt\n  review_flow_id       Int?               @db.UnsignedInt\n  review_group_id      Int?               @unique(map: \"uk_task_review_group\") @db.UnsignedInt\n  scope_id             Int?               @db.UnsignedInt\n  request_id           Int?               @db.UnsignedInt\n  review_template_id   Int?               @db.UnsignedInt\n  document_revision_id Int?               @db.UnsignedInt\n  project_id           Int?               @db.UnsignedInt\n  issuing_company_id   Int                @db.UnsignedInt\n  due_date             DateTime           @db.Timestamp(0)\n  creation_ts          DateTime           @default(now()) @db.Timestamp(0)\n  created_by           Int                @db.UnsignedInt\n  update_ts            DateTime           @default(now()) @db.Timestamp(0)\n  updated_by           Int                @db.UnsignedInt\n  company              company            @relation(fields: [issuing_company_id], references: [id], onUpdate: NoAction, map: \"fk_task_company\")\n  created_by_user      new_user           @relation(\"task_created_byTonew_user\", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_task_created_by_user\")\n  discipline           discipline?        @relation(fields: [discipline_id], references: [discipline_id], onUpdate: NoAction, map: \"fk_task_discipline\")\n  document_revision    document_revision? @relation(fields: [document_revision_id], references: [document_revision_id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_task_document_revision\")\n  location             location           @relation(fields: [location_id], references: [location_id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_task_location\")\n  project              project?           @relation(fields: [project_id], references: [project_id], onUpdate: NoAction, map: \"fk_task_project\")\n  request              request?           @relation(fields: [request_id], references: [request_id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_task_request\")\n  review_flow          review_flow?       @relation(fields: [review_flow_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_task_review_flow\")\n  review_group         review_group?      @relation(fields: [review_group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_task_review_group\")\n  review_template      review_template?   @relation(fields: [review_template_id], references: [id], onUpdate: NoAction, map: \"fk_task_review_template\")\n  scope                scope?             @relation(fields: [scope_id], references: [scope_id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_task_scope\")\n  updated_by_user      new_user           @relation(\"task_updated_byTonew_user\", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_task_updated_by_user\")\n  blocker_of           task_blocker[]     @relation(\"task_blocker_blocker_task_idTotask\")\n  blocked_by           task_blocker[]     @relation(\"task_blocker_task_idTotask\")\n  task_user            task_user[]\n\n  @@index([created_by], map: \"fk_task_created_by_user\")\n  @@index([discipline_id], map: \"fk_task_discipline\")\n  @@index([document_revision_id], map: \"fk_task_document_revision\")\n  @@index([location_id], map: \"fk_task_location\")\n  @@index([request_id], map: \"fk_task_request\")\n  @@index([review_flow_id], map: \"fk_task_review_flow\")\n  @@index([review_template_id], map: \"fk_task_review_template\")\n  @@index([scope_id], map: \"fk_task_scope\")\n  @@index([updated_by], map: \"fk_task_updated_by_user\")\n  @@index([project_id], map: \"fk_task_project\")\n  @@index([issuing_company_id], map: \"fk_task_company\")\n}\n\nmodel task_user {\n  task_id  Int      @db.UnsignedInt\n  user_id  Int      @db.UnsignedInt\n  task     task     @relation(fields: [task_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_task_user_task\")\n  new_user new_user @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_task_user_user\")\n\n  @@id([task_id, user_id])\n  @@index([user_id], map: \"fk_task_user_user\")\n}\n\nmodel program {\n  id               Int                @id @default(autoincrement()) @db.UnsignedInt\n  name             String             @db.VarChar(45)\n  type             String             @unique(map: \"type\") @db.VarChar(45)\n  abbreviation     String             @unique(map: \"abbreviation\") @db.VarChar(16)\n  location_program location_program[]\n}\n\nmodel location_program {\n  id               Int                @id @default(autoincrement()) @db.UnsignedInt\n  location_id      Int                @db.UnsignedInt\n  program_id       Int                @db.UnsignedInt\n  created_by       Int                @db.UnsignedInt\n  creation_ts      DateTime           @default(now()) @db.Timestamp(0)\n  abbreviation     String?            @db.VarChar(16)\n  document_program document_program[]\n  user             new_user           @relation(fields: [created_by], references: [id], map: \"fk_location_program_created_by\")\n  location         location           @relation(fields: [location_id], references: [location_id], onDelete: Cascade, map: \"fk_location_program_location\")\n  program          program            @relation(fields: [program_id], references: [id], map: \"fk_location_program_program\")\n  project_program  project_program[]\n\n  @@unique([location_id, program_id], map: \"uk_location_program\")\n  @@index([created_by], map: \"fk_location_program_created_by\")\n  @@index([program_id], map: \"fk_location_program_program\")\n}\n\nmodel document_csi_division {\n  document_id     Int          @db.UnsignedInt\n  csi_division_id Int          @db.UnsignedInt\n  csi_division    csi_division @relation(fields: [csi_division_id], references: [division_id], map: \"fk_document_csi_division_csi_division\")\n  document        document     @relation(fields: [document_id], references: [document_id], onDelete: Cascade, map: \"fk_document_csi_division_document\")\n\n  @@id([document_id, csi_division_id])\n  @@index([csi_division_id], map: \"fk_document_csi_division_csi_division\")\n}\n\nmodel task_blocker {\n  task_id         Int  @db.UnsignedInt\n  blocker_task_id Int  @db.UnsignedInt\n  blocker_task    task @relation(\"task_blocker_blocker_task_idTotask\", fields: [blocker_task_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_task_blocker_blocker_task\")\n  blocked_task    task @relation(\"task_blocker_task_idTotask\", fields: [task_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_task_blocker_task\")\n\n  @@id([task_id, blocker_task_id])\n  @@index([blocker_task_id], map: \"fk_task_blocker_blocker_task\")\n}\n\nmodel access_request {\n  id                     Int                    @id @default(autoincrement()) @db.UnsignedInt\n  user_id                Int                    @db.UnsignedInt\n  location_id            Int                    @db.UnsignedInt\n  request_justification  String?                @db.MediumText\n  status                 access_request_status? @default(pending)\n  responded_by           Int?                   @db.UnsignedInt\n  response_ts            DateTime?              @db.Timestamp(0)\n  response_justification String?                @db.MediumText\n  created_by             Int                    @db.UnsignedInt\n  creation_ts            DateTime               @default(now()) @db.Timestamp(0)\n  created_by_user        new_user               @relation(\"access_request_created_byTonew_user\", fields: [created_by], references: [id], map: \"fk_access_request_created_by\")\n  location               location               @relation(fields: [location_id], references: [location_id], map: \"fk_access_request_location_id\")\n  responded_by_user      new_user?              @relation(\"access_request_responded_byTonew_user\", fields: [responded_by], references: [id], onDelete: Restrict, map: \"fk_access_request_responded_by\")\n  new_user               new_user               @relation(\"access_request_user_idTonew_user\", fields: [user_id], references: [id], onDelete: Cascade, map: \"fk_access_request_user_id\")\n\n  @@index([created_by], map: \"fk_access_request_created_by\")\n  @@index([location_id], map: \"fk_access_request_location_id\")\n  @@index([responded_by], map: \"fk_access_request_responded_by\")\n  @@index([user_id], map: \"fk_access_request_user_id\")\n}\n\nmodel document_program {\n  document_id         Int              @db.UnsignedInt\n  location_program_id Int              @db.UnsignedInt\n  created_at          DateTime         @default(now()) @db.Timestamp(0)\n  document            document         @relation(fields: [document_id], references: [document_id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_document_program_document\")\n  location_program    location_program @relation(fields: [location_program_id], references: [id], onDelete: NoAction, map: \"fk_document_program_location_program\")\n\n  @@id([document_id, location_program_id])\n  @@index([location_program_id], map: \"fk_document_program_location_program\")\n}\n\nmodel project_program {\n  project_id          Int              @db.UnsignedInt\n  location_program_id Int              @db.UnsignedInt\n  location_program    location_program @relation(fields: [location_program_id], references: [id], map: \"fk_project_program_location_program\")\n  project             project          @relation(fields: [project_id], references: [project_id], onDelete: Cascade, map: \"fk_project_program_project\")\n\n  @@id([project_id, location_program_id])\n  @@index([location_program_id], map: \"fk_project_program_location_program\")\n}\n\nmodel issue_stakeholder {\n  issue_id         Int              @db.UnsignedInt\n  type_id          Int              @db.UnsignedInt\n  user_id          Int              @db.UnsignedInt\n  issue            issue            @relation(fields: [issue_id], references: [issue_id], onDelete: Cascade, map: \"fk_issue_stakeholder_issue\")\n  stakeholder_type stakeholder_type @relation(fields: [type_id], references: [stakeholder_type_id], map: \"fk_issue_stakeholder_type\")\n  new_user         new_user         @relation(fields: [user_id], references: [id], map: \"fk_issue_stakeholder_user\")\n\n  @@id([issue_id, type_id, user_id])\n  @@index([type_id], map: \"fk_issue_stakeholder_type\")\n  @@index([user_id], map: \"fk_issue_stakeholder_user\")\n}\n\nmodel document_additional_area {\n  document_id Int      @db.UnsignedInt\n  area_id     Int      @db.UnsignedInt\n  area        area     @relation(fields: [area_id], references: [area_id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_area\")\n  document    document @relation(fields: [document_id], references: [document_id], onDelete: Cascade, onUpdate: NoAction, map: \"fk_document\")\n\n  @@id([area_id, document_id])\n  @@index([document_id], map: \"fk_document\")\n}\n\nmodel document_submittal_category {\n  id          Int        @id @default(autoincrement()) @db.UnsignedInt\n  location_id Int        @db.UnsignedInt\n  name        String     @db.VarChar(64)\n  document    document[]\n  location    location   @relation(fields: [location_id], references: [location_id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_document_submittal_category_location\")\n\n  @@unique([name, location_id], map: \"uk_document_submittal_category_name\")\n  @@index([location_id], map: \"fk_document_submittal_category_location\")\n}\n\nmodel document_submittal_detail {\n  id                      Int                     @id @default(autoincrement()) @db.UnsignedInt\n  location_id             Int                     @db.UnsignedInt\n  name                    String                  @db.VarChar(64)\n  submittal_type_id       Int                     @db.UnsignedInt\n  document                document[]\n  location                location                @relation(fields: [location_id], references: [location_id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_document_submittal_detail_location\")\n  document_submittal_type document_submittal_type @relation(fields: [submittal_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_document_submittal_detail_type\")\n\n  @@unique([name, location_id], map: \"uk_document_submittal_detail_name\")\n  @@index([location_id], map: \"fk_document_submittal_detail_location\")\n  @@index([submittal_type_id], map: \"fk_document_submittal_detail_type\")\n}\n\nmodel document_submittal_type {\n  id                        Int                         @id @default(autoincrement()) @db.UnsignedInt\n  location_id               Int                         @db.UnsignedInt\n  name                      String                      @db.VarChar(64)\n  document                  document[]\n  document_submittal_detail document_submittal_detail[]\n  location                  location                    @relation(fields: [location_id], references: [location_id], onDelete: NoAction, onUpdate: NoAction, map: \"fk_document_submittal_type_location\")\n\n  @@unique([name, location_id], map: \"uk_document_submittal_type_name\")\n  @@index([location_id], map: \"fk_document_submittal_type_location\")\n}\n\nview cost_line_item_total {\n  cost_line_item_id                   Int      @unique @default(0) @db.UnsignedInt\n  cost_estimate_id                    Int      @default(0) @db.UnsignedInt\n  total_direct_costs                  Decimal  @default(0.00) @db.Decimal(28, 2)\n  design_contingency_percentage       Decimal? @db.Decimal(10, 6)\n  construction_contingency_percentage Decimal? @db.Decimal(10, 6)\n  discipline_id                       Int?     @db.UnsignedInt\n}\n\nview cost_estimate_subtotal {\n  cost_estimate_id       Int      @unique @default(0) @db.UnsignedInt\n  total_direct_costs     Decimal? @db.Decimal(28, 2)\n  total_contigency_costs Decimal? @db.Decimal(28, 2)\n  total_estimate_cost    Decimal? @db.Decimal(28, 2)\n}\n\nview cost_sub_project_total {\n  cost_sub_project_id   Int              @unique @default(0) @db.UnsignedInt\n  subproject_total_cost Decimal?         @db.Decimal(28, 2)\n  cost_sub_project      cost_sub_project @relation(fields: [cost_sub_project_id], references: [cost_sub_project_id])\n}\n\nview cost_estimate_total {\n  cost_estimate_id    Int           @unique @default(0) @db.UnsignedInt\n  estimate_total_cost Decimal?      @db.Decimal(28, 2)\n  cost_estimate       cost_estimate @relation(fields: [cost_estimate_id], references: [cost_estimate_id])\n}\n\n/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.\nview approved_estimates_summary {\n  subscope                  String   @default(\"\") @db.VarChar(255)\n  location_id               Int      @default(0) @db.UnsignedInt\n  location_description      String   @default(\"\") @db.VarChar(100)\n  cost_project_id           Int      @default(0) @db.UnsignedInt\n  project_name              String   @default(\"\") @db.VarChar(256)\n  cost_sub_project_id       Int      @default(0) @db.UnsignedInt\n  sub_project_name          String   @default(\"\") @db.VarChar(256)\n  cost_estimate_id          Int      @default(0) @db.UnsignedInt\n  cost_estimate_description String?  @db.LongText\n  approver_notes            String   @db.LongText\n  approval_ts               DateTime @default(dbgenerated(\"'0000-00-00 00:00:00'\")) @db.Timestamp(0)\n  approver_id               Int      @default(0) @db.UnsignedInt\n  approver_name             String   @default(\"\") @db.VarChar(128)\n  submitter_notes           String   @db.LongText\n  submission_ts             DateTime @default(dbgenerated(\"'0000-00-00 00:00:00'\")) @db.Timestamp(0)\n  submitter_id              Int      @default(0) @db.UnsignedInt\n  submitter_name            String   @default(\"\") @db.VarChar(128)\n  total_cost                Decimal? @db.Decimal(28, 2)\n  currency                  String   @default(\"\") @db.VarChar(255)\n\n  @@ignore\n}\n\nenum request_type_user_type {\n  recipient\n  reviewer\n}\n\nenum location_review_setting_domain {\n  document\n}\n\nenum review_template_step_aggregation_strategy {\n  acknowledge\n  ignore\n}\n\nenum review_group_aggregation_strategy {\n  acknowledge\n  ignore\n}\n\nenum review_step_aggregation_strategy {\n  acknowledge\n  ignore\n}\n\nenum review_template_group_aggregation_strategy {\n  acknowledge\n  ignore\n}\n\nenum scope_priority {\n  critical\n  high\n  medium\n  low\n  undetermined\n}\n\nenum role_level {\n  location\n  entity\n}\n\nenum role_user_type {\n  internal\n  external\n}\n\nenum lead_address_address_provider {\n  google\n  baidu\n}\n\nenum review_template_group_reviewer_group_type {\n  user_list\n  line_manager\n  group\n  area_manager\n  business_developer\n  lead_approver\n}\n\nenum review_group_reviewer_group_type {\n  user_list\n  line_manager\n  group\n  area_manager\n  business_developer\n  lead_approver\n}\n\nenum issue_status {\n  open\n  in_progress\n  in_dispute\n  ready_to_inspect\n  closed\n}\n\nenum document_markup_type {\n  cloud\n  callout\n  stamp\n}\n\nenum project_planning_subproject_requirement_fire_class {\n  A\n  B\n  C\n  D\n  E\n  F\n}\n\nenum request_type_team_type {\n  recipient\n  reviewer\n}\n\nenum request_recipient_type {\n  area_manager\n  custom_user\n  scope_supplier\n  team_member\n}\n\nenum issue_priority {\n  gating\n  high\n  medium\n  low\n}\n\nenum project_planning_subproject_requirement_testing_frequency {\n  Hourly\n  Daily\n  Weekly\n  Monthly\n}\n\nenum project_planning_subproject_requirement_testing_moving_how {\n  Forklift\n  Fork_truck\n  Tugger_train_Trolley\n  Human_Pushed_Trolley\n  Movable_table\n  Rack\n  Driving_In\n}\n\nenum project_planning_subproject_requirement_outside_access_door_type {\n  Roll_up_with_door\n  Roll_up\n  Other\n  N_A\n}\n\nenum project_planning_subproject_requirement_exhaust_placement {\n  Inhouse\n  Outhouse\n}\n\nenum review_flow_subject_type {\n  all\n  saving\n  scope\n  request\n  lead\n  document_revision\n}\n\nenum review_template_subject_type {\n  all\n  saving\n  scope\n  request\n  lead\n  document_revision\n}\n\nenum reviewer_authority_subject_type {\n  all\n  saving\n  scope\n  request\n  lead\n  document_revision\n}\n\nenum project_planning_subproject_requirement_pathways_frequency_of_use {\n  lt_1_per_day\n  e_1_per_day\n  gt_1_per_day\n  lt_1_per_3_days\n  gt_1_per_week\n  e_1_per_week\n}\n\nenum task_status {\n  pending_activation\n  active\n  blocked\n  completed\n  closed\n}\n\nenum notification_type {\n  commentMention\n  commentRecipient\n  issueAssigned\n  issueUpdated\n  docRevisionShared\n  docRevisionCreated\n  submittalCreated\n  requestCreated\n  requestFormUpdated\n  requestRecipientsUpdated\n}\n\nenum document_permit_frequency {\n  annually\n}\n\nenum access_request_status {\n  pending\n  approved\n  rejected\n}\n\nenum review_decision_status {\n  none\n  pending\n  approved\n  rejected\n  cancelled\n  skipped\n  approved_with_comments\n  revise_and_resubmit\n}\n\nenum task_type {\n  review_document\n  review_request\n  respond_request\n  request_approval_document\n  revise_and_resubmit_document\n}\n\nenum review_group_approval_strategy {\n  all\n  first\n  lowest_of_all\n}\n\nenum review_step_approval_strategy {\n  all\n  first\n  lowest_of_all\n}\n\nenum review_flow_approval_strategy {\n  all\n  first\n  lowest_of_all\n}\n\nenum review_template_group_approval_strategy {\n  all\n  first\n  lowest_of_all\n}\n\nenum review_template_step_approval_strategy {\n  all\n  first\n  lowest_of_all\n}\n\nenum review_template_approval_strategy {\n  all\n  first\n  lowest_of_all\n}\n```\n\n      this is the prisma schema for the database, can you check\n      \nLooking at the Prisma schema, I see that `team_member` has the correct relation to both `team` and `new_user`. To fix the document query to properly filter by team membership, you should modify the query like this:\n\n```typescript\ncreated_by_user: filter.executingTeamIDs\n  ? {\n      id: PrismaFilterTransformer.is(filter.createdBy),\n      [Backend] DocumentRepo.getMany query {\n      [Backend]   \"AND\": [\n      [Backend]     {},\n      [Backend]     {\n      [Backend]       \"is_deleted\": 0\n      [Backend]     },\n      [Backend]     {\n      [Backend]       \"AND\": [\n      [Backend]         {\n      [Backend]           \"created_by_user\": {\n      [Backend]             \"team_member\": {\n      [Backend]               \"some\": {\n      [Backend]                 \"team_id\": {\n      [Backend]                   \"in\": [\n      [Backend]                     4,\n      [Backend]                     3\n      [Backend]                   ]\n      [Backend]                 }\n      [Backend]               }\n      [Backend]             }\n      [Backend]           }\n      [Backend]         },\n      [Backend]         {\n      [Backend]           \"created_by_user\": {\n      [Backend]             \"id\": {\n      [Backend]               \"in\": [\n      [Backend]                 1\n      [Backend]               ]\n      [Backend]             }\n      [Backend]           }\n      [Backend]         }\n      [Backend]       ]\n      [Backend]     },\n      [Backend]     {\n      [Backend]       \"location_id\": 1\n      [Backend]     },\n      [Backend]     {},\n      [Backend]     {\n      [Backend]       \"OR\": [\n      [Backend]         {},\n      [Backend]         {},\n      [Backend]         {},\n      [Backend]       ]\n      [Backend]     }\n      [Backend]   ]\n      [Backend] }\n\nthis is my query, but the teams query is not working\n\n\nI see the issue. The problem is that you have two separate conditions for `created_by_user`. Let's combine them into a single condition:\n\n```typescript\ncreated_by_user: {\n  AND: [\n    {\n      id: PrismaFilterTransformer.is(filter.createdBy),\n    },\n    filter.executingTeamIDs ? {\n      team_member: {\n        some: {\n          team_id: PrismaFilterTransformer.is(filter.executingTeamIDs)\n        }\n      }\n    } : {}\n  ]\n}\n```\n\nThis way, both conditions (user ID and team membership) will be checked together. The query should look something like:\n\n```typescript\n{\n  AND: [\n    { is_deleted: 0 },\n    {\n      created_by_user: {\n        AND: [\n          { id: PrismaFilterTransformer.is(filter.createdBy) },\n          {\n            team_member: {\n              some: {\n                team_id: PrismaFilterTransformer.is(filter.executingTeamIDs)\n              }\n            }\n          }\n        ]\n      }\n    },\n    { location_id: 1 }\n    // ... other conditions\n  ]\n}\n```\n\nThis should properly filter documents by both the user ID and team membership.\nbut two consition s should also work right?\n\nYes, theoretically two separate conditions should also work since they're both in an AND array. If it's not working, let's check a few things:\n\n1. Verify the data in the database:\n```sql\n-- Check if the user is actually in the teams\nSELECT * FROM team_member \nWHERE user_id = 1 \nAND team_id IN (3, 4);\n\n-- Check if there are any documents created by this user\nSELECT * FROM document \nWHERE created_by = 1;\n```\n\n2. Try simplifying the query to isolate the issue:\n```typescript\n{\n  AND: [\n    { is_deleted: 0 },\n    {\n      created_by_user: {\n        team_member: {\n          some: {\n            team_id: {\n              in: [4, 3]\n            }\n          }\n        }\n      }\n    }\n  ]\n}\n```\n\n3. If you want to keep the separate conditions, maybe try restructuring them:\n```typescript\n{\n  AND: [\n    { is_deleted: 0 },\n    {\n      created_by_user: {\n        id: { in: [1] }\n      }\n    },\n    {\n      created_by_user: {\n        team_member: {\n          some: {\n            team_id: { in: [4, 3] }\n          }\n        }\n      }\n    }\n  ]\n}\n```\n\nCan you try these variations and let me know which one works? Also, it would be helpful to know if the data exists in the database as expected.\njjjjjjjjjjjjjj","messages":[{"id":{"replica_id":0,"value":0},"start":0,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":1412}}},{"id":{"replica_id":0,"value":34},"start":4368,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":1413}}},{"id":{"replica_id":0,"value":35},"start":5794,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":1414}}},{"id":{"replica_id":0,"value":87},"start":5823,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":1415}}},{"id":{"replica_id":0,"value":88},"start":6876,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":1416}}},{"id":{"replica_id":0,"value":200},"start":6956,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":1417}}},{"id":{"replica_id":0,"value":201},"start":8153,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":1418}}},{"id":{"replica_id":0,"value":301},"start":8191,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":1419}}},{"id":{"replica_id":0,"value":302},"start":8192,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":1420}}},{"id":{"replica_id":0,"value":339},"start":9052,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":1421}}},{"id":{"replica_id":0,"value":340},"start":10490,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":1422}}},{"id":{"replica_id":0,"value":720},"start":294936,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":1423}}},{"id":{"replica_id":0,"value":721},"start":295269,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":1424}}},{"id":{"replica_id":0,"value":827},"start":296682,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":1425}}},{"id":{"replica_id":0,"value":828},"start":296683,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":1426}}},{"id":{"replica_id":0,"value":1054},"start":296738,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":1427}}},{"id":{"replica_id":0,"value":1055},"start":297792,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":1428}}},{"id":{"replica_id":0,"value":1295},"start":297837,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":1429}}},{"id":{"replica_id":0,"value":1296},"start":299023,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":1430}}}],"summary":"Prisma Filter Query Team Member Issue","slash_command_output_sections":[{"range":{"start":0,"end":1},"icon":"Library","label":"Default","metadata":null},{"range":{"start":2,"end":4211},"icon":"File","label":"atom-web/src/server/new-structure/application/use-cases/document-directory/list-documents/map.ts","metadata":{"path":"atom-web/src/server/new-structure/application/use-cases/document-directory/list-documents/map.ts"}},{"range":{"start":10505,"end":294864},"icon":"File","label":"atom-web/prisma/schema.prisma","metadata":{"path":"atom-web/prisma/schema.prisma"}}],"thought_process_output_sections":[]}